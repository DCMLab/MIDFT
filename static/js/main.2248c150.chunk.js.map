{"version":3,"sources":["Player.js","DFT.js","colorMapping.js","getDftMatrices.js","roses.js","Navbar.js","svgNotation/whole.svg","svgNotation/half.svg","svgNotation/quarter.svg","svgNotation/eighth.svg","svgNotation/sixteenth.svg","ResolutionSelector.js","PcvChipsBox.js","CircleSVG.js","WavescapeSVG.js","prototypesData.js","SaveDialog.js","images/wavescapes/wavescape1.svg","images/wavescapes/wavescape2.svg","images/wavescapes/wavescape3.svg","images/wavescapes/wavescape4.svg","images/wavescapes/wavescape5.svg","images/wavescapes/wavescape6.svg","images/fourier/space1.svg","images/fourier/space2.svg","images/fourier/space3.svg","images/fourier/space4.svg","images/fourier/space5.svg","images/fourier/space6.svg","images/dh_center_logo.svg","images/Logo_EPFL.svg","Footer.js","textComponents.js","pages/Home.js","pages/Theory.js","Wavescape.js","WavescapeModule.js","Circle.js","CoefficientsModule.js","pages/Analysis.js","App.js","parser.js","index.js"],"names":["part","intervalID","currentSongDuration","TinyText","styled","Typography","fontSize","opacity","fontWeight","letterSpacing","formatDuration","value","minute","Math","floor","secondLeft","setPlayerMidiData","midiData","resolution","setCurrentSubdiv","Tone","cancel","stop","duration","partNotes","tracks","forEach","track","notes","note","push","subdiv","time","sampler","triggerAttackRelease","name","velocity","start","loop","loopEnd","urls","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","release","baseUrl","toDestination","Player","fileName","useState","playbackSliderProgress","setPlaybackSliderProgress","play","state","console","log","resume","setInterval","progress","useEffect","document","addEventListener","e","which","preventDefault","pause","stopInterval","bind","Box","sx","display","flexDirection","alignItems","width","justifyContent","Stack","direction","flexGrow","paddingLeft","IconButton","disableFocusRipple","padding","onClick","size","children","color","noWrap","paddingRight","Slider","onChange","event","newValue","seconds","mt","clearInterval","volume","dft","pcv","normalize","round","polar","N","length","coeffs","k","temp","n","math","slice","norm","map","coeff","re","im","toPolar","sumAndNormalize","sum","i","j","contToDiscRGB","d3","domain","range","gradient","angle","r","g","b","pixelColor","x","y","distance","atan2","PI","a","getRgbaFromComplex","complex","polarComplex","phi","mod","ris","Pcv","this","C","Cs","D","Ds","E","F","Fs","G","Gs","A","As","B","targetPitch","getDftCoeffDynamic","resolutionMode","currentSongBPM","normalizationType","noteResolutionValue","useSeconds","isNaN","tracksSubdivision","getSubdivision","pcvSubdivision","pitch","addNoteDuration","pcDistributions","newPcv","add","sumNorm","powerNorm","dftCoeffsSubdivision","getPcvAsArray","traces","tracesData","currPcDistributions","subdivision","wndLen","cursor","isValidNote","noteAndDuration","sumIncremental","windowLen","generateTraces","windowedPcvs","halfWndLen","ceil","incrementalWndLen","windowedPcv","winIncremental","clonePcDistributions","power","pow","sqrt","winCentered","getRosePoints","d","dataPoints","delta","cos","sin","AppBar","MuiAppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","leavingScreen","marginLeft","easeOut","enteringScreen","Navbar","setOpen","inAnalysisPage","position","Toolbar","disabled","edge","mr","variant","component","ButtonGroup","Button","Link","to","disableElevation","ResolutionSelector","setResolutionMode","retriggerAnalysis","isInputSecondsInvalid","setIsInputSecondsInvalid","resolutionTextRef","useRef","FormControl","RadioGroup","row","defaultValue","newResolutionMode","parseFloat","current","target","FormControlLabel","control","Radio","label","style","height","transform","src","sixteenthSvg","eighthSvg","marginTop","quarterSvg","halfSvg","wholeSvg","TextField","minHeight","maxWidth","error","helperText","id","inputRef","ListItem","margin","spacing","PcvChipsBox","userPcvs","setUserPcvs","rosesMat","Paper","flexWrap","listStyle","p","overflow","data","Chip","isDisabled","icon","xmlns","viewBox","fill","stroke","strokeWidth","points","rosePoints","onDelete","chipToDelete","used","chips","filter","chip","traceData","userPcv","prototypesData","coeffNumber","showNumber","circleRadius","innerWidth","theta","angles","circularSectors","cx","cy","textAnchor","innerRadius","index","inner","offset","outerRadius","startAngle","endAngle","fillOpacity","strokeOpacity","arc","pcvData","radiusScaleWidth","mark","circleMark","translateX","translateY","scale","svgRoseIcon","scaleRatio","labelName","subSup","isSub","includes","dxOffset","sign","dyOffset","dx","dy","baselineShift","protoCircleMark","verticalScale","WavescapeSVG","baseSubdivision","wsCoordinates","wsNumber","wavescapeMatrix","margins","innerSize","innerHeight","unit","mat","computeTicks","x1","x2","y1","y2","elem","rgb","alpha","SaveDialog","wavescapesData","checkNumb","setCheckNumb","checkTrace","setCheckTrace","checkProto","setCheckProto","checkPcvs","setCheckPcvs","subdivUserPcvs","setSubdivUserPcvs","wavescapesRGBA","setWavescapesRGBA","handleClose","canSave","setCanSave","anchorEl","setAnchorEl","openPopover","Boolean","undefined","newWavescapes","wavescape","newElem","replace","split","substring","tempSubdivUserPcvs","saveImages","zip","JSZip","circleSVG","CircleSVG","ReactDOMServer","renderToStaticMarkup","generateCircleSVG","wavescapeSVG","generateWavescapeSVG","file","generateAsync","type","then","content","saveAs","marginBottom","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","FormGroup","Checkbox","checked","DialogActions","currentTarget","autoFocus","Popover","anchorOrigin","vertical","horizontal","Footer","textAlign","alt","epflLogo","dhCenterLogo","marginRight","href","Info","props","backgroundColor","borderRadius","Image","objectFit","Paragraph","BlueLink","underline","textDecorationColor","Home","setInAnalysisPage","ref1","ref2","ref3","ref4","imgSize","paddingBottom","Divider","ws1","ws2","ws3","ws4","ws5","ws6","fs1","fs2","fs3","fs4","fs5","fs6","scrollIntoView","behavior","ref","Theory","ref5","ref6","paddingTop","fontStyle","Wavescape","ticks","currentWavescapeSubdiv","wavescapeWidth","canvasRef","setWsCoordinates","ticksHeight","setTicksHeight","canvas","ctx","getContext","clearRect","beginPath","moveTo","lineTo","fillStyle","drawWavescape","coord","WavescapeModule","elemsWidth","savedImage","Circle","protoDataCoeff","fullTrace","traceDataCoeff","userPcvsCoeff","currentSubdiv","performanceCoeff","targetCircleWidth","showMagAndPhase","showFullTrace","mu","currentSubdivCoeff","setCurrentSubdivCoeff","marksRadiusRatio","cartesianToPolar","Number","EPSILON","drawTrace","element","radius","devicePixelRatio","image","createImageData","rgba","putImageData","save","translate","restore","getImageData","zIndex","polarCoord","widthSvg","Tooltip","placement","arrow","title","highlight","opacityArray","reverse","highlightSubdiv","CoefficientsModule","fullTraces","coeffTracesData","showPrototypes","midiDevNotesDftCoeffs","selectedProtoPitchClasses","setSelectedProtoPitchClasses","coeffNum","Application","currentSongMidiData","setShowPrototypes","setShowMagAndPhase","setShowFullTrace","setMidiDevNotesDftCoeffs","accordionRef","accordionWidth","setAccordionWidth","elemsForEachRow","setElemsForEachRow","setElemsWidth","changeElementsSize","drawerOffset","adjustmentFractSizes","clientWidth","handleResize","window","currentNotes","handleInput","input","command","toNote","triggerAttack","triggerRelease","currentNote","playedNotes","dftCoeffs","computeDftCoeffs","updateDevices","port","manufacturer","navigator","requestMIDIAccess","midiAccess","onstatechange","inputs","onmidimessage","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","top","bottom","maxHeight","minWidth","fullWidth","InputLabel","Select","MenuItem","Switch","min","max","valueLabelDisplay","marks","Main","DrawerHeader","mixins","toolbar","App","useTheme","setFile","setWavescapesData","setCoeffTracesData","setPcDistributions","windowedCoeffTraces","setWindowedCoeffTraces","mapCurrentSubdiv","setMapCurrentSubdiv","setWindowLen","wavescapeResolution","setWavescapeResolution","circleResolution","setCircleResolution","setNormalizationType","windowingType","setWindowingType","normWindSelectedVal","setNormWindSelectedVal","invalidWndLen","setInvalidWndLen","textfieldWndLen","setTextfieldWndLen","pcvTextRef","isInputPcvInvalid","setIsInputPcvInvalid","setRosesMat","handleSubmitPitchClass","parsedInput","userPcvObjects","pcvs","isGroup","isSet","stringGroup","Error","join","numeralInput","count","num","lastNum","bin","parse","message","pcvObj","found","usable","halfWindowLen","mappedSubdiv","windowedTraces","sumCentered","powerCentered","getElementById","files","fileReader","FileReader","readAsArrayBuffer","onload","loadedFile","binMidiFile","Midi","tempos","header","tempo","bpm","midiBpm","nonPercussiveTracks","instrument","percussion","getMidiFileDataObject","result","staticResolution","dftCoeffsMatrix","rgbaMatrices","getRgbaMatrix","midiFile","matrixHeight","baseLength","wndLenUnits","windowed","getDftCoeffStatic","initMatrix","rose","exPcvObjects","toString","CssBaseline","Drawer","flexShrink","boxSizing","anchor","htmlFor","gutterBottom","inputProps","parseInt","heigth","noValidate","autoComplete","onKeyPress","key","labelId","MenuProps","disableScrollLock","exact","path","render","Analysis","customTheme","createTheme","palette","primary","main","secondary","background","default","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.2248c150.chunk.js","sourcesContent":["//React\r\nimport { useEffect, useState } from 'react';\r\n\r\n//Import libraries\r\nimport * as Tone from 'tone';\r\n\r\n//Import material UI components\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport PlayArrowRoundedIcon from '@mui/icons-material/PlayArrowRounded';\r\nimport PauseRoundedIcon from '@mui/icons-material/PauseRounded';\r\nimport StopRoundedIcon from '@mui/icons-material/StopRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Slider from '@mui/material/Slider';\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n//Song's variables\r\nlet part;\r\nlet currentSongDuration = 0; // seconds\r\nlet intervalID;\r\n\r\n//Custom style for player's time information\r\nconst TinyText = styled(Typography)({\r\n  fontSize: '0.75rem',\r\n  opacity: 0.38,\r\n  fontWeight: 500,\r\n  letterSpacing: 0.2,\r\n});\r\n\r\n//Format of time information\r\nfunction formatDuration(value) {\r\n  const minute = Math.floor(value / 60);\r\n  const secondLeft = Math.floor(value - minute * 60);\r\n  return `${minute}:${secondLeft < 9 ? `0${secondLeft}` : secondLeft}`;\r\n}\r\n\r\nexport function setPlayerMidiData(midiData, resolution, setCurrentSubdiv) {\r\n  //Remove the scheduled previous song\r\n  Tone.Transport.cancel(0);\r\n  setCurrentSubdiv(0);\r\n  Tone.Transport.stop();\r\n\r\n  //Update\r\n  currentSongDuration = midiData.duration;\r\n\r\n  //partNotes represents all the events (notes) that will be scheduled\r\n  //in the Tone.part\r\n  let partNotes = [];\r\n  midiData.tracks.forEach((track) =>\r\n    track.notes.forEach((note) => {\r\n      partNotes.push(note);\r\n    })\r\n  );\r\n\r\n  //Assing each note to its subdivision\r\n  partNotes.forEach((note) => {\r\n    note.subdiv = Math.floor(note.time / resolution);\r\n  });\r\n\r\n  //Part init --> when a note is palyed, update the current suvdivision index\r\n  part = new Tone.Part(\r\n    (time, note) => {\r\n      sampler.triggerAttackRelease(\r\n        note.name,\r\n        note.duration,\r\n        time,\r\n        note.velocity\r\n      );\r\n      setCurrentSubdiv(note.subdiv);\r\n    },\r\n    [...partNotes]\r\n  ).start(0);\r\n\r\n  //Loop set to true in order to use progress attribute\r\n  part.loop = true;\r\n  part.loopEnd = currentSongDuration;\r\n}\r\n\r\n//Sampler setup --> Piano\r\nconst sampler = new Tone.Sampler({\r\n  urls: {\r\n    A0: 'A0.mp3',\r\n    C1: 'C1.mp3',\r\n    'D#1': 'Ds1.mp3',\r\n    'F#1': 'Fs1.mp3',\r\n    A1: 'A1.mp3',\r\n    C2: 'C2.mp3',\r\n    'D#2': 'Ds2.mp3',\r\n    'F#2': 'Fs2.mp3',\r\n    A2: 'A2.mp3',\r\n    C3: 'C3.mp3',\r\n    'D#3': 'Ds3.mp3',\r\n    'F#3': 'Fs3.mp3',\r\n    A3: 'A3.mp3',\r\n    C4: 'C4.mp3',\r\n    'D#4': 'Ds4.mp3',\r\n    'F#4': 'Fs4.mp3',\r\n    A4: 'A4.mp3',\r\n    C5: 'C5.mp3',\r\n    'D#5': 'Ds5.mp3',\r\n    'F#5': 'Fs5.mp3',\r\n    A5: 'A5.mp3',\r\n    C6: 'C6.mp3',\r\n    'D#6': 'Ds6.mp3',\r\n    'F#6': 'Fs6.mp3',\r\n    A6: 'A6.mp3',\r\n    C7: 'C7.mp3',\r\n    'D#7': 'Ds7.mp3',\r\n    'F#7': 'Fs7.mp3',\r\n    A7: 'A7.mp3',\r\n    C8: 'C8.mp3',\r\n  },\r\n  release: 1,\r\n  baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n}).toDestination();\r\nsampler.volume.value = -20; //Sampler volume\r\n\r\n//Player component\r\nexport default function Player({ fileName }) {\r\n  //State: number\r\n  //Represent the progress of the playback in the slider, 0 is the beginnign\r\n  //while 1 is the end.\r\n  const [playbackSliderProgress, setPlaybackSliderProgress] = useState(0);\r\n\r\n  /**\r\n   * Start playback\r\n   */\r\n  function play() {\r\n    if (Tone.context.state !== 'running') {\r\n      console.log('state running');\r\n      Tone.context.resume();\r\n    }\r\n    Tone.Transport.start();\r\n\r\n    //Init interval --> every 1 second, update the slider\r\n    if (!intervalID && part)\r\n      intervalID = setInterval(\r\n        () => setPlaybackSliderProgress(part.progress),\r\n        1000\r\n      );\r\n  }\r\n\r\n  //Key binding for spacebar stop/play functions\r\n  useEffect(() => {\r\n    function handleKeyDown(e) {\r\n      if (e.which === 32) {\r\n        e.preventDefault();\r\n        //If part is not playing\r\n        if (\r\n          Tone.Transport.state === 'paused' ||\r\n          Tone.Transport.state === 'stopped'\r\n        )\r\n          play();\r\n        //If part is playing\r\n        else if (Tone.Transport.state === 'started') {\r\n          Tone.Transport.pause();\r\n          //Stop updating the slider\r\n          stopInterval();\r\n        }\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', handleKeyDown.bind(this));\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '60%',\r\n      }}\r\n    >\r\n      {/* ICONS AND FILE NAME*/}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Stack direction='row' sx={{ flexGrow: 1, paddingLeft: '10%' }}>\r\n          <IconButton\r\n            disableFocusRipple\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('stop');\r\n              Tone.Transport.stop();\r\n              stopInterval();\r\n            }}\r\n            size='large'\r\n            children={<StopRoundedIcon fontSize='large' />}\r\n          />\r\n          <IconButton\r\n            disableFocusRipple\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('pause');\r\n              Tone.Transport.pause();\r\n              stopInterval();\r\n            }}\r\n            size='large'\r\n            children={<PauseRoundedIcon fontSize='large' />}\r\n          />\r\n          <IconButton\r\n            disableFocusRipple\r\n            sx={{ padding: '0' }}\r\n            onClick={() => play()}\r\n            size='large'\r\n            children={<PlayArrowRoundedIcon fontSize='large' />}\r\n          />\r\n        </Stack>\r\n        <Typography\r\n          color={fileName ? 'primary' : 'error'}\r\n          noWrap={true}\r\n          sx={{ flexGrow: '2', paddingRight: '10%' }}\r\n        >\r\n          {fileName ? fileName : 'No midi file uploaded'}\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* SLIDER */}\r\n      <Slider\r\n        aria-label='Playback'\r\n        size='small'\r\n        value={playbackSliderProgress ? playbackSliderProgress * 100 : 0}\r\n        onChange={(event, newValue) => {\r\n          setPlaybackSliderProgress(newValue / 100);\r\n          Tone.Transport.seconds = (newValue / 100) * currentSongDuration;\r\n        }}\r\n        sx={{ width: '90%' }}\r\n      />\r\n\r\n      {/* TIME INFORMATION */}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          width: '90%',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          mt: -1,\r\n        }}\r\n      >\r\n        <TinyText>\r\n          -\r\n          {formatDuration(\r\n            currentSongDuration - playbackSliderProgress * currentSongDuration\r\n          )}\r\n        </TinyText>\r\n        <TinyText>{formatDuration(currentSongDuration)}</TinyText>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n/**\r\n * Stop updating the slider by clearing the interval ID\r\n */\r\nfunction stopInterval() {\r\n  clearInterval(intervalID);\r\n  // release our intervalID from the variable\r\n  intervalID = null;\r\n}\r\n","//Import libraries\r\nimport * as math from 'mathjs';\r\n\r\n/**\r\n * Compute the DFT of a PCV\r\n * @param {array} pcv pitch-class vector\r\n * @param {boolean} normalize true for normalizing the output value\r\n * @param {boolean} round true for rounding the output value\r\n * @param {boolean} polar true for changing coordinates to the output value\r\n * @returns {array}\r\n */\r\nexport default function dft(\r\n  pcv,\r\n  normalize = true,\r\n  round = false,\r\n  polar = false\r\n) {\r\n  let N = pcv.length;\r\n\r\n  let coeffs = [];\r\n\r\n  for (let k = 0; k < N / 2 + 1; k++) {\r\n    let temp = 0;\r\n    for (let n = 0; n < N; n++) {\r\n      temp = math.add(\r\n        math.multiply(\r\n          pcv[n],\r\n          math.exp(math.multiply(math.i, (-2 * math.pi * k * n) / N))\r\n        ),\r\n        temp\r\n      );\r\n    }\r\n    coeffs.push(temp);\r\n  }\r\n\r\n  coeffs = coeffs.slice();\r\n\r\n  if (normalize) {\r\n    const norm = coeffs[0];\r\n    //'!=' gives a warning but '!==' doesn't compute correctly the if statement\r\n    if (norm != 0) coeffs = coeffs.map((coeff) => math.divide(coeff, norm));\r\n  }\r\n\r\n  if (round) {\r\n    coeffs.forEach((coeff) => {\r\n      coeff.re = Math.round(coeff.re * 10000) / 10000;\r\n      coeff.im = Math.round(coeff.im * 10000) / 10000;\r\n    });\r\n  }\r\n\r\n  if (polar) {\r\n    coeffs = coeffs.map((coeff) => coeff.toPolar());\r\n  }\r\n\r\n  return coeffs;\r\n}\r\n\r\n/**\r\n * Sum the coefficients and normalize the result, used to compute the\r\n * rows of the wavescape by expoliting the linearity of the DFT\r\n * @param {array} coeffs Array of coefficients\r\n * @returns\r\n */\r\nexport function sumAndNormalize(coeffs) {\r\n  //Sum init\r\n  let sum = coeffs[0];\r\n\r\n  for (let i = 1; i < coeffs.length; i++) {\r\n    let temp = [];\r\n\r\n    //incremental sum for each coeff\r\n    for (let j = 0; j < coeffs[i].length; j++) {\r\n      temp.push(math.add(sum[j], coeffs[i][j]));\r\n    }\r\n    //Clone array\r\n    sum = temp.slice();\r\n  }\r\n\r\n  //Normalize\r\n  const norm = sum[0];\r\n  if (norm != 0) sum = sum.map((coeff) => math.divide(coeff, norm));\r\n\r\n  return sum;\r\n}\r\n","import * as d3 from 'd3';\r\nimport * as math from 'mathjs';\r\n\r\n//Convert rgb values from [0,1] to [0,255]\r\nconst contToDiscRGB = d3\r\n  .scaleQuantize()\r\n  .domain([0, 1])\r\n  .range(d3.range(0, 255, 1));\r\n\r\n/**\r\n * Map phase of a complex number with the correspondent Fourier space color\r\n * @param {number} angle Phase in radiants\r\n * @returns string\r\n */\r\nexport const gradient = (angle) => {\r\n  let r, g, b;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\n/**\r\n * Used to generate the color wheel canvas, map a point of the Fourier space\r\n * to an RGBA value\r\n * @param {number} x x-coordinate\r\n * @param {number} y y-coordinate\r\n * @param {number} distance distance of the point from the origin\r\n * @returns object\r\n */\r\nexport const pixelColor = (x, y, distance) => {\r\n  let r, g, b, a;\r\n  //atan2 out in [-pi, pi]\r\n  let angle = Math.atan2(y, x);\r\n  angle = -angle;\r\n  //we need it in [0, 2pi]\r\n  if (angle < 0) angle += 2 * Math.PI;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n  a = contToDiscRGB(distance);\r\n\r\n  return { r, g, b, a };\r\n};\r\n\r\n/**\r\n * Convert the complex number in polar coordinates and map it to a\r\n * RGBA value string\r\n * @param {object} complex complex number\r\n * @returns string\r\n */\r\nexport function getRgbaFromComplex(complex) {\r\n  let polarComplex = complex.toPolar();\r\n  let angle = polarComplex.phi; // phi from [-pi, pi], but color mapping defined in [0,2pi]\r\n  let mod = polarComplex.r;\r\n\r\n  //Taking into account rounding errors\r\n  if (angle < 0 && angle > -1e-5) angle = 0;\r\n\r\n  if (angle < 0)\r\n    //negative angle mapped to their positive representation\r\n    angle = angle + 2 * Math.PI;\r\n\r\n  let ris = gradient(angle).slice(3, -1);\r\n\r\n  return `rgba${ris}, ${mod})`;\r\n}\r\n","//Import functions\r\nimport { Midi } from '@tonejs/midi';\r\nimport dft, { sumAndNormalize } from './DFT';\r\nimport { getRgbaFromComplex } from './colorMapping';\r\n\r\n//Pitch-class vector class\r\nclass Pcv {\r\n  //\"s\" is sharp\r\n  constructor() {\r\n    this.C = 0;\r\n    this.Cs = 0;\r\n    this.D = 0;\r\n    this.Ds = 0;\r\n    this.E = 0;\r\n    this.F = 0;\r\n    this.Fs = 0;\r\n    this.G = 0;\r\n    this.Gs = 0;\r\n    this.A = 0;\r\n    this.As = 0;\r\n    this.B = 0;\r\n  }\r\n\r\n  /**\r\n   * Add duration in seconds to the specified pitch attribute.\r\n   * @param {string} targetPitch pitch to which add the duration\r\n   * @param {number} duration seconds\r\n   */\r\n  addNoteDuration(targetPitch, duration) {\r\n    switch (targetPitch) {\r\n      case 'C':\r\n        this.C += duration;\r\n        break;\r\n      case 'C#':\r\n        this.Cs += duration;\r\n        break;\r\n      case 'D':\r\n        this.D += duration;\r\n        break;\r\n      case 'D#':\r\n        this.Ds += duration;\r\n        break;\r\n      case 'E':\r\n        this.E += duration;\r\n        break;\r\n      case 'F':\r\n        this.F += duration;\r\n        break;\r\n      case 'F#':\r\n        this.Fs += duration;\r\n        break;\r\n      case 'G':\r\n        this.G += duration;\r\n        break;\r\n      case 'G#':\r\n        this.Gs += duration;\r\n        break;\r\n      case 'A':\r\n        this.A += duration;\r\n        break;\r\n      case 'A#':\r\n        this.As += duration;\r\n        break;\r\n      case 'B':\r\n        this.B += duration;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the object's attributes as an array\r\n   * @returns array\r\n   */\r\n  getPcvAsArray() {\r\n    let temp = [\r\n      this.C,\r\n      this.Cs,\r\n      this.D,\r\n      this.Ds,\r\n      this.E,\r\n      this.F,\r\n      this.Fs,\r\n      this.G,\r\n      this.Gs,\r\n      this.A,\r\n      this.As,\r\n      this.B,\r\n    ];\r\n\r\n    return temp;\r\n  }\r\n\r\n  /**\r\n   * Class addition\r\n   * @param {object} pcv\r\n   */\r\n  add(pcv) {\r\n    this.C += pcv.C;\r\n    this.Cs += pcv.Cs;\r\n    this.D += pcv.D;\r\n    this.Ds += pcv.Ds;\r\n    this.E += pcv.E;\r\n    this.F += pcv.F;\r\n    this.Fs += pcv.Fs;\r\n    this.G += pcv.G;\r\n    this.Gs += pcv.Gs;\r\n    this.A += pcv.A;\r\n    this.As += pcv.As;\r\n    this.B += pcv.B;\r\n  }\r\n}\r\n\r\n/**\r\n * Read the MIDI file, remove percussive tracks and return it as an object\r\n * @param {binary} binMidiFile MIDI file in binary code\r\n * @returns object\r\n */\r\nexport function getMidiFileDataObject(binMidiFile) {\r\n  //Read file\r\n  let midiData = new Midi(binMidiFile);\r\n\r\n  //We assume that song's tempo is the fastest one\r\n  //(since many picies slow down in some parts)\r\n  let tempos = midiData.header.tempos.map((tempo) => Math.round(tempo.bpm));\r\n  let midiBpm = Math.max(...tempos); //BPM used for quarter-note conversion\r\n\r\n  //Check and delete percussive tracks\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  midiData.tracks = nonPercussiveTracks;\r\n\r\n  return { midiData, midiBpm };\r\n}\r\n\r\n/**\r\n * Compute the first row of the wavescapes (from 0th to 6th).\r\n * @param {object} midiFile\r\n * @param {number} resolution in seconds\r\n * @returns array\r\n */\r\nexport function getDftCoeffStatic(midiFile, resolution) {\r\n  let tracksSubdivision = [];\r\n\r\n  //Subdivide the tracks by the resolution\r\n  midiFile.tracks.forEach((track) =>\r\n    tracksSubdivision.push(\r\n      getSubdivision(track.notes, resolution, midiFile.duration)\r\n    )\r\n  );\r\n\r\n  //PCV array init\r\n  let pcvSubdivision = [];\r\n\r\n  //For each subdivision, create a PCV\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //Compute the PCVs for each subdivision\r\n  //FOR LOOP:\r\n  //i --> i-th track\r\n  //j --> j-th subdivision in the i-th track\r\n  //k --> k-th note in j-th subdivision\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        //Add note duration/contribution to the PCV\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the DFT coefficients for of each subdivision\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the whole matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //Adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  //Computing each row of the matrix as the normalized sum of the\r\n  //previous row by using a sliding window of incrementing length\r\n\r\n  let matrixHeight = dftCoeffsMatrix[0].length;\r\n  let baseLength = dftCoeffsMatrix[0].length;\r\n\r\n  //The second row is composed by segments of length 2, third row is...\r\n  let wndLenUnits = 2;\r\n\r\n  //For each row of the matrix, starting from second row\r\n  for (let i = 1; i < matrixHeight; i++) {\r\n    let temp = [];\r\n\r\n    //Slinding window of hop size = 1\r\n    for (let cursor = 0; cursor + wndLenUnits <= baseLength; cursor++) {\r\n      //Extract the windowed subdivisions\r\n      let windowed = dftCoeffsMatrix[0].slice(cursor, cursor + wndLenUnits);\r\n      //The new element of the i-th row is the normalized sum\r\n      //of segments extracted from the previous row\r\n      temp.push(sumAndNormalize(windowed));\r\n    }\r\n    wndLenUnits++;\r\n    dftCoeffsMatrix.push(temp);\r\n  }\r\n\r\n  return dftCoeffsMatrix;\r\n}\r\n\r\n/**\r\n * Compute the traces on the Fourier spaces for the given resolution\r\n * @param {object} midiData\r\n * @param {object} resolutionMode\r\n * @param {number} currentSongBPM\r\n * @returns traces and resolution\r\n */\r\nexport function getDftCoeffDynamic(\r\n  midiData,\r\n  resolutionMode,\r\n  currentSongBPM,\r\n  normalizationType\r\n) {\r\n  let { noteResolutionValue, seconds, useSeconds } = resolutionMode;\r\n\r\n  let resolution;\r\n  //Set resolution depending on which mode is selected\r\n  if (useSeconds) {\r\n    //Use seconds\r\n    isNaN(seconds) ? (resolution = 1) : (resolution = seconds);\r\n  } else {\r\n    //Use music values\r\n    resolution = noteResolutionValue * (60 / currentSongBPM);\r\n  }\r\n\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //Subdivide the tracks by the resolution\r\n  midiData.tracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //PCV array init\r\n  let pcvSubdivision = [];\r\n\r\n  //For each subdivision, create a PCV\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //Compute the PCVs for each subdivision\r\n  //FOR LOOP:\r\n  //i --> i-th track\r\n  //j --> j-th subdivision in the i-th track\r\n  //k --> k-th note in j-th subdivision\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        //Add note duration/contribution to the PCV\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Cloning unnormalized pcvs distribution for normalization with different window lengths\r\n  let pcDistributions = [...pcvSubdivision].map((pcv) => {\r\n    let newPcv = new Pcv();\r\n    newPcv.add(pcv);\r\n    return newPcv;\r\n  });\r\n\r\n  switch (normalizationType) {\r\n    case 'sum':\r\n      pcvSubdivision = sumNorm(pcvSubdivision);\r\n      break;\r\n\r\n    case 'power':\r\n      pcvSubdivision = powerNorm(pcvSubdivision);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  //Computing the DFT coefficients for of each subdivision\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray(), false)\r\n  );\r\n\r\n  //Generating the traces by subdividing for the coefficient number\r\n  let traces = [];\r\n  //Skipping coefficient zero since it will not be plotted\r\n  for (let i = 1; i < 7; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < dftCoeffsSubdivision.length; j++) {\r\n      temp.push({\r\n        x: dftCoeffsSubdivision[j][i].re,\r\n        y: dftCoeffsSubdivision[j][i].im,\r\n      });\r\n    }\r\n    traces.push(temp);\r\n  }\r\n\r\n  return {\r\n    tracesData: traces,\r\n    resolution: resolution,\r\n    currPcDistributions: pcDistributions,\r\n  };\r\n}\r\n\r\n/**\r\n * Map the points of the wavescape to RGBA value and subdivide by\r\n * coefficient number\r\n * @param {matrix} dftCoeffsMatrix\r\n * @returns\r\n */\r\nexport function getRgbaMatrix(dftCoeffsMatrix) {\r\n  let rgbaMatrices = [];\r\n\r\n  //Subdividing by coefficient number\r\n  for (let i = 0; i < 6; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < dftCoeffsMatrix.length; j++) {\r\n      let subdiv = [];\r\n      for (let k = 0; k < dftCoeffsMatrix[j].length; k++) {\r\n        subdiv.push('');\r\n      }\r\n      temp.push(subdiv);\r\n    }\r\n    rgbaMatrices.push(temp);\r\n  }\r\n\r\n  //Mapping to the color space\r\n  for (let i = 0; i < dftCoeffsMatrix.length; i++) {\r\n    for (let j = 0; j < dftCoeffsMatrix[i].length; j++) {\r\n      for (let k = 1; k < dftCoeffsMatrix[i][j].length; k++) {\r\n        rgbaMatrices[k - 1][i][j] = getRgbaFromComplex(\r\n          dftCoeffsMatrix[i][j][k]\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return rgbaMatrices;\r\n}\r\n\r\n/**\r\n * Subdivide pitches in each time window defined by the reslution\r\n * @param {array} notes all the notes of a track\r\n * @param {number} resolution in seconds\r\n * @param {number} duration MIDI file duration in seconds\r\n * @returns\r\n */\r\nfunction getSubdivision(notes, resolution, duration) {\r\n  //Song's general subdivision\r\n  let subdivision = [];\r\n  let wndLen = resolution;\r\n\r\n  //Traverse the song moving with a step of size wndLen (=resolution)\r\n  //Cursor is the beginning of the current window\r\n  for (let cursor = 0; cursor < duration; cursor += resolution) {\r\n    let temp = [];\r\n\r\n    //Assing each note to a window/subdivision\r\n    notes.forEach((note) => {\r\n      //Extract note's starting time duration\r\n      let { time, duration } = note;\r\n\r\n      //Check if a note contribute to the current window\r\n      if (isValidNote(time, duration, cursor, wndLen)) {\r\n        //Compute the contribution of the note to the current window\r\n        let noteAndDuration = { pitch: note.pitch };\r\n\r\n        //If note starts before the current window\r\n        if (time < cursor) {\r\n          //If note finishes before the end of the window\r\n          if (time + duration < cursor + wndLen)\r\n            //Add only the duration that overlap with the current window\r\n            noteAndDuration.duration = time + duration - cursor;\r\n          //Else, the note continues for the whole duration of the window\r\n          //Add the window length as duration, since note duration overlap the whole window\r\n          else noteAndDuration.duration = wndLen;\r\n        }\r\n\r\n        //If note start in the current window\r\n        else {\r\n          //If note finishes before the end of the window\r\n          if (time + duration <= cursor + wndLen)\r\n            //Add only the note duration\r\n            noteAndDuration.duration = duration;\r\n          //Else, the note continues to the next window\r\n          //Add only the part that overlap with the  current window\r\n          else noteAndDuration.duration = cursor + wndLen - time;\r\n        }\r\n\r\n        temp.push(noteAndDuration);\r\n      }\r\n    });\r\n\r\n    subdivision.push(temp);\r\n  }\r\n\r\n  return subdivision;\r\n}\r\n\r\n/**\r\n * True if a note contribute to the PCV of the current window\r\n * @param {number} time starting time of a note\r\n * @param {number} duration duration of a note\r\n * @param {number} cursor starting time of the current window\r\n * @param {number} wndLen size of the current window\r\n * @returns boolean\r\n */\r\nfunction isValidNote(time, duration, cursor, wndLen) {\r\n  //A note contribute to the current window if:\r\n  //1. starting time is in the current window\r\n  //2. starts before the beginning of the window but\r\n  //   finishes before the end of the window\r\n  //3. starts before the beginning of the window\r\n  //   and continues for the whole duration of the window\r\n  if (\r\n    (time > cursor && time < cursor + wndLen) ||\r\n    (time + duration > cursor && time + duration < cursor + wndLen) ||\r\n    (time <= cursor && time + duration >= cursor + wndLen)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function sumCentered(pcDistributions, windowLen) {\r\n  let windowedPcvs = [];\r\n\r\n  windowedPcvs = winCentered(pcDistributions, windowLen);\r\n\r\n  //Normalization\r\n  windowedPcvs = sumNorm(windowedPcvs);\r\n\r\n  //Computing the DFT coefficients for of each subdivision\r\n  let dftCoeffsSubdivision = windowedPcvs.map((pcv) =>\r\n    dft(pcv.getPcvAsArray(), false)\r\n  );\r\n\r\n  let traces = generateTraces(dftCoeffsSubdivision);\r\n\r\n  return traces;\r\n}\r\n\r\nexport function sumIncremental(pcDistributions, windowLen) {\r\n  let windowedPcvs = [];\r\n\r\n  windowedPcvs = winIncremental(pcDistributions, windowLen);\r\n\r\n  //Normalization\r\n  windowedPcvs = sumNorm(windowedPcvs);\r\n\r\n  //Computing the DFT coefficients for of each subdivision\r\n  let dftCoeffsSubdivision = windowedPcvs.map((pcv) =>\r\n    dft(pcv.getPcvAsArray(), false)\r\n  );\r\n\r\n  let traces = generateTraces(dftCoeffsSubdivision);\r\n\r\n  return traces;\r\n}\r\n\r\nexport function powerCentered(pcDistributions, windowLen) {\r\n  let windowedPcvs = [];\r\n\r\n  windowedPcvs = winCentered(pcDistributions, windowLen);\r\n\r\n  //Normalization\r\n  windowedPcvs = powerNorm(windowedPcvs);\r\n\r\n  //Computing the DFT coefficients for of each subdivision\r\n  let dftCoeffsSubdivision = windowedPcvs.map((pcv) =>\r\n    dft(pcv.getPcvAsArray(), false)\r\n  );\r\n\r\n  let traces = generateTraces(dftCoeffsSubdivision);\r\n\r\n  return traces;\r\n}\r\n\r\n/**\r\n * Normalize pc distributions with sum\r\n * @param {array} pcDistributions\r\n */\r\nfunction sumNorm(pcDistributions) {\r\n  //Cloning unnormalized pcvs distribution for normalization with different window lengths\r\n  let clonePcDistributions = [...pcDistributions].map((pcv) => {\r\n    let newPcv = new Pcv();\r\n    newPcv.add(pcv);\r\n    return newPcv;\r\n  });\r\n\r\n  clonePcDistributions.forEach((pcv) => {\r\n    let sum = 0;\r\n    for (let note in pcv) sum += pcv[note];\r\n\r\n    if (sum !== 0) {\r\n      for (let note in pcv) pcv[note] = pcv[note] / sum;\r\n    }\r\n  });\r\n\r\n  return clonePcDistributions;\r\n}\r\n\r\n/**\r\n * Normalize pc distributions with power\r\n * @param {array} pcDistributions\r\n */\r\nfunction powerNorm(pcDistributions) {\r\n  //Cloning unnormalized pcvs distribution for normalization with different window lengths\r\n  let clonePcDistributions = [...pcDistributions].map((pcv) => {\r\n    let newPcv = new Pcv();\r\n    newPcv.add(pcv);\r\n    return newPcv;\r\n  });\r\n\r\n  clonePcDistributions.forEach((pcv) => {\r\n    let power = 0;\r\n    for (let note in pcv) power += Math.pow(pcv[note], 2);\r\n    power = power / 12;\r\n\r\n    if (power != 0) {\r\n      for (let note in pcv) pcv[note] = Math.sqrt(pcv[note] / power);\r\n    }\r\n  });\r\n\r\n  return clonePcDistributions;\r\n}\r\n\r\nfunction winCentered(pcDistributions, windowLen) {\r\n  let windowedPcvs = [];\r\n  for (let i = 0; i <= pcDistributions.length - windowLen; i++) {\r\n    let windowedPcv = new Pcv();\r\n    for (let j = 0; j < windowLen; j++) {\r\n      windowedPcv.add(pcDistributions[i + j]);\r\n    }\r\n    windowedPcvs.push(windowedPcv);\r\n  }\r\n\r\n  return windowedPcvs;\r\n}\r\n\r\nfunction winIncremental(pcDistributions, windowLen) {\r\n  let windowedPcvs = [];\r\n  let halfWndLen = Math.ceil(windowLen / 2);\r\n  let incrementalWndLen = halfWndLen;\r\n\r\n  //First windowLen/2 samples\r\n  for (let i = 0; i < halfWndLen; i++) {\r\n    let windowedPcv = new Pcv();\r\n    for (let j = 0; j < incrementalWndLen; j++) {\r\n      windowedPcv.add(pcDistributions[j]);\r\n    }\r\n    windowedPcvs.push(windowedPcv);\r\n\r\n    incrementalWndLen++;\r\n  }\r\n\r\n  //Moving window\r\n  for (let i = 0; i <= pcDistributions.length - windowLen; i++) {\r\n    let windowedPcv = new Pcv();\r\n    for (let j = 0; j < windowLen; j++) {\r\n      windowedPcv.add(pcDistributions[i + j]);\r\n    }\r\n    windowedPcvs.push(windowedPcv);\r\n  }\r\n\r\n  //Last windowLen samples\r\n  incrementalWndLen = halfWndLen;\r\n  for (let i = 0; i < halfWndLen; i++) {\r\n    let windowedPcv = new Pcv();\r\n    for (let j = 0; j < incrementalWndLen; j++) {\r\n      windowedPcv.add(pcDistributions[pcDistributions.length - j - 1]);\r\n    }\r\n    windowedPcvs.push(windowedPcv);\r\n\r\n    incrementalWndLen++;\r\n  }\r\n\r\n  return windowedPcvs;\r\n}\r\n\r\nfunction generateTraces(dftCoeffsSubdivision) {\r\n  //Generating the traces by subdividing for the coefficient number\r\n  let traces = [];\r\n  //Skipping coefficient zero since it will not be plotted\r\n  for (let i = 1; i < 7; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < dftCoeffsSubdivision.length; j++) {\r\n      temp.push({\r\n        x: dftCoeffsSubdivision[j][i].re,\r\n        y: dftCoeffsSubdivision[j][i].im,\r\n      });\r\n    }\r\n    traces.push(temp);\r\n  }\r\n\r\n  return traces;\r\n}\r\n","/**\r\n * Compute the points of the rose's shape\r\n * see https://en.wikipedia.org/wiki/Rose_(mathematics)\r\n * @param {number} n numerator\r\n * @param {number} d denominator\r\n * @returns array\r\n */\r\nexport function getRosePoints(n, d) {\r\n  let dataPoints = [];\r\n\r\n  //Increase delta step to have less points\r\n  for (let delta = 0; delta < 2 * Math.PI * d; delta += 0.01) {\r\n    let r = 10 * Math.cos((n / d) * delta);\r\n    let x = r * Math.cos(delta);\r\n    let y = r * Math.sin(delta);\r\n\r\n    dataPoints.push([x, y]);\r\n  }\r\n\r\n  return dataPoints;\r\n}\r\n","//React\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Import material UI components\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { styled } from '@mui/material/styles';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst drawerWidth = 400;\r\n\r\n//AppBar animation\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create(['margin', 'width'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: `${drawerWidth}px`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\n//Navbar component\r\nexport default function Navbar({ open, setOpen, inAnalysisPage }) {\r\n  //Open Drawer on ChevronRightIcon click\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position='static' open={open}>\r\n        <Toolbar>\r\n          {/* Open Drawer button */}\r\n          <IconButton\r\n            disabled={!inAnalysisPage}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            edge='start'\r\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\r\n          >\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n\r\n          {/* App name */}\r\n          <Typography variant='h3' component='div' sx={{ flexGrow: 1 }}>\r\n            midiVERTO\r\n          </Typography>\r\n\r\n          {/* Navigation buttons */}\r\n          <ButtonGroup aria-label='outlined button group'>\r\n            <Button\r\n              component={Link}\r\n              to='/'\r\n              variant='contained'\r\n              disableElevation={true}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/theory'\r\n              variant='contained'\r\n              disableElevation={true}\r\n            >\r\n              Docs\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/analysis'\r\n              variant='contained'\r\n              disableElevation={true}\r\n            >\r\n              Analysis\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/whole.bc0fb0be.svg\";","export default __webpack_public_path__ + \"static/media/half.7f42e3ea.svg\";","export default __webpack_public_path__ + \"static/media/quarter.2f619208.svg\";","export default __webpack_public_path__ + \"static/media/eighth.f964a835.svg\";","export default __webpack_public_path__ + \"static/media/sixteenth.b53671bd.svg\";","//React\r\nimport { useRef, useState } from 'react';\r\n\r\n//Import material UI components\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\n\r\n//Import notes' symbols\r\nimport wholeSvg from './svgNotation/whole.svg';\r\nimport halfSvg from './svgNotation/half.svg';\r\nimport quarterSvg from './svgNotation/quarter.svg';\r\nimport eighthSvg from './svgNotation/eighth.svg';\r\nimport sixteenthSvg from './svgNotation/sixteenth.svg';\r\n\r\n//Component resolution selector\r\nfunction ResolutionSelector({\r\n  resolutionMode,\r\n  setResolutionMode,\r\n  retriggerAnalysis,\r\n}) {\r\n  //State: boolean\r\n  //If true, notify the user that seconds' input is invalid\r\n  const [isInputSecondsInvalid, setIsInputSecondsInvalid] = useState(false);\r\n  const resolutionTextRef = useRef(null);\r\n\r\n  /**\r\n   * On form change, update the new resolution mode\r\n   */\r\n  function onChangeResolutionSelection(event) {\r\n    let newResolutionMode = { ...resolutionMode };\r\n    newResolutionMode.seconds = parseFloat(resolutionTextRef.current.value);\r\n\r\n    switch (event.target.value) {\r\n      case 'sixteenth':\r\n        newResolutionMode.noteResolutionValue = 0.25;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'eighth':\r\n        newResolutionMode.noteResolutionValue = 0.5;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'quarter':\r\n        newResolutionMode.noteResolutionValue = 1;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'half':\r\n        newResolutionMode.noteResolutionValue = 2;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'whole':\r\n        newResolutionMode.noteResolutionValue = 4;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'seconds':\r\n        newResolutionMode.useSeconds = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setResolutionMode(newResolutionMode);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl component='fieldset'>\r\n        <RadioGroup\r\n          row\r\n          defaultValue='quarter'\r\n          onChange={onChangeResolutionSelection}\r\n          aria-label='resolution'\r\n          name='row-radio-buttons-group'\r\n          sx={{ display: 'flex', justifyContent: 'space-between' }}\r\n        >\r\n          <FormControlLabel\r\n            value='sixteenth'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  transform: 'scale(3, 3)',\r\n                }}\r\n                src={sixteenthSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='eighth'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  transform: 'scale(3, 3) translate(0, 0)',\r\n                }}\r\n                src={eighthSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='quarter'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  marginTop: 8,\r\n                  transform: 'scale(1, 3)',\r\n                }}\r\n                src={quarterSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='half'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  marginTop: 8,\r\n                  transform: 'scale(3.7, 3.2) ',\r\n                }}\r\n                src={halfSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='whole'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  marginTop: 0,\r\n                  transform: 'scale(1.5, 1)',\r\n                }}\r\n                src={wholeSvg}\r\n              />\r\n            }\r\n          />\r\n\r\n          <FormControlLabel\r\n            value='seconds'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <TextField\r\n                sx={{ minHeight: '4.4rem', maxWidth: '5rem' }}\r\n                error={isInputSecondsInvalid}\r\n                helperText={isInputSecondsInvalid && 'Invalid input'}\r\n                label='in seconds'\r\n                id='standard-size-small'\r\n                defaultValue='1.5'\r\n                size='small'\r\n                variant='standard'\r\n                onChange={() => {\r\n                  let newResolutionMode = { ...resolutionMode };\r\n                  newResolutionMode.seconds = parseFloat(\r\n                    resolutionTextRef.current.value\r\n                  );\r\n                  if (isNaN(newResolutionMode.seconds))\r\n                    setIsInputSecondsInvalid(true);\r\n                  else {\r\n                    setResolutionMode(newResolutionMode);\r\n                    setIsInputSecondsInvalid(false);\r\n                  }\r\n                }}\r\n                inputRef={resolutionTextRef}\r\n              />\r\n            }\r\n          />\r\n          <Button\r\n            variant='contained'\r\n            onClick={retriggerAnalysis}\r\n            sx={{ width: '22%', height: '15%', marginTop: 2 }}\r\n          >\r\n            Change\r\n          </Button>\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResolutionSelector;\r\n","//Import material UI components\r\nimport { styled } from '@mui/material/styles';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n//Stiled chips\r\nconst ListItem = styled('li')(({ theme }) => ({\r\n  margin: theme.spacing(0.5),\r\n}));\r\n\r\n//Chips box component\r\nexport default function PcvChipsBox({ userPcvs, setUserPcvs, rosesMat }) {\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //On detele, set the rose icon to unused\r\n    //matrix coeffs are i = d-1, j=d-1\r\n    rosesMat[chipToDelete.d - 1][chipToDelete.n - 1].used = false;\r\n\r\n    //Update\r\n    setUserPcvs((chips) =>\r\n      chips.filter((chip) => chip.label !== chipToDelete.label)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        p: '3px',\r\n        overflow: 'auto',\r\n        height: '100%',\r\n        width: '100%',\r\n      }}\r\n      component='ul'\r\n    >\r\n      {userPcvs.map((data, i) => {\r\n        return (\r\n          <ListItem key={`${i}`}>\r\n            <Chip\r\n              variant={data.isDisabled ? 'outlined' : 'filled'}\r\n              icon={\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  width='24'\r\n                  height='24'\r\n                  viewBox='0 0 24 24'\r\n                >\r\n                  <g>\r\n                    <polyline\r\n                      transform={`translate(${12},${12})`}\r\n                      fill='none'\r\n                      stroke='black'\r\n                      strokeWidth='1px'\r\n                      points={data.rosePoints}\r\n                    />\r\n                  </g>\r\n                </svg>\r\n              }\r\n              label={data.label}\r\n              onDelete={handleDelete(data)}\r\n              onClick={() => {\r\n                data.isDisabled = !data.isDisabled;\r\n                setUserPcvs([...userPcvs]);\r\n              }}\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\n","import * as d3 from 'd3';\r\nimport * as math from 'mathjs';\r\nimport { gradient } from './colorMapping';\r\n\r\n//Generates SVGs of the Fourier spaces for the exporting,\r\n//see Circle.js\r\nexport default ({\r\n  traceData,\r\n  userPcv,\r\n  prototypesData,\r\n  coeffNumber,\r\n  showNumber,\r\n}) => {\r\n  //Size and N number of subdivisions of the arches\r\n  const width = 450;\r\n  const height = width;\r\n  const innerWidth = 0.8 * width;\r\n  //const innerHeight = innerWidth;\r\n  const N = 50;\r\n  const K = 20;\r\n\r\n  let marksRadiusRatio = 0.01;\r\n  let circleRadius = innerWidth / 2;\r\n\r\n  const theta = (2 * math.pi) / N;\r\n  const angles = d3.range(0, 2 * math.pi, theta);\r\n  const circularSectors = d3.range(0, 1, 1 / K);\r\n\r\n  //Generates all the arches that compose the circle\r\n  const arc = (angle, id, index, inner) => {\r\n    const offset = -math.pi / 2;\r\n\r\n    const d = d3\r\n      .arc()\r\n      .innerRadius((inner * innerWidth) / 2)\r\n      .outerRadius(((inner + 1 / K) * innerWidth) / 2)\r\n      .startAngle(-(angle + offset))\r\n      .endAngle(-(angle + theta + offset));\r\n\r\n    return (\r\n      <path\r\n        key={`${index}.${id}`}\r\n        fill={gradient(angle)}\r\n        fillOpacity={inner}\r\n        stroke={gradient(angle)}\r\n        strokeOpacity={inner / 10}\r\n        d={d()}\r\n        /* shapeRendering={'geometricPrecision'} */\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const circleMark = (pcvData, radiusScaleWidth, color, id, opacity = 1) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    return (\r\n      <path\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        fill={color}\r\n        fillOpacity={opacity}\r\n        key={id}\r\n        d={mark()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const protoCircleMark = (pcvData, id) => {\r\n    let scaleRatio = 0.02;\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius((scaleRatio * width) / 2)\r\n      .outerRadius(((scaleRatio + 0.01) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    //Check for sub/superscript\r\n    let labelName = '';\r\n    let subSup = '';\r\n    let isSub = false;\r\n    if (pcvData.label.includes('_') || pcvData.label.includes('^')) {\r\n      for (let i = 0; i < pcvData.label.length; i++) {\r\n        if (pcvData.label[i] === '_') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n          isSub = true;\r\n        }\r\n        if (pcvData.label[i] === '^') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n        }\r\n      }\r\n    } else {\r\n      labelName = pcvData.label;\r\n    }\r\n\r\n    //Computation of label offset\r\n    //Good for most of the labels\r\n    let dxOffset = Math.sign(pcvData.x) * 18,\r\n      dyOffset = -Math.sign(pcvData.y) * 18 + 7;\r\n\r\n    //Custom rules for labels\r\n    if (labelName === '♯') dyOffset -= 3;\r\n    if (labelName === 'WT' && subSup === '1') dxOffset *= 1.2;\r\n    if (labelName === 'WT' && subSup === '0') dxOffset *= 1.4;\r\n    if (labelName === 'C' && subSup === 'o7') dxOffset *= 1.2;\r\n    if (labelName === 'O' && subSup === '1,2') dyOffset *= 1.1;\r\n    if (labelName === 'C♯' && subSup === 'o7') {\r\n      dxOffset *= 1.1;\r\n      dyOffset *= 1.1;\r\n    }\r\n    if (labelName === 'D' && subSup === 'o7') {\r\n      dxOffset *= 0.7;\r\n      dyOffset *= 0.7;\r\n    }\r\n    if (labelName === 'H' && subSup === '2,3') {\r\n      dxOffset *= 1.2;\r\n      dyOffset *= 1.2;\r\n    }\r\n    if (labelName === 'H' && subSup === '1,2') {\r\n      dxOffset *= 0.7;\r\n      dyOffset *= 0.7;\r\n    }\r\n    if (labelName === 'Ω') {\r\n      dxOffset = 15;\r\n      dyOffset = 5;\r\n    }\r\n\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        key={`p.${id}`}\r\n      >\r\n        <path fill={'grey'} key={id} d={mark()}></path>\r\n        <text textAnchor='middle' dx={dxOffset} dy={dyOffset} fontSize='20px'>\r\n          {labelName}\r\n          {isSub ? (\r\n            <tspan fontSize={15} baselineShift='sub'>\r\n              {subSup}\r\n            </tspan>\r\n          ) : (\r\n            <tspan fontSize={15} baselineShift='super'>\r\n              {subSup}\r\n            </tspan>\r\n          )}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  function svgRoseIcon(rosePoints, translateX, translateY, scale, i) {\r\n    return (\r\n      <g key={`rose${i}`}>\r\n        <polyline\r\n          transform={`translate(${translateX},${translateY}) scale(${scale})`}\r\n          fill='none'\r\n          stroke='black'\r\n          strokeWidth='1px'\r\n          points={rosePoints}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      key={`circle${coeffNumber}`}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      {showNumber ? (\r\n        <g transform={`translate(32,20)`}>\r\n          <circle cx='12' cy='12' r='13' fill='black' />\r\n          <text fontSize='24' textAnchor='middle' x='12' y='20' fill='white'>\r\n            {coeffNumber}\r\n          </text>\r\n        </g>\r\n      ) : null}\r\n\r\n      <g transform={`translate(${width / 2},${height / 2})`}>\r\n        {circularSectors.map((innerRadius) =>\r\n          angles.map((angle, id) => arc(angle, id, coeffNumber, innerRadius))\r\n        )}\r\n        {traceData.map((pcv, i) =>\r\n          circleMark(pcv, marksRadiusRatio, 'black', i, 0.2)\r\n        )}\r\n        {userPcv\r\n          ? userPcv.map((pcv, i) => {\r\n              if (!pcv.isDisabled)\r\n                return svgRoseIcon(\r\n                  pcv.rosePoints,\r\n                  pcv.x * circleRadius,\r\n                  -pcv.y * circleRadius,\r\n                  0.7,\r\n                  i\r\n                );\r\n            })\r\n          : null}\r\n        {prototypesData.map((pcv, i) => protoCircleMark(pcv, i))}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst verticalScale = Math.sin(Math.PI / 3);\r\n\r\n//Generates SVGs of the wavescapes for the exporting,\r\n//see Wavescape.js\r\nfunction WavescapeSVG({ wsNumber, wavescapeMatrix, showNumber }) {\r\n  const margin = 10;\r\n  const width = 400;\r\n  const height = width;\r\n  /* const [wsCoordinates, setWsCoordinates] = useState([]); */\r\n\r\n  let margins = [margin, margin];\r\n  let innerSize = [width - margins[0], width - margins[1]];\r\n  let baseSubdivision;\r\n  let wsCoordinates;\r\n\r\n  baseSubdivision = wavescapeMatrix[0].length;\r\n  wsCoordinates = computeTicks(\r\n    innerSize[0],\r\n    innerSize[1],\r\n    baseSubdivision,\r\n    margins[0],\r\n    margins[1]\r\n  );\r\n\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      id={`wavescape${wsNumber}`}\r\n      width={width + margin}\r\n      height={height}\r\n    >\r\n      {showNumber ? (\r\n        <g transform={`translate(32,20)`}>\r\n          <circle cx='12' cy='12' r='13' fill='black' />\r\n          <text fontSize='24' textAnchor='middle' x='12' y='20' fill='white'>\r\n            {wsNumber}\r\n          </text>\r\n        </g>\r\n      ) : null}\r\n\r\n      <g\r\n        transform={`scale(${1}, ${-verticalScale}) translate(${0},${\r\n          -height - 2 * margin\r\n        })`}\r\n      >\r\n        {/* Contour line */}\r\n        {wsCoordinates.length > 0 ? (\r\n          <>\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n          </>\r\n        ) : null}\r\n        {wavescapeMatrix.map((row, i) => {\r\n          return row.map((elem, j) => {\r\n            if (i === 0) {\r\n              return (\r\n                <polygon\r\n                  points={`${wsCoordinates[i][j].x},${wsCoordinates[i][j].y}\r\n                 ${wsCoordinates[i][j + 1].x},${wsCoordinates[i][j + 1].y} \r\n                 ${wsCoordinates[i + 1][j].x},${wsCoordinates[i + 1][j].y}`}\r\n                  fill={elem.rgb}\r\n                  fillOpacity={elem.alpha}\r\n                />\r\n              );\r\n            } else {\r\n              return (\r\n                <polygon\r\n                  points={`\r\n                 ${wsCoordinates[i][j].x},${wsCoordinates[i][j].y}\r\n                 ${wsCoordinates[i - 1][j + 1].x},${\r\n                    wsCoordinates[i - 1][j + 1].y\r\n                  }\r\n                 ${wsCoordinates[i][j + 1].x},${wsCoordinates[i][j + 1].y} \r\n                 ${wsCoordinates[i + 1][j].x},${wsCoordinates[i + 1][j].y}\r\n                 `}\r\n                  fill={elem.rgb}\r\n                  fillOpacity={elem.alpha}\r\n                />\r\n              );\r\n            }\r\n          });\r\n        })}\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default WavescapeSVG;\r\n\r\nfunction computeTicks(\r\n  innerWidth,\r\n  innerHeight,\r\n  baseSubdivision,\r\n  marginLeft,\r\n  marginTop\r\n) {\r\n  //Actually, it is a square matrix\r\n  let unit = innerWidth / baseSubdivision;\r\n  let mat = [];\r\n\r\n  for (let i = 0; i < baseSubdivision + 1; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < baseSubdivision + 1; j++) {\r\n      if (i <= j)\r\n        temp.push({\r\n          x: (j - i) * unit + (i * unit) / 2 + marginLeft,\r\n          y: i * unit + marginTop,\r\n        });\r\n    }\r\n    mat.push(temp);\r\n  }\r\n\r\n  return mat;\r\n}\r\n","export const prototypesData = [\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'C♯', x: 0.866, y: -0.5 },\r\n    { label: 'D', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'E', x: -0.5, y: -0.866 },\r\n    { label: 'F', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'G', x: -0.866, y: 0.5 },\r\n    { label: 'A♭', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'B♭', x: 0.5, y: 0.866 },\r\n    { label: 'B', x: 0.866, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'T_0', x: 1, y: 0 },\r\n    { label: 'T_1', x: 0.5, y: -0.866 },\r\n    { label: 'T_2', x: -0.5, y: -0.866 },\r\n    { label: 'T_3', x: -1, y: 0 },\r\n    { label: 'T_4', x: -0.5, y: 0.866 },\r\n    { label: 'T_5', x: 0.5, y: 0.866 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C+', x: 1, y: 0 },\r\n    { label: 'C♯+', x: 0, y: -1 },\r\n    { label: 'D+', x: -1, y: 0 },\r\n    { label: 'D♯+', x: 0, y: 1 },\r\n    { label: 'H_0,3', x: 0.5, y: 0.5 },\r\n    { label: 'H_0,1', x: 0.5, y: -0.5 },\r\n    { label: 'H_1,2', x: -0.5, y: -0.5 },\r\n    { label: 'H_2,3', x: -0.5, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C^o7', x: 1, y: 0 },\r\n    { label: 'C♯^o7', x: -0.5, y: -0.866 },\r\n    { label: 'D^o7', x: -0.5, y: 0.866 },\r\n    { label: 'O_0,2', x: 0.25, y: 0.433 },\r\n    { label: 'O_0,1', x: 0.25, y: -0.433 },\r\n    { label: 'O_1,2', x: -0.5, y: 0 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'F', x: 0.866, y: -0.5 },\r\n    { label: 'B♭', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'A♭', x: -0.5, y: -0.866 },\r\n    { label: 'C♯', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'B', x: -0.866, y: 0.5 },\r\n    { label: 'E', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'D', x: 0.5, y: 0.866 },\r\n    { label: 'G', x: 0.866, y: 0.5 },\r\n    { label: '♮', x: 0.267, y: 0.462 },\r\n    { label: '5♭', x: 0, y: -0.533 },\r\n    { label: '2♯', x: -0.267, y: 0.462 },\r\n    { label: '3♭', x: 0.462, y: -0.267 },\r\n    { label: '4♯', x: -0.533, y: 0 },\r\n    { label: '♭', x: 0.462, y: 0.267 },\r\n    { label: '6♯', x: -0.267, y: -0.462 },\r\n    { label: '♯', x: 0, y: 0.533 },\r\n    { label: '4♭', x: 0.267, y: -0.462 },\r\n    { label: '3♯', x: -0.462, y: 0.267 },\r\n    { label: '2♭', x: 0.533, y: 0 },\r\n    { label: '5♯', x: -0.462, y: -0.267 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'WT_0', x: 1, y: 0 },\r\n    { label: 'WT_1', x: -1, y: 0 },\r\n  ],\r\n];\r\n","//React\r\nimport { useEffect, useState } from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\n\r\n//Import libraries\r\nimport JSZip from 'jszip';\r\nimport { saveAs } from 'file-saver';\r\n\r\n//Import components\r\nimport CircleSVG from './CircleSVG';\r\nimport WavescapeSVG from './WavescapeSVG';\r\nimport { prototypesData } from './prototypesData';\r\n\r\n//Import material UI components\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/system/Box';\r\nimport Popover from '@mui/material/Popover';\r\n\r\n//Save dialog component\r\nfunction SaveDialog({ traces, userPcvs, wavescapesData }) {\r\n  // ----- DIALOG WINDOW ----- //\r\n  //State: boolean\r\n  //True if the dialog window is opened\r\n  const [open, setOpen] = useState(false);\r\n\r\n  //States: boolean\r\n  //True to include the correspondent elements in the exported images\r\n  const [checkNumb, setCheckNumb] = useState(true);\r\n  const [checkTrace, setCheckTrace] = useState(true);\r\n  const [checkProto, setCheckProto] = useState(true);\r\n  const [checkPcvs, setCheckPcvs] = useState(true);\r\n\r\n  //State: array\r\n  //PCVs to be include in the exported images\r\n  const [subdivUserPcvs, setSubdivUserPcvs] = useState([]);\r\n\r\n  //HOTFIX RGBA POWERPOINT\r\n  const [wavescapesRGBA, setWavescapesRGBA] = useState([]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // ----- POPOVER ----- //\r\n  //State: boolean\r\n  //If true images can be exported, else there is no MIDI data\r\n  const [canSave, setCanSave] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClickPopover = (event) => {\r\n    if (canSave) saveImages();\r\n    else setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClosePopover = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const openPopover = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  //Effect: update canSave if there is data in wavescapes\r\n  useEffect(() => {\r\n    wavescapesData.length > 0 ? setCanSave(true) : setCanSave(false);\r\n    //HOT FIX FOR BLACK TRANSPARENCY IN POWER POINT, INKSCAPE\r\n    let newWavescapes = [];\r\n    for (let i = 0; i < wavescapesData.length; i++) {\r\n      let wavescape = [];\r\n      for (let j = 0; j < wavescapesData[i].length; j++) {\r\n        let row = [];\r\n        for (let k = 0; k < wavescapesData[i][j].length; k++) {\r\n          let newElem = {};\r\n          let rgb = wavescapesData[i][j][k].replace(/[^\\d,]/g, '').split(',');\r\n          newElem.rgb = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\r\n          newElem.alpha = `0.${rgb[3].substring(1, rgb[3].length)}`;\r\n          row.push(newElem);\r\n        }\r\n        wavescape.push(row);\r\n      }\r\n      newWavescapes.push(wavescape);\r\n    }\r\n    setWavescapesRGBA(newWavescapes);\r\n  }, [wavescapesData]);\r\n\r\n  //Effect: on user PCVs update, subdivide by coefficient number\r\n  useEffect(() => {\r\n    //Subdividing the coeffs for each circle\r\n    let tempSubdivUserPcvs = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < userPcvs.length; j++) {\r\n        temp.push({\r\n          x: userPcvs[j].coeffs[i].re,\r\n          y: userPcvs[j].coeffs[i].im,\r\n          rosePoints: userPcvs[j].rosePoints,\r\n          isDisabled: userPcvs[j].isDisabled,\r\n          label: userPcvs[j].label,\r\n        });\r\n      }\r\n      tempSubdivUserPcvs.push(temp);\r\n    }\r\n\r\n    setSubdivUserPcvs(tempSubdivUserPcvs);\r\n  }, [userPcvs]);\r\n\r\n  /**\r\n   * Generate the static markup for the exported wavescapes\r\n   * @param {number} k coefficient number\r\n   * @returns string\r\n   */\r\n  function generateWavescapeSVG(k) {\r\n    let data = (\r\n      <WavescapeSVG\r\n        wavescapeMatrix={wavescapesData.length > 0 ? wavescapesRGBA[k - 1] : []}\r\n        wsNumber={k}\r\n        showNumber={checkNumb}\r\n      />\r\n    );\r\n\r\n    return ReactDOMServer.renderToStaticMarkup(data);\r\n  }\r\n\r\n  /**\r\n   * Generate the static markup for the exported Fourier spaces\r\n   * @param {number} k coefficient number\r\n   * @returns string\r\n   */\r\n  function generateCircleSVG(k) {\r\n    let data = (\r\n      <CircleSVG\r\n        traceData={traces.length > 0 && checkTrace ? traces[k - 1] : []}\r\n        prototypesData={checkProto ? prototypesData[k - 1] : []}\r\n        userPcv={checkPcvs ? subdivUserPcvs[k - 1] : []}\r\n        coeffNumber={k}\r\n        showNumber={checkNumb}\r\n      />\r\n    );\r\n\r\n    return ReactDOMServer.renderToStaticMarkup(data);\r\n  }\r\n\r\n  /**\r\n   * Export the generated images\r\n   */\r\n  const saveImages = () => {\r\n    let zip = new JSZip();\r\n\r\n    //For each coefficient number\r\n    [1, 2, 3, 4, 5, 6].forEach((i) => {\r\n      //Generate SVGs\r\n      let circleSVG = generateCircleSVG(i);\r\n      let wavescapeSVG = generateWavescapeSVG(i);\r\n\r\n      //Adding files to zip\r\n      zip.file(`wavescapes/wavescape${i}.svg`, wavescapeSVG);\r\n      zip.file(`fourier/space${i}.svg`, circleSVG);\r\n    });\r\n\r\n    //Generate zip and save it\r\n    zip.generateAsync({ type: 'blob' }).then(function (content) {\r\n      saveAs(content, 'images.zip');\r\n    });\r\n\r\n    //Close the dialog window\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* EXPORT BUTTON */}\r\n      <Button\r\n        variant='contained'\r\n        size='small'\r\n        color='primary'\r\n        sx={{\r\n          width: '35%',\r\n          margin: 'auto',\r\n          marginTop: 1,\r\n          marginBottom: 1,\r\n        }}\r\n        onClick={handleClickOpen}\r\n      >\r\n        Export images\r\n      </Button>\r\n\r\n      {/* DIALOG WINDOW */}\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>{'Saving options'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Typography sx={{ color: 'black' }}>\r\n              Check the box in order to include the correspondent element in the\r\n              exported images:\r\n            </Typography>\r\n\r\n            {/* CHECKS */}\r\n            <Box sx={{ marginLeft: 2, marginTop: 1 }}>\r\n              <FormGroup sx={{ color: 'black' }}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      size='small'\r\n                      checked={checkNumb}\r\n                      onChange={() => {\r\n                        setCheckNumb(!checkNumb);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label='Coefficients numbers'\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      size='small'\r\n                      checked={checkTrace}\r\n                      onChange={() => {\r\n                        setCheckTrace(!checkTrace);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label='Full trace'\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      size='small'\r\n                      checked={checkProto}\r\n                      onChange={() => {\r\n                        setCheckProto(!checkProto);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label='Prototypes'\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      size='small'\r\n                      checked={checkPcvs}\r\n                      onChange={() => {\r\n                        setCheckPcvs(!checkPcvs);\r\n                      }}\r\n                    />\r\n                  }\r\n                  label='Custom pitch-class vectors'\r\n                />\r\n              </FormGroup>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n          <Button onClick={handleClickPopover} autoFocus>\r\n            Save\r\n          </Button>\r\n\r\n          {/* POPOVER */}\r\n          <Popover\r\n            id={id}\r\n            open={openPopover}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClosePopover}\r\n            anchorOrigin={{\r\n              vertical: 'center',\r\n              horizontal: 'left',\r\n            }}\r\n          >\r\n            <Typography color='error' sx={{ p: 2 }}>\r\n              Upload a MIDI file\r\n            </Typography>\r\n          </Popover>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SaveDialog;\r\n","export default __webpack_public_path__ + \"static/media/wavescape1.18ed9789.svg\";","export default __webpack_public_path__ + \"static/media/wavescape2.64a2be59.svg\";","export default __webpack_public_path__ + \"static/media/wavescape3.b4d3de99.svg\";","export default __webpack_public_path__ + \"static/media/wavescape4.4561a9d9.svg\";","export default __webpack_public_path__ + \"static/media/wavescape5.508bf720.svg\";","export default __webpack_public_path__ + \"static/media/wavescape6.c7103b5f.svg\";","export default __webpack_public_path__ + \"static/media/space1.566a5ba2.svg\";","export default __webpack_public_path__ + \"static/media/space2.3e28cc51.svg\";","export default __webpack_public_path__ + \"static/media/space3.9738264e.svg\";","export default __webpack_public_path__ + \"static/media/space4.054806a8.svg\";","export default __webpack_public_path__ + \"static/media/space5.77046a5c.svg\";","export default __webpack_public_path__ + \"static/media/space6.8a2b4e79.svg\";","export default __webpack_public_path__ + \"static/media/dh_center_logo.b01c2668.svg\";","export default __webpack_public_path__ + \"static/media/Logo_EPFL.654485f4.svg\";","//React\r\nimport React from 'react';\r\n\r\n//Import images\r\nimport dhCenterLogo from './images/dh_center_logo.svg';\r\nimport epflLogo from './images/Logo_EPFL.svg';\r\n\r\n//Import material UI components\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\n\r\n//Footer component\r\nfunction Footer() {\r\n  let logoSize = 150;\r\n  return (\r\n    <Box sx={{ marginTop: 1, textAlign: 'center' }}>\r\n      {/* LOGOS */}\r\n      <Stack spacing={10} sx={{ justifyContent: 'center' }} direction='row'>\r\n        <img alt='' width={logoSize} height={logoSize} src={epflLogo} />\r\n        <img alt='' width={logoSize} src={dhCenterLogo} />\r\n      </Stack>\r\n\r\n      {/* TEXT */}\r\n      <Typography>\r\n        Project “Enabling interactive music visualization for a wider community”\r\n      </Typography>\r\n\r\n      {/* PEOPLE */}\r\n      <Stack sx={{ justifyContent: 'center' }} direction='row'>\r\n        <Typography sx={{ marginRight: 1 }}>\r\n          Project lead:{' '}\r\n          <Link target='_blank' href='https://twitter.com/fabianmoss'>\r\n            Fabian C. Moss\r\n          </Link>\r\n          ;{' '}\r\n          <Link target='_blank' href='https://twitter.com/danielharasim'>\r\n            Daniel Harasim\r\n          </Link>\r\n        </Typography>\r\n        <span>{`\\u2013`}</span>\r\n        <Typography sx={{ marginLeft: 1 }}>\r\n          Developer:{' '}\r\n          <Link href='mailto:giovanni.affatato97@gmail.com'>\r\n            Giovanni Affatato\r\n          </Link>\r\n        </Typography>\r\n      </Stack>\r\n\r\n      {/* LINKS */}\r\n      <Stack sx={{ justifyContent: 'center' }} direction='row'>\r\n        <Link sx={{ marginRight: 1 }} href='https://github.com/DCMLab/MIDFT'>\r\n          GitHub repo\r\n        </Link>\r\n        <span>{`\\u2022`}</span>\r\n        <Link\r\n          sx={{ marginLeft: 1, marginRight: 1 }}\r\n          href='https://www.epfl.ch/labs/dcml/'\r\n        >\r\n          DCML page\r\n        </Link>\r\n        <span>{`\\u2022`}</span>\r\n        <Link\r\n          sx={{ marginLeft: 1 }}\r\n          href='https://github.com/DCMLab/MIDFT/blob/main/LICENSE'\r\n        >\r\n          Copyright\r\n        </Link>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\n\r\nexport const Info = (props) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: 1,\r\n        color: '#31708f',\r\n        backgroundColor: '#d9edf7',\r\n        borderRadius: '10px',\r\n        width: '90%',\r\n        margin: 'auto',\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const Image = ({ scale, alt, src }) => {\r\n  return (\r\n    <Box sx={{ width: scale, margin: 'auto', marginBottom: 2 }}>\r\n      <img\r\n        alt={alt}\r\n        style={{ height: '100%', width: '100%', objectFit: 'contain' }}\r\n        src={src}\r\n      ></img>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const Paragraph = ({ ...props }) => {\r\n  return (\r\n    <Typography\r\n      variant={'body1'}\r\n      sx={{ marginBottom: 3, fontSize: 20 }}\r\n      {...props}\r\n    ></Typography>\r\n  );\r\n};\r\n\r\nexport const BlueLink = ({ href, ...props }) => {\r\n  return (\r\n    <Link\r\n      target='_blank'\r\n      underline='hover'\r\n      href={href}\r\n      {...props}\r\n      sx={{ color: '#1976d2', textDecorationColor: '#1976d266', ...props.sx }}\r\n    >\r\n      {props.children}\r\n    </Link>\r\n  );\r\n};\r\n","//React\r\nimport { useEffect, useRef } from 'react';\r\n\r\n//Images\r\nimport ws1 from '../images/wavescapes/wavescape1.svg';\r\nimport ws2 from '../images/wavescapes/wavescape2.svg';\r\nimport ws3 from '../images/wavescapes/wavescape3.svg';\r\nimport ws4 from '../images/wavescapes/wavescape4.svg';\r\nimport ws5 from '../images/wavescapes/wavescape5.svg';\r\nimport ws6 from '../images/wavescapes/wavescape6.svg';\r\nimport fs1 from '../images/fourier/space1.svg';\r\nimport fs2 from '../images/fourier/space2.svg';\r\nimport fs3 from '../images/fourier/space3.svg';\r\nimport fs4 from '../images/fourier/space4.svg';\r\nimport fs5 from '../images/fourier/space5.svg';\r\nimport fs6 from '../images/fourier/space6.svg';\r\n\r\n//Import material UI components\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Footer from '../Footer';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport { BlueLink, Paragraph } from '../textComponents';\r\n\r\n//Home component\r\nexport default function Home({ setOpen, setInAnalysisPage }) {\r\n  const ref1 = useRef(null);\r\n  const ref2 = useRef(null);\r\n  const ref3 = useRef(null);\r\n  const ref4 = useRef(null);\r\n\r\n  const imgSize = 170;\r\n\r\n  useEffect(() => {\r\n    setInAnalysisPage(false);\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ margin: 'auto', maxWidth: '1200px' }}>\r\n        <Box\r\n          sx={{ padding: 2, width: '1060px', margin: 'auto', paddingBottom: 5 }}\r\n        >\r\n          <Typography\r\n            variant='h2'\r\n            style={{ fontWeight: 'bold', marginLeft: 20, textAlign: 'center' }}\r\n          >\r\n            Welcome!\r\n          </Typography>\r\n          <Divider sx={{ marginBottom: 5 }} />\r\n\r\n          <Stack\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n            }}\r\n            direction='row'\r\n          >\r\n            <img alt='' width={imgSize} height={imgSize} src={ws1} />\r\n            <img alt='' width={imgSize} height={imgSize} src={ws2} />\r\n            <img alt='' width={imgSize} height={imgSize} src={ws3} />\r\n            <img alt='' width={imgSize} height={imgSize} src={ws4} />\r\n            <img alt='' width={imgSize} height={imgSize} src={ws5} />\r\n            <img alt='' width={imgSize} height={imgSize} src={ws6} />\r\n          </Stack>\r\n\r\n          <Stack\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n              marginBottom: 6,\r\n            }}\r\n            direction='row'\r\n          >\r\n            <img alt='' width={imgSize} height={imgSize} src={fs1} />\r\n            <img alt='' width={imgSize} height={imgSize} src={fs2} />\r\n            <img alt='' width={imgSize} height={imgSize} src={fs3} />\r\n            <img alt='' width={imgSize} height={imgSize} src={fs4} />\r\n            <img alt='' width={imgSize} height={imgSize} src={fs5} />\r\n            <img alt='' width={imgSize} height={imgSize} src={fs6} />\r\n          </Stack>\r\n\r\n          <Paragraph>\r\n            This web application is an open-source online tool for interactive\r\n            music visualization. It aims at bridging the gap between\r\n            mathematical music theory and music enthusiasts. In recent years,\r\n            music theorists have discovered that the{' '}\r\n            <BlueLink\r\n              href={'https://en.wikipedia.org/wiki/Discrete_Fourier_transform'}\r\n            >\r\n              Discrete Fourier Transform (DFT)\r\n            </BlueLink>{' '}\r\n            can be used to analyze the pitch-class content of pieces of music,\r\n            for instance to compare the tonal organization of different pieces.\r\n            It may also reveal interesting sections in a piece that eluded a\r\n            theorist’s inspection. This technique has consequently opened up new\r\n            avenues for both theoretical and historical music research{' '}\r\n            <Link\r\n              underline='hover'\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                ref1.current.scrollIntoView({\r\n                  behavior: 'smooth',\r\n                });\r\n              }}\r\n              href={'#Manual entry of chords'}\r\n              sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n            >\r\n              <sup>[1]</sup>\r\n            </Link>\r\n            ,{' '}\r\n            <Link\r\n              underline='hover'\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                ref2.current.scrollIntoView({\r\n                  behavior: 'smooth',\r\n                });\r\n              }}\r\n              href={'#Manual entry of chords'}\r\n              sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n            >\r\n              <sup>[2]</sup>\r\n            </Link>\r\n            ,{' '}\r\n            <Link\r\n              underline='hover'\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                ref3.current.scrollIntoView({\r\n                  behavior: 'smooth',\r\n                });\r\n              }}\r\n              href={'#Manual entry of chords'}\r\n              sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n            >\r\n              <sup>[3]</sup>\r\n            </Link>\r\n            ,{' '}\r\n            <Link\r\n              underline='hover'\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n                ref4.current.scrollIntoView({\r\n                  behavior: 'smooth',\r\n                });\r\n              }}\r\n              href={'#Manual entry of chords'}\r\n              sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n            >\r\n              <sup>[4]</sup>\r\n            </Link>\r\n            . However, applying the DFT to music requires advanced mathematical\r\n            and computational skills. Harnessing the full power of such a\r\n            complex method so far remained restricted to only a small group of\r\n            researchers.The app’s interactive interface enables scholars and\r\n            students of music, as well as musicians, to employ the DFT method in\r\n            their research, teaching, and musical practice. It is moreover\r\n            ideally suited to explore and to teach visualization techniques for\r\n            complex cultural data, for example in Digital Humanities.\r\n          </Paragraph>\r\n\r\n          <Paragraph>\r\n            The{' '}\r\n            <BlueLink target='_self' href={'#theory'}>\r\n              Theory\r\n            </BlueLink>{' '}\r\n            page describes how to use and interpret the DFT for music analysis.\r\n            It also explains the interface of the{' '}\r\n            <BlueLink target='_self' href={'#analysis'}>\r\n              Analysis\r\n            </BlueLink>{' '}\r\n            page. On that page, users can explore the DFT method by either\r\n            manually entering{' '}\r\n            <BlueLink href={'https://en.wikipedia.org/wiki/Set_theory_(music)'}>\r\n              pitch-class sets\r\n            </BlueLink>\r\n            , by uploading a music piece in{' '}\r\n            <BlueLink href={'https://en.wikipedia.org/wiki/MIDI'}>\r\n              MIDI\r\n            </BlueLink>{' '}\r\n            format, or by connecting a MIDI device (e.g. MIDI keyboard or\r\n            software) to the app.\r\n          </Paragraph>\r\n\r\n          <Paragraph>\r\n            No installation is required to use the app, and we hope that this\r\n            will facilitate its adoption by the music theory community. The full\r\n            feature set of the app is currently only supported with{' '}\r\n            <BlueLink href={'https://www.google.com/chrome/index.html'}>\r\n              chrome\r\n            </BlueLink>\r\n            . The program code is hosted on{' '}\r\n            <BlueLink href={'https://github.com/DCMLab/MIDFT'}>GitHub</BlueLink>{' '}\r\n            under a GPL3 licence.\r\n          </Paragraph>\r\n\r\n          <Typography variant='h5' sx={{ marginBottom: 1 }}>\r\n            <b>References</b>\r\n          </Typography>\r\n          <Typography ref={ref1}>\r\n            1: Amiot (2016). Music Through Fourier Space: Discrete Fourier\r\n            Transform in Music Theory. Springer.\r\n          </Typography>\r\n          <Typography ref={ref2}>\r\n            2: Noll (2019). Insiders’ Choice: Studying Pitch Class Sets Through\r\n            Their Discrete Fourier Transformations. In{' '}\r\n            <i>Mathematics and Computation in Music</i> (pp. 371–378). Springer.{' '}\r\n            <BlueLink href={'https://doi.org/10.1007/978-3-030-21392-3_32'}>\r\n              https://doi.org/10.1007/978-3-030-21392-3_32\r\n            </BlueLink>\r\n          </Typography>\r\n          <Typography ref={ref3}>\r\n            3: Tymoczko & Yust (2019). Fourier Phase and Pitch-Class Sum. In\r\n            <i>Mathematics and Computation in Music</i> (pp. 46–58). Springer.{' '}\r\n            {''}\r\n            <BlueLink href={'https://doi.org/10.1007/978-3-030-21392-3_4'}>\r\n              https://doi.org/10.1007/978-3-030-21392-3_4\r\n            </BlueLink>\r\n          </Typography>\r\n          <Typography ref={ref4}>\r\n            4: Viaccoz, Harasim, Moss, & Rohrmeier (in press). Wavescapes: A\r\n            Visual Hierarchical Analysis of Tonality using the Discrete Fourier\r\n            Transformation. <i>Musicae Scientiae</i>.{' '}\r\n            <BlueLink href={'https://doi.org/10.1177/10298649211034906'}>\r\n              https://doi.org/10.1177/10298649211034906\r\n            </BlueLink>\r\n          </Typography>\r\n        </Box>\r\n      </Paper>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","//React\r\nimport { useEffect, useRef } from 'react';\r\n\r\n//Import material UI components\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Footer from '../Footer';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport Link from '@mui/material/Link';\r\nimport { BlueLink, Info, Image, Paragraph } from '../textComponents';\r\n\r\n//Markdown tests\r\nimport Tex from '@matejmazur/react-katex';\r\nimport 'katex/dist/katex.min.css';\r\n\r\nexport default function Theory({ setOpen, setInAnalysisPage }) {\r\n  let ref1 = useRef(null);\r\n  let ref2 = useRef(null);\r\n  let ref3 = useRef(null);\r\n  let ref4 = useRef(null);\r\n  let ref5 = useRef(null);\r\n  let ref6 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setInAnalysisPage(false);\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Paper sx={{ margin: 'auto', maxWidth: '1200px' }}>\r\n        <Box sx={{ padding: 3, width: '1060px', margin: 'auto' }}>\r\n          <Typography\r\n            variant='h2'\r\n            style={{ fontWeight: 'bold', marginLeft: 20 }}\r\n          >\r\n            Manual\r\n          </Typography>\r\n          <Divider />\r\n\r\n          <Typography component='span'>\r\n            <ul>\r\n              <li>\r\n                <Link\r\n                  underline='hover'\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    ref1.current.scrollIntoView({\r\n                      behavior: 'smooth',\r\n                    });\r\n                  }}\r\n                  href={'#File upload'}\r\n                  sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n                >\r\n                  File upload\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  underline='hover'\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    ref2.current.scrollIntoView({\r\n                      behavior: 'smooth',\r\n                    });\r\n                  }}\r\n                  href={'#Wavescapes'}\r\n                  sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n                >\r\n                  Wavescapes\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  underline='hover'\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    ref3.current.scrollIntoView({\r\n                      behavior: 'smooth',\r\n                    });\r\n                  }}\r\n                  href={'#Fourier Coefficient Spaces'}\r\n                  sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n                >\r\n                  Fourier Coefficient Spaces\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  underline='hover'\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    ref4.current.scrollIntoView({\r\n                      behavior: 'smooth',\r\n                    });\r\n                  }}\r\n                  href={'#MIDI playback and overall layout'}\r\n                  sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n                >\r\n                  MIDI playback and overall layout\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  underline='hover'\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    ref5.current.scrollIntoView({\r\n                      behavior: 'smooth',\r\n                    });\r\n                  }}\r\n                  href={'#Manual entry of chords'}\r\n                  sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n                >\r\n                  Manual entry of chords\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link\r\n                  underline='hover'\r\n                  onClick={(event) => {\r\n                    event.preventDefault();\r\n                    ref6.current.scrollIntoView({\r\n                      behavior: 'smooth',\r\n                    });\r\n                  }}\r\n                  href={'#Download images'}\r\n                  sx={{ color: '#1976d2', textDecorationColor: '#1976d266' }}\r\n                >\r\n                  Download images\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </Typography>\r\n\r\n          {/* FILE UPLOAD */}\r\n          <Box sx={{ paddingBottom: 5, paddingTop: 5 }}>\r\n            <Typography ref={ref1} variant='h4' style={{ fontWeight: 'bold' }}>\r\n              File upload\r\n            </Typography>\r\n            <Divider sx={{ marginBottom: 2 }} />\r\n            <Paragraph>\r\n              The easiest way to get started using the app is to find a MIDI\r\n              file on the web and upload it. For example, we can use the main\r\n              theme of the musical{' '}\r\n              <BlueLink\r\n                sx={{ fontStyle: 'italic' }}\r\n                href='https://bitmidi.com/uploads/6508.mid'\r\n              >\r\n                Phantom of the Opera\r\n              </BlueLink>\r\n              . (Right-)Click on the link to download the file, switch to the{' '}\r\n              <BlueLink target='_self' href='#/analysis'>\r\n                Analysis\r\n              </BlueLink>{' '}\r\n              tab of this app, and upload it.{' '}\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/8JdAyNM.png'\r\n              scale='50%'\r\n            ></Image>\r\n\r\n            <Paragraph>\r\n              Before or after uploading the file, you can choose a{' '}\r\n              <b>Time resolution</b> either as a musical note value or as a\r\n              duration in seconds. This affects into how many segments the MIDI\r\n              file will be divided for analysis. If you change the resolution\r\n              after the upload, you have to click on <b>CHANGE</b> so that the\r\n              time-resolution change takes effect. For the{' '}\r\n              <i>Phantom of the Opera</i> example, we recommend a resolution of\r\n              an eighth note.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/ykmKgrB.png'\r\n              scale='45%'\r\n            ></Image>\r\n          </Box>\r\n\r\n          {/* WAVESCAPES */}\r\n          <Box sx={{ paddingBottom: 5 }}>\r\n            <Typography ref={ref2} variant='h4' style={{ fontWeight: 'bold' }}>\r\n              Wavescapes\r\n            </Typography>\r\n            <Divider sx={{ marginBottom: 2 }} />\r\n\r\n            <Paragraph>\r\n              Depending on the length of the piece and the chosen time\r\n              resolution, the app might take a while until the file is\r\n              processed. When processing has finished, the app visualizes the\r\n              piece with six triangular plots called <i>Wavescapes</i> (details\r\n              about this analysis method are described{' '}\r\n              <BlueLink href='https://doi.org/10.1177/10298649211034906'>\r\n                in this paper\r\n              </BlueLink>\r\n              ).\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/ySOPcoP.png'\r\n              scale='90%'\r\n            ></Image>\r\n            <Paragraph>\r\n              In short, wavescapes use a mathematical formalism called the{' '}\r\n              <BlueLink\r\n                sx={{ fontStyle: 'italic' }}\r\n                href='https://en.wikipedia.org/wiki/Discrete_Fourier_transform'\r\n              >\r\n                Discrete Fourier Transform\r\n              </BlueLink>{' '}\r\n              (DFT), to display regularities with respect to scales that divide\r\n              the octave into equal parts. Concretely, the wavescapes from 1 to\r\n              6 correspond to specific divisions of the octave: into 12\r\n              semitones, 6 tritones, 4 augmented triads, 3 diminished-seventh\r\n              chords, 12 diatonic/pentatonic scales, and two whole-tone scales.\r\n              If a part of a piece predominantly uses pitches from such a\r\n              collection, the corresponding areas in the wavescapes will be\r\n              relatively homogeneous in color. For example, if the notes of the\r\n              B diminished triad <code>B° = (11, 2, 5, 8)</code> are used\r\n              recurrently then this is shown in green in the fourth wavescape.\r\n              For more details, see{' '}\r\n              <BlueLink href={'https://doi.org/10.1177/10298649211034906'}>\r\n                this paper\r\n              </BlueLink>\r\n              .\r\n            </Paragraph>\r\n            <Paragraph>\r\n              Back to the <i>Phantom</i> example: there are a number of\r\n              interesting observations about the tonality of this piece that we\r\n              can draw from the wavescapes.\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <b>Wavescapes 3 and 5</b> have the strongest colors, meaning that\r\n              diatonic scales as well as augmented triads play and important\r\n              role for the harmonic organization of the piece.\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <b>On the lower levels of the 3rd wavescape,</b> the colors blue -\r\n              green - yellow - pink ( - green - ) pink change in regular time\r\n              intervals. Tracing this sequence of colors in the corresponding\r\n              Fourier Coefficient Space (see also below), we observe that these\r\n              colors correspond to the labels <Tex math='H_{1,2}' />,{' '}\r\n              <Tex math='H_{2,3}' />\r\n              , <Tex math='H_{0, 3}' />\r\n              , and <Tex math='H_{0, 1}' />, respectively (in clockwise\r\n              direction). A label <Tex math='H_{i,j}' /> denotes the hexatonic\r\n              scale that contains the{' '}\r\n              <BlueLink href={'https://en.wikipedia.org/wiki/Pitch_class'}>\r\n                pitch classes\r\n              </BlueLink>{' '}\r\n              <Tex math='i' /> and <Tex math='j' /> (e.g.,{' '}\r\n              <Tex math='H_{1,2}=\\{1,2,5,6,9,10\\}' />\r\n              ). The overall harmonic trajectory of this piece moves in\r\n              descending minor thirds, and at the end it briefly moves across\r\n              the plane to its hexatonic pole.\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <b>On the lower levels of the 5th wavescape,</b> the color pattern\r\n              is roughly orange/red - green - pink, showing that the initial,\r\n              middle, and final parts of this piece modulate through different\r\n              keys. Note that the red and pink areas are adjacent to each other\r\n              but opposite to the green area, again showing a symmetrical\r\n              organization in terms of keys.\r\n            </Paragraph>\r\n            <Paragraph>\r\n              <b>Finally, the 6th wavescape</b> shows that the first half of the\r\n              piece is closer to the whole-tone scale containing C (\r\n              <Tex math='WT_0' />, reddish) and the second half is closer to the\r\n              whole-tone scale containing C# (<Tex math='WT_1' />, blueish).\r\n            </Paragraph>\r\n            <Paragraph>\r\n              Observations like these can guide analyses and inspire hearings of\r\n              musical pieces, in particular regarding the relation of harmony\r\n              and form.\r\n            </Paragraph>\r\n          </Box>\r\n\r\n          {/* Fourier Coefficient Spaces */}\r\n          <Box sx={{ paddingBottom: 5 }}>\r\n            <Typography ref={ref3} variant='h4' style={{ fontWeight: 'bold' }}>\r\n              Fourier Coefficient Spaces\r\n            </Typography>\r\n            <Divider sx={{ marginBottom: 2 }} />\r\n\r\n            <Paragraph>\r\n              Below the wavescapes you see the respective{' '}\r\n              <b>Fourier Coefficient Spaces</b>. Each point in one of these\r\n              spaces corresponds to the value of that Fourier coefficient for\r\n              one of the MIDI file's segments.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/d8Pzxs6.png'\r\n              scale='90%'\r\n            ></Image>\r\n            <Paragraph>\r\n              Change the window length and see how the arrangement of the points\r\n              changes, too.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/pA1WR1E.png'\r\n              scale='45%'\r\n            ></Image>\r\n            <Paragraph>\r\n              Very short window lengths tend to distribute the segments of the\r\n              piece more evenly throughout the circles. In contrast, long window\r\n              lengths collapse the segments into a small area, and even into a\r\n              single point if the window covers the entire piece (this\r\n              corresponds to the topmost point of the wavescapes). It is\r\n              therefore a good idea to try different window lengths in order to\r\n              identify an appropriate level of detail, in which the piece moves\r\n              along rather smooth paths in at least some coefficients. The gif\r\n              below shows the effect of increasing the window size.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/j3OeT3d.gif'\r\n              scale='90%'\r\n            ></Image>\r\n            <Paragraph>\r\n              Changing the parameters time resolution and window length yield\r\n              different analytical perspectives on the piece and allow for a\r\n              scalable and dynamic reading of a piece.\r\n            </Paragraph>\r\n\r\n            <Info>\r\n              <b>Note:</b> the wavescapes do not change because re-rendering\r\n              them could last very long if the piece is long and the\r\n              segmentation is too fine-grained.\r\n            </Info>\r\n          </Box>\r\n\r\n          {/* MIDI playback and overall layout */}\r\n          <Box sx={{ paddingBottom: 5 }}>\r\n            <Typography ref={ref4} variant='h4' style={{ fontWeight: 'bold' }}>\r\n              MIDI playback and overall layout\r\n            </Typography>\r\n            <Divider sx={{ marginBottom: 2 }} />\r\n\r\n            <Paragraph>\r\n              On the bottom of the main window, there are options to control the\r\n              playback of the uploaded MIDI file.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/JOci5Ww.png'\r\n              scale='40%'\r\n            ></Image>\r\n            <Paragraph>\r\n              Several other options to change the visual layout of the app are\r\n              available in the bottom menu. You can toggle:\r\n            </Paragraph>\r\n            <Typography sx={{ fontSize: 20 }} component={'span'}>\r\n              <ul>\r\n                <li>the full trace,</li>\r\n                <li>the prototypes (circular legends), and</li>\r\n                <li>\r\n                  the values for phase and magnitude (<Tex math='\\phi' /> and{' '}\r\n                  <Tex math='\\mu' />\r\n                  ).\r\n                </li>\r\n              </ul>\r\n            </Typography>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/tD8U2GU.png'\r\n              scale='40%'\r\n            ></Image>\r\n            <Paragraph>\r\n              The size of the Fourier-space circles can also be adjusted\r\n              relative to the size of your browser window.\r\n            </Paragraph>\r\n            <Paragraph>\r\n              You can modify the overall layout by selecting one of the\r\n              pre-defined options on the far left (1x6, 2x3, 3x2, 6x1); the\r\n              default is 2x3. On the top left, next to the file upload, you find\r\n              an arrow to hide/show the main menu, e.g., to focus on the\r\n              wavescapes and Fourier coefficients.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/Ym4gr84.png'\r\n              scale='90%'\r\n            ></Image>\r\n          </Box>\r\n\r\n          {/* Manual entry of chords */}\r\n          <Box sx={{ paddingBottom: 5 }}>\r\n            <Typography ref={ref5} variant='h4' style={{ fontWeight: 'bold' }}>\r\n              Manual entry of chords\r\n            </Typography>\r\n            <Divider sx={{ marginBottom: 2 }} />\r\n\r\n            <Paragraph>\r\n              Apart from uploading a musical piece as a MIDI file, the app also\r\n              allows you to enter your favorite pitch-class sets. This can be\r\n              useful if you want to show, for instance, certain chord\r\n              progressions, harmonic sequences, or voice-leading chains. It can\r\n              also be useful to display interesting pitch-class sets taken from\r\n              a particular piece. Those can be entered in the{' '}\r\n              <b>Custom pitch-class vectors</b> field which allows for two basic\r\n              input formats.\r\n            </Paragraph>\r\n            <Typography sx={{ fontSize: 20 }} component={'span'}>\r\n              <ol>\r\n                <li>\r\n                  Pitch-class (multi-)sets are enclosed in curly braces{' '}\r\n                  <code>&#123;</code> and <code>&#125;</code> and contain pitch\r\n                  classes (integers ranging from 0 to 11). We allow for multiple\r\n                  occurrences of pitch classes, for example you can enter{' '}\r\n                  <code>(0, 0, 4, 7, 10)</code> for a C dominant-seventh chord\r\n                  with doubled C.\r\n                </li>\r\n                <li>\r\n                  (Weighted) pitch-class vectors are enclosed in parentheses{' '}\r\n                  <code>(</code> and <code>)</code>, and must have twelve\r\n                  comma-separated non-negative numbers. Internally, these\r\n                  vectors are normalized to sum to one, so only the relative\r\n                  weights are taken into account. For the C dominant-seventh\r\n                  chord from above one would enter\r\n                  <code>(2,0,0,0,1,0,0,1,0,0,1,0)</code>.\r\n                </li>\r\n              </ol>\r\n            </Typography>\r\n\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/VLfxxV9.png'\r\n              scale='40%'\r\n            ></Image>\r\n            <Info>\r\n              <b>Note</b>: white space is ignored in the custom input field.\r\n            </Info>\r\n            <Paragraph>\r\n              The collection of manually entered pitch-class vectors is\r\n              displayed below the input field. Entries in this collection can be\r\n              toggled by clicking on them, or deleted by clicking on the x. When\r\n              loading the app, three pitch-class vectors are already in the\r\n              collection, and the first of them is active. They need to be\r\n              deactivated or deleted if you don't want them to be displayed.\r\n            </Paragraph>\r\n            <Paragraph>\r\n              This functionality can also be used to visualize pitch-class\r\n              vectors from concrete compositions. Let's take the anacrusis of{' '}\r\n              <BlueLink\r\n                href={\r\n                  'https://imslp.org/wiki/3_Pieces,_Op.52_(Scriabin,_Aleksandr)'\r\n                }\r\n              >\r\n                Scriabin’s op. 52/3 (1907) \"Languorous Poem\"\r\n              </BlueLink>{' '}\r\n              as a real-world example.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/cG9J08Z.png'\r\n              scale='35%'\r\n            ></Image>\r\n            <Paragraph>\r\n              If we count each quarter note as 1 (and eight notes as 0.5), then\r\n              its pitch-class content can be represented as the pitch-class\r\n              vector <code>(1.5, 0, 1, 0, 1, 1, 0, 0.5, 0, 0, 1.5, 0)</code>.\r\n              The figure below shows with an asterisk where it is mapped to in\r\n              the respective Fourier coefficient spaces.\r\n            </Paragraph>\r\n            <Image\r\n              alt={' '}\r\n              src='https://i.imgur.com/9x6GLVG.png'\r\n              scale='90%'\r\n            ></Image>\r\n            <Paragraph>\r\n              If we count each quarter note as 1 (and eight notes as 0.5), then\r\n              its pitch-class content can be represented as the pitch-class\r\n              vector <code>(1.5, 0, 1, 0, 1, 1, 0, 0.5, 0, 0, 1.5, 0)</code>.\r\n              The figure below uses an asterisk to show where it is mapped to in\r\n              the respective Fourier coefficient spaces.\r\n            </Paragraph>\r\n            <Paragraph>\r\n              This chord can be understood as a C7/9/11 chord despite the fact\r\n              that the key signature indicates B major / G <span>&#9839;</span>{' '}\r\n              minor. Being a dominant, it strongly points to the F-major\r\n              prototype (marked by <span>&#9837;</span> ) in the fifth\r\n              coefficient. Connoisseurs of Scriabin's harmonic language will\r\n              recognize this chord as the tritone substitution of the extended\r\n              dominant on F<span>&#9839;</span>.\r\n            </Paragraph>\r\n            <Info>\r\n              <b>Note</b>: Of course you are free to enter any pitch-class\r\n              vector. It does not need to correspond to standard chords but can\r\n              also, for example, refer to segments (potentially non-contiguous)\r\n              in an atonal composition.\r\n            </Info>\r\n          </Box>\r\n\r\n          {/* Download images */}\r\n          <Box sx={{ paddingBottom: 5 }}>\r\n            <Typography ref={ref6} variant='h4' style={{ fontWeight: 'bold' }}>\r\n              Download images\r\n            </Typography>\r\n            <Divider sx={{ marginBottom: 2 }} />\r\n\r\n            <Paragraph>\r\n              Finally, to download the results (e.g., for teaching purposes, a\r\n              presentation, or a publication) click on <b>EXPORT IMAGES</b> at\r\n              the bottom of the main menu on the left.{' '}\r\n            </Paragraph>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import { useRef, useEffect, useState } from 'react';\r\n\r\nconst verticalScale = Math.sin(Math.PI / 3);\r\n\r\nexport const Wavescape = ({\r\n  wsNumber,\r\n  wavescapeMatrix,\r\n  currentWavescapeSubdiv,\r\n  wavescapeWidth,\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const [wsCoordinates, setWsCoordinates] = useState([]);\r\n  const margin = 10;\r\n  let width = wavescapeWidth - margin;\r\n  let height = wavescapeWidth;\r\n  let ticks;\r\n  const [ticksHeight, setTicksHeight] = useState(3);\r\n\r\n  useEffect(() => {\r\n    width = wavescapeWidth;\r\n    height = wavescapeWidth;\r\n    ticksHeight < 1\r\n      ? setTicksHeight(1)\r\n      : setTicksHeight(Math.floor(0.01 * wavescapeWidth));\r\n  }, [wavescapeWidth]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // increase the actual size of our canvas\r\n    //canvas.width = width * devicePixelRatio;\r\n    //canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    //ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    //canvas.style.width = width + 'px';\r\n    //canvas.style.height = height + 'px';\r\n\r\n    let margins = [margin, margin];\r\n    let innerSize = [canvas.width - margins[0], canvas.height - margins[1]];\r\n    let baseSubdivision;\r\n\r\n    if (wavescapeMatrix) {\r\n      baseSubdivision = wavescapeMatrix[0].length;\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      //ctx.setTransform(1, 0, 0, -1, 0, ctx.canvas.height);\r\n      ticks = computeTicks(\r\n        innerSize[0],\r\n        innerSize[1],\r\n        baseSubdivision,\r\n        margins[0],\r\n        margins[1]\r\n      );\r\n\r\n      setWsCoordinates(ticks);\r\n\r\n      //Vertical scaling to make the triangle equilateral\r\n      //ctx.scale(1, verticalScale);\r\n      drawWavescape(ticks, ctx, wavescapeMatrix);\r\n    }\r\n  }, [wavescapeMatrix, width, height]);\r\n\r\n  return (\r\n    <svg\r\n      id={`wavescape${wsNumber}`}\r\n      width={width + margin}\r\n      height={height}\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <g transform={`translate(${width * 0.06},${width * 0.1})`}>\r\n        <circle cx='5%' cy='1%' r={`${(width / 100) * 2.8}px`} fill='black' />\r\n        <text\r\n          fontSize={`${(width / 100) * 5.2}px`}\r\n          textAnchor='middle'\r\n          x='5%'\r\n          y='2.8%'\r\n          fill='white'\r\n        >\r\n          {wsNumber}\r\n        </text>\r\n      </g>\r\n      <g\r\n        transform={`scale(${1}, ${-verticalScale}) translate(${0},${-height})`}\r\n      >\r\n        <foreignObject x={0} y={0} width={width} height={height}>\r\n          <canvas width={width} height={height} ref={canvasRef}></canvas>\r\n        </foreignObject>\r\n\r\n        {/* //Line ticks */}\r\n        {wsCoordinates.length > 0\r\n          ? wsCoordinates[0].map((coord, i) => (\r\n              <line\r\n                key={`tick${i}`}\r\n                x1={coord.x}\r\n                x2={coord.x}\r\n                y1={coord.y - ticksHeight}\r\n                y2={coord.y + ticksHeight}\r\n                stroke='grey'\r\n                strokeWidth='1px'\r\n              />\r\n            ))\r\n          : null}\r\n        {/* Contour line */}\r\n        {wsCoordinates.length > 0 && wsCoordinates[0].length > 0 ? (\r\n          <>\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              stroke='grey'\r\n              strokeWidth='2px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <circle\r\n              cx={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].x +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].x) /\r\n                2\r\n              }\r\n              cy={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].y +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].y) /\r\n                2\r\n              }\r\n              r={0.01 * width}\r\n              fill='white'\r\n            />\r\n            <circle\r\n              cx={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].x +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].x) /\r\n                2\r\n              }\r\n              cy={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].y +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].y) /\r\n                2\r\n              }\r\n              r={0.01 * width}\r\n              stroke='black'\r\n              strokeWidth={1}\r\n              fill='transparent'\r\n            />\r\n          </>\r\n        ) : null}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction computeTicks(\r\n  innerWidth,\r\n  innerHeight,\r\n  baseSubdivision,\r\n  marginLeft,\r\n  marginTop\r\n) {\r\n  //Actually, it is a square matrix\r\n  let unit = innerWidth / baseSubdivision;\r\n  let mat = [];\r\n\r\n  for (let i = 0; i < baseSubdivision + 1; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < baseSubdivision + 1; j++) {\r\n      if (i <= j)\r\n        temp.push({\r\n          x: (j - i) * unit + (i * unit) / 2 + marginLeft,\r\n          y: i * unit + marginTop,\r\n        });\r\n    }\r\n    mat.push(temp);\r\n  }\r\n\r\n  return mat;\r\n}\r\n\r\nfunction drawWavescape(ticks, ctx, wavescapeMatrix) {\r\n  for (let i = 0; i < ticks.length - 1; i++) {\r\n    for (let j = 0; j < ticks[i].length - 1; j++) {\r\n      if (i === 0) {\r\n        //first row composed by triangles\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      } else {\r\n        //other rows composed by diamonds\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i - 1][j + 1].x, ticks[i - 1][j + 1].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      }\r\n    }\r\n  }\r\n}\r\n","//Import components\r\nimport { Wavescape } from './Wavescape';\r\n\r\n//Import material UI components\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\n\r\n//Wavescape module component\r\nfunction WavescapeModule({\r\n  wavescapesData,\r\n  currentWavescapeSubdiv,\r\n  elemsWidth,\r\n}) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n      }}\r\n    >\r\n      {/* If wavescapes' data is present plot the wavescapes, else \r\n      notify the user to upload a MIDI file */}\r\n      {wavescapesData.length > 0 ? (\r\n        wavescapesData.map((data, i) => (\r\n          <Wavescape\r\n            wsNumber={i + 1}\r\n            key={`w.${i}`}\r\n            wavescapeMatrix={data}\r\n            currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n            wavescapeWidth={elemsWidth}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Typography color='error'>No midi file uploaded</Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WavescapeModule;\r\n","//React and D3\r\nimport * as d3 from 'd3';\r\nimport { useRef, useEffect, useState } from 'react';\r\n\r\n//Import functions\r\nimport { pixelColor } from './colorMapping';\r\n\r\n//Import material UI components\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\n\r\nlet savedImage = null;\r\n\r\n//REMINDER\r\n//Minus before every y coordinate due to the fact that images have\r\n//positive y downward, meanwhile cartesian plane has positive y upward.\r\n\r\n//Circle component\r\nfunction Circle({\r\n  coeffNumber,\r\n  protoDataCoeff,\r\n  fullTrace,\r\n  traceDataCoeff,\r\n  userPcvsCoeff,\r\n  currentSubdiv,\r\n  performanceCoeff,\r\n  targetCircleWidth,\r\n  showMagAndPhase,\r\n  showFullTrace,\r\n}) {\r\n  //Color wheel canvas\r\n  const canvasRef = useRef(null);\r\n\r\n  //Displayed magnitude and phase\r\n  const [currentSubdivCoeff, setCurrentSubdivCoeff] = useState({\r\n    mu: 0,\r\n    phi: 0,\r\n  });\r\n\r\n  //Image parameters\r\n  let width = 445;\r\n  let height = width;\r\n  const margin = 45;\r\n  const headerOffset = 15;\r\n  const circleRadius = width / 2 - margin;\r\n\r\n  //Relative size of icons in the image\r\n  let marksRadiusRatio = 0.01;\r\n\r\n  //Image rendering\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let radius = Math.floor(circleRadius * devicePixelRatio);\r\n    let image = ctx.createImageData(2 * radius, 2 * radius);\r\n    let data = image.data;\r\n\r\n    //Increase the actual size of our canvas\r\n    canvas.width = width * devicePixelRatio;\r\n    canvas.height = height * devicePixelRatio;\r\n\r\n    //Ensure all drawing operations are scaled\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    //Scale everything down using CSS\r\n    canvas.style.width = width + 'px';\r\n    canvas.style.height = height + 'px';\r\n\r\n    //Render the color wheel only at page initialization,\r\n    //skip if already initialized\r\n    if (!savedImage) {\r\n      for (let x = -radius; x < radius; x++) {\r\n        for (let y = -radius; y < radius; y++) {\r\n          let distance = Math.sqrt(x * x + y * y);\r\n\r\n          if (distance > radius) {\r\n            // skip all (x,y) coordinates that are outside of the circle\r\n            continue;\r\n          }\r\n          // Figure out the starting index of this pixel in the image data array.\r\n          let rowLength = 2 * radius;\r\n          let adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n          let adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n          let pixelWidth = 4; // each pixel requires 4 slots in the data array\r\n          let index = (adjustedX + adjustedY * rowLength) * pixelWidth;\r\n          let rgba = pixelColor(x, y, distance / radius);\r\n          data[index] = rgba.r;\r\n          data[index + 1] = rgba.g;\r\n          data[index + 2] = rgba.b;\r\n          data[index + 3] = rgba.a;\r\n        }\r\n      }\r\n      savedImage = image;\r\n    }\r\n    ctx.putImageData(savedImage, 0, 0);\r\n\r\n    //Render the trace\r\n    if (showFullTrace && traceDataCoeff) {\r\n      ctx.save();\r\n      ctx.translate((400 - margin) / 2, (400 - margin) / 2);\r\n      drawTrace();\r\n      ctx.restore();\r\n    }\r\n  }, [width, height, circleRadius, traceDataCoeff, showFullTrace]);\r\n\r\n  //Change displayed magnitude and phase when current subdivision changes\r\n  useEffect(() => {\r\n    if (traceDataCoeff && traceDataCoeff[currentSubdiv]) {\r\n      //Rounding to second decimal and converting to polar coordinate\r\n      let x = traceDataCoeff[currentSubdiv].x;\r\n      let y = traceDataCoeff[currentSubdiv].y;\r\n\r\n      setCurrentSubdivCoeff(cartesianToPolar(x, y));\r\n    }\r\n  }, [currentSubdiv, traceDataCoeff]);\r\n\r\n  //Workaround for chrome bug on canvas overlay in foreignObj SVG\r\n  useEffect(() => {\r\n    canvasRef.current.getContext('2d').getImageData(0, 0, 1, 1);\r\n  }, []);\r\n\r\n  //Re-render trace when trace data changes (a new file is uploaded)\r\n  useEffect(() => {\r\n    if (traceDataCoeff) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.save();\r\n      ctx.translate((400 - margin) / 2, (400 - margin) / 2);\r\n      drawTrace();\r\n      ctx.restore();\r\n    }\r\n  }, [fullTrace]);\r\n\r\n  //Change of coordinates\r\n  function cartesianToPolar(x, y, norm = false) {\r\n    let phi = (Math.atan2(y, x) * 180) / Math.PI;\r\n    let mu = Math.sqrt(x * x + y * y);\r\n\r\n    if (norm) mu = mu / circleRadius;\r\n\r\n    phi = Math.round(phi + Number.EPSILON);\r\n    mu = Math.round((mu + Number.EPSILON) * 100) / 100;\r\n\r\n    return { mu, phi };\r\n  }\r\n\r\n  //Render the trace in Fourier space\r\n  function drawTrace() {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n\r\n    //traceDataCoeff to visualze the windowed version, fullTrace otherwise\r\n    traceDataCoeff.forEach((element) => {\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        element.x * circleRadius,\r\n        -element.y * circleRadius,\r\n        (marksRadiusRatio * width) / 2,\r\n        0,\r\n        Math.PI * 2,\r\n        true\r\n      );\r\n      ctx.fill();\r\n    });\r\n  }\r\n\r\n  //Render cross icon for the points generated by the MIDI devices\r\n  const crossMark = (pcvData, radiusScaleWidth) => {\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n      >\r\n        <line\r\n          x1='0'\r\n          x2='0'\r\n          y1='7'\r\n          y2='-7'\r\n          stroke='black'\r\n          strokeWidth='1.5'\r\n        ></line>\r\n        <line\r\n          x1='7'\r\n          x2='-7'\r\n          y1='0'\r\n          y2='0'\r\n          stroke='black'\r\n          strokeWidth='1.5'\r\n        ></line>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  //Render the rose icon for the PCVs insterd by the user\r\n  function svgRoseIcon(label, rosePoints, translateX, translateY, scale, i) {\r\n    let polarCoord = cartesianToPolar(translateX, translateY, true);\r\n    let widthSvg = 40;\r\n    return (\r\n      <Tooltip\r\n        key={`rtt.${i}`}\r\n        placement='top'\r\n        arrow\r\n        title={\r\n          <Stack\r\n            direction='row'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            spacing={2}\r\n          >\r\n            <svg\r\n              width={widthSvg}\r\n              height={widthSvg}\r\n              viewBox={`0 0 ${widthSvg} ${widthSvg}`}\r\n            >\r\n              <circle\r\n                cx={widthSvg / 2}\r\n                cy={widthSvg / 2}\r\n                r={widthSvg / 2}\r\n                strokeWidth='1'\r\n                fill='#FFF'\r\n                fillOpacity={1}\r\n              ></circle>\r\n\r\n              <polyline\r\n                transform={`translate(${widthSvg / 2},${\r\n                  widthSvg / 2\r\n                }) scale(${1.8})`}\r\n                fill='none'\r\n                stroke='black'\r\n                strokeWidth='1px'\r\n                points={rosePoints}\r\n              />\r\n            </svg>\r\n            <Stack>\r\n              <Typography>{label}</Typography>\r\n              <Typography>{`\\u{3BC}: ${\r\n                polarCoord.mu\r\n              } \\u{3C6}: ${-polarCoord.phi}\\u{b0}`}</Typography>\r\n            </Stack>\r\n          </Stack>\r\n        }\r\n      >\r\n        <g>\r\n          <polyline\r\n            transform={`translate(${translateX},${translateY}) scale(${scale})`}\r\n            fill='none'\r\n            stroke='black'\r\n            strokeWidth='1px'\r\n            fill='#FFF'\r\n            fillOpacity={0}\r\n            points={rosePoints}\r\n          />\r\n\r\n          <polyline\r\n            transform={`translate(${translateX},${translateY}) scale(${scale})`}\r\n            fill='none'\r\n            stroke='black'\r\n            strokeWidth='1px'\r\n            points={rosePoints}\r\n          />\r\n        </g>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  //Render icon of the prototypes\r\n  const protoCircleMark = (pcvData, id) => {\r\n    let scaleRatio = 0.02;\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius((scaleRatio * width) / 2)\r\n      .outerRadius(((scaleRatio + 0.01) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    //Check for sub/superscript\r\n    let labelName = '';\r\n    let subSup = '';\r\n    let isSub = false;\r\n    if (pcvData.label.includes('_') || pcvData.label.includes('^')) {\r\n      for (let i = 0; i < pcvData.label.length; i++) {\r\n        if (pcvData.label[i] === '_') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n          isSub = true;\r\n        }\r\n        if (pcvData.label[i] === '^') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n        }\r\n      }\r\n    } else {\r\n      labelName = pcvData.label;\r\n    }\r\n\r\n    //Computation of label offset\r\n    //Good for most of the labels\r\n    let dxOffset = Math.sign(pcvData.x) * 18,\r\n      dyOffset = -Math.sign(pcvData.y) * 18 + 7;\r\n\r\n    //Custom rules for labels\r\n    if (labelName === '♯') dyOffset -= 3;\r\n    if (labelName === 'WT' && subSup === '1') dxOffset *= 1.2;\r\n    if (labelName === 'WT' && subSup === '0') dxOffset *= 1.4;\r\n    if (labelName === 'C' && subSup === 'o7') dxOffset *= 1.2;\r\n    if (labelName === 'O' && subSup === '1,2') dyOffset *= 1.1;\r\n    if (labelName === 'C♯' && subSup === 'o7') {\r\n      dxOffset *= 1.1;\r\n      dyOffset *= 1.1;\r\n    }\r\n    if (labelName === 'D' && subSup === 'o7') {\r\n      dxOffset *= 0.7;\r\n      dyOffset *= 0.7;\r\n    }\r\n    if (labelName === 'H' && subSup === '2,3') {\r\n      dxOffset *= 1.2;\r\n      dyOffset *= 1.2;\r\n    }\r\n    if (labelName === 'H' && subSup === '1,2') {\r\n      dxOffset *= 0.7;\r\n      dyOffset *= 0.7;\r\n    }\r\n    if (labelName === 'Ω') {\r\n      dxOffset = 15;\r\n      dyOffset = 5;\r\n    }\r\n\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        key={`p.${id}`}\r\n      >\r\n        <path fill={'grey'} key={id} d={mark()}></path>\r\n        <text textAnchor='middle' dx={dxOffset} dy={dyOffset} fontSize='20px'>\r\n          {labelName}\r\n          {isSub ? (\r\n            <tspan fontSize={15} baselineShift='sub'>\r\n              {subSup}\r\n            </tspan>\r\n          ) : (\r\n            <tspan fontSize={15} baselineShift='super'>\r\n              {subSup}\r\n            </tspan>\r\n          )}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  //Render border of the circle (used to smooth the color wheel canvas)\r\n  const drawBorder = () => {\r\n    return (\r\n      <path\r\n        fill={'azure'}\r\n        d={d3\r\n          .arc()\r\n          .innerRadius(circleRadius - 1)\r\n          .outerRadius(circleRadius + 3)\r\n          .startAngle(0)\r\n          .endAngle(2 * Math.PI)()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  //Plot circles related to the MIDI playback (N points before the current subdiv)\r\n  const highlightSubdiv = (radiusScaleWidth) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    const highlight = d3\r\n      .arc()\r\n      .innerRadius((radiusScaleWidth * width) / 2)\r\n      .outerRadius(((radiusScaleWidth + 0.005) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    let highlightedTrace = [];\r\n    let length = 7;\r\n    let opacityArray = [];\r\n\r\n    opacityArray.push(1);\r\n    opacityArray.push(0.5);\r\n    for (let i = 2; i < length; i++) {\r\n      opacityArray.push(\r\n        Math.round((opacityArray[i - 1] - 0.5 / (length - 2)) * 100) / 100\r\n      );\r\n    }\r\n\r\n    if (currentSubdiv < length)\r\n      highlightedTrace = traceDataCoeff.slice(0, currentSubdiv + 1);\r\n    else\r\n      highlightedTrace = traceDataCoeff.slice(\r\n        currentSubdiv - length + 1,\r\n        currentSubdiv + 1\r\n      );\r\n\r\n    highlightedTrace = highlightedTrace.reverse();\r\n\r\n    return highlightedTrace.map((coeff, i) => {\r\n      return (\r\n        <g key={`g.${i}`}>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'white'}\r\n            key={i}\r\n            fillOpacity={opacityArray[i]}\r\n            d={mark()}\r\n          ></path>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'black'}\r\n            fillOpacity={opacityArray[i]}\r\n            key={`t.${i}`}\r\n            d={highlight()}\r\n          ></path>\r\n        </g>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ marginBottom: 2 }}>\r\n      <svg\r\n        width={targetCircleWidth}\r\n        height={targetCircleWidth}\r\n        viewBox={`0 0 ${width} ${height}`}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        {/* COEFFICIENT NUMBER */}\r\n        <g transform={`translate(32,8)`}>\r\n          <circle cx='12' cy='12' r='13' fill='black' />\r\n          <text fontSize='24' textAnchor='middle' x='12' y='20' fill='white'>\r\n            {coeffNumber}\r\n          </text>\r\n        </g>\r\n\r\n        {/* MAGNITUDE AND PHASE */}\r\n        <g transform={`translate(${125},0)`}>\r\n          {showMagAndPhase ? (\r\n            <>\r\n              <text\r\n                x='120'\r\n                y='23'\r\n                style={{ fontSize: '24px' }}\r\n              >{`\\u{3C6}: ${currentSubdivCoeff.phi}\\u{b0}`}</text>\r\n              <text\r\n                x='34'\r\n                y='24'\r\n                style={{ fontSize: '24px' }}\r\n              >{`\\u{3BC}: ${currentSubdivCoeff.mu}`}</text>\r\n            </>\r\n          ) : null}\r\n        </g>\r\n\r\n        {/* FOURIER SPACE */}\r\n        <g transform={`translate(0,${headerOffset})`}>\r\n          {/* COLOR WHEEL AND TRACE (canvas) */}\r\n          <foreignObject x={margin} y={margin} width={width} height={height}>\r\n            <canvas\r\n              id={`circle${coeffNumber}`}\r\n              style={{ zIndex: '-1' }}\r\n              width={width}\r\n              height={height}\r\n              ref={canvasRef}\r\n            ></canvas>\r\n          </foreignObject>\r\n\r\n          {/* POINTS AND BORDER */}\r\n          <g transform={`translate(${width / 2},${width / 2})`}>\r\n            {/* BORDER */}\r\n            {drawBorder()}\r\n            {protoDataCoeff\r\n              ? protoDataCoeff.map((pcv, i) => protoCircleMark(pcv, i))\r\n              : null}\r\n\r\n            {/* MIDI device coeff */}\r\n            {performanceCoeff.x === 0 && performanceCoeff.y === 0\r\n              ? null\r\n              : crossMark(performanceCoeff, marksRadiusRatio * 2, 'teal')}\r\n\r\n            {/* ROSES */}\r\n            {userPcvsCoeff\r\n              ? userPcvsCoeff.map((pcv, i) => {\r\n                  if (!pcv.isDisabled)\r\n                    return svgRoseIcon(\r\n                      pcv.label,\r\n                      pcv.rosePoints,\r\n                      pcv.x * circleRadius,\r\n                      -pcv.y * circleRadius,\r\n                      0.7,\r\n                      i\r\n                    );\r\n                })\r\n              : null}\r\n\r\n            {/* MIDI PLAYBACK */}\r\n            {traceDataCoeff ? highlightSubdiv(marksRadiusRatio) : null}\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n","//React\r\nimport { useEffect, useState } from 'react';\r\n\r\n//Import components\r\nimport Circle from './Circle';\r\nimport { prototypesData } from './prototypesData';\r\n\r\n//Import material UI components\r\nimport Box from '@mui/material/Box';\r\n\r\n//Fourier spaces module component\r\nfunction CoefficientsModule({\r\n  fullTraces,\r\n  coeffTracesData,\r\n  showPrototypes,\r\n  showMagAndPhase,\r\n  userPcvs,\r\n  currentSubdiv,\r\n  midiDevNotesDftCoeffs,\r\n  elemsWidth,\r\n  showFullTrace,\r\n}) {\r\n  //State: array\r\n  //Array that contains all the prototypes if showPrototypes is true,\r\n  //empty array if false.\r\n  const [selectedProtoPitchClasses, setSelectedProtoPitchClasses] =\r\n    useState(prototypesData);\r\n\r\n  //State: array\r\n  //Array that contains points of the PCVs inserted by the user\r\n  //divided for each Fourier space (from 1st to 6th).\r\n  const [subdivUserPcvs, setSubdivUserPcvs] = useState([]);\r\n\r\n  //Effect: show/unshow prototypes when showPrototypes is toggled.\r\n  useEffect(() => {\r\n    if (showPrototypes) {\r\n      setSelectedProtoPitchClasses(prototypesData);\r\n    } else setSelectedProtoPitchClasses([]);\r\n  }, [showPrototypes]);\r\n\r\n  //Effect: when user add or remove PCVs, update subdivUserPcvs\r\n  //by subdividing for the coefficient number\r\n  useEffect(() => {\r\n    //Subdividing the coeffs for each Fourier space\r\n    let tempSubdivUserPcvs = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < userPcvs.length; j++) {\r\n        temp.push({\r\n          x: userPcvs[j].coeffs[i].re,\r\n          y: userPcvs[j].coeffs[i].im,\r\n          rosePoints: userPcvs[j].rosePoints,\r\n          isDisabled: userPcvs[j].isDisabled,\r\n          label: userPcvs[j].label,\r\n        });\r\n      }\r\n      tempSubdivUserPcvs.push(temp);\r\n    }\r\n\r\n    setSubdivUserPcvs(tempSubdivUserPcvs);\r\n  }, [userPcvs]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n      }}\r\n    >\r\n      {/* PLOT THE SPACES FROM 1st TO 6th */}\r\n      {[1, 2, 3, 4, 5, 6].map((coeffNum) => (\r\n        <Circle\r\n          coeffNumber={coeffNum}\r\n          key={`w.${coeffNum}`}\r\n          protoDataCoeff={selectedProtoPitchClasses[coeffNum - 1]}\r\n          fullTrace={fullTraces[coeffNum - 1]}\r\n          traceDataCoeff={coeffTracesData[coeffNum - 1]}\r\n          userPcvsCoeff={subdivUserPcvs[coeffNum - 1]}\r\n          currentSubdiv={currentSubdiv}\r\n          performanceCoeff={midiDevNotesDftCoeffs[coeffNum]}\r\n          targetCircleWidth={elemsWidth}\r\n          showMagAndPhase={showMagAndPhase}\r\n          showFullTrace={showFullTrace}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CoefficientsModule;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport * as Tone from 'tone';\r\nimport WavescapeModule from '../WavescapeModule';\r\nimport CoefficientsModule from '../CoefficientsModule';\r\n\r\nimport Player from '../Player';\r\n\r\nimport dft from '../DFT';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Slider from '@mui/material/Slider';\r\n\r\n//Drawer mui components\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n//Accordion mui components\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n//Bottom appbar\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create(['margin', 'width'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: `${drawerWidth}px`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nfunction Application({\r\n  fileName,\r\n  setInAnalysisPage,\r\n  open,\r\n  setOpen,\r\n  wavescapesData,\r\n  fullTraces,\r\n  coeffTracesData,\r\n  currentSubdiv,\r\n  currentWavescapeSubdiv,\r\n  userPcvs,\r\n}) {\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [showPrototypes, setShowPrototypes] = useState(true);\r\n  const [showMagAndPhase, setShowMagAndPhase] = useState(true);\r\n  const [showFullTrace, setShowFullTrace] = useState(true);\r\n\r\n  //MIDI inputs\r\n  const [midiDevNotesDftCoeffs, setMidiDevNotesDftCoeffs] = useState(\r\n    dft([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]).map((coeff) => {\r\n      return { x: coeff.re, y: coeff.im };\r\n    })\r\n  );\r\n\r\n  //Ref to get the width of the accordion used to computed layout sizes\r\n  const accordionRef = useRef(null);\r\n  const [accordionWidth, setAccordionWidth] = useState(100);\r\n  const [elemsForEachRow, setElemsForEachRow] = useState(3);\r\n  const [elemsWidth, setElemsWidth] = useState(440);\r\n\r\n  function changeElementsSize(drawerOffset = 0) {\r\n    let adjustmentFractSizes = 10;\r\n    if (accordionRef.current) {\r\n      setElemsWidth(\r\n        (accordionRef.current.clientWidth + drawerOffset) / elemsForEachRow -\r\n          adjustmentFractSizes\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleResize() {\r\n    let drawerOffset = 0;\r\n    changeElementsSize(drawerOffset);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setInAnalysisPage(true);\r\n\r\n    //Open drawer when page loads\r\n    setOpen(true);\r\n\r\n    //Minus some pixel for robustness: sometimes width with fractional pixels\r\n    changeElementsSize();\r\n\r\n    window.addEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //When analysis data changes, show by default the full trace\r\n    setShowFullTrace(true);\r\n  }, [fullTraces]);\r\n\r\n  useEffect(() => {\r\n    changeElementsSize();\r\n    window.addEventListener('resize', handleResize);\r\n  }, [elemsForEachRow]);\r\n\r\n  useEffect(() => {\r\n    let drawerOffset = 0;\r\n    open ? (drawerOffset = -400) : (drawerOffset = +400);\r\n    changeElementsSize(drawerOffset);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    changeElementsSize();\r\n  }, [accordionWidth]);\r\n\r\n  //MIDI devices init\r\n  useEffect(() => {\r\n    //INIT\r\n    let currentNotes = [];\r\n    const sampler = new Tone.Sampler({\r\n      urls: {\r\n        A0: 'A0.mp3',\r\n        C1: 'C1.mp3',\r\n        'D#1': 'Ds1.mp3',\r\n        'F#1': 'Fs1.mp3',\r\n        A1: 'A1.mp3',\r\n        C2: 'C2.mp3',\r\n        'D#2': 'Ds2.mp3',\r\n        'F#2': 'Fs2.mp3',\r\n        A2: 'A2.mp3',\r\n        C3: 'C3.mp3',\r\n        'D#3': 'Ds3.mp3',\r\n        'F#3': 'Fs3.mp3',\r\n        A3: 'A3.mp3',\r\n        C4: 'C4.mp3',\r\n        'D#4': 'Ds4.mp3',\r\n        'F#4': 'Fs4.mp3',\r\n        A4: 'A4.mp3',\r\n        C5: 'C5.mp3',\r\n        'D#5': 'Ds5.mp3',\r\n        'F#5': 'Fs5.mp3',\r\n        A5: 'A5.mp3',\r\n        C6: 'C6.mp3',\r\n        'D#6': 'Ds6.mp3',\r\n        'F#6': 'Fs6.mp3',\r\n        A6: 'A6.mp3',\r\n        C7: 'C7.mp3',\r\n        'D#7': 'Ds7.mp3',\r\n        'F#7': 'Fs7.mp3',\r\n        A7: 'A7.mp3',\r\n        C8: 'C8.mp3',\r\n      },\r\n      release: 1,\r\n      baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n    }).toDestination();\r\n    sampler.volume.value = -30;\r\n\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator.requestMIDIAccess().then(success, failure);\r\n    }\r\n\r\n    function computeDftCoeffs(playedNotes) {\r\n      let pcv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n      playedNotes.forEach((note) => {\r\n        let pitch;\r\n        if (note.includes('#')) {\r\n          pitch = note.slice(0, 2);\r\n        } else pitch = pitch = note.slice(0, 1);\r\n\r\n        switch (pitch) {\r\n          case 'C':\r\n            pcv[0] += 1;\r\n            break;\r\n          case 'C#':\r\n            pcv[1] += 1;\r\n            break;\r\n          case 'D':\r\n            pcv[2] += 1;\r\n            break;\r\n          case 'D#':\r\n            pcv[3] += 1;\r\n            break;\r\n          case 'E':\r\n            pcv[4] += 1;\r\n            break;\r\n          case 'F':\r\n            pcv[5] += 1;\r\n            break;\r\n          case 'F#':\r\n            pcv[6] += 1;\r\n            break;\r\n          case 'G':\r\n            pcv[7] += 1;\r\n            break;\r\n          case 'G#':\r\n            pcv[8] += 1;\r\n            break;\r\n          case 'A':\r\n            pcv[9] += 1;\r\n            break;\r\n          case 'A#':\r\n            pcv[10] += 1;\r\n            break;\r\n          case 'B':\r\n            pcv[11] += 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      let dftCoeffs = dft(pcv);\r\n      dftCoeffs = dftCoeffs.map((coeff) => {\r\n        return { x: coeff.re, y: coeff.im };\r\n      });\r\n      //console.log(dftCoeffs);\r\n      setMidiDevNotesDftCoeffs(dftCoeffs);\r\n    }\r\n\r\n    function handleInput(input) {\r\n      const command = input.data[0];\r\n\r\n      //Discard messages different from note on and note off\r\n      if (command !== 144 && command !== 128) return;\r\n\r\n      const note = Tone.Frequency(input.data[1], 'midi').toNote();\r\n\r\n      //Discard note off messages for unplayed notes\r\n      if (command === 128 && !currentNotes.includes(note)) return;\r\n\r\n      //Decrease velocity to avoid clipping\r\n      const velocity = Math.round(input.data[2] * 0.05);\r\n      //const velocity = input.data[2];\r\n\r\n      //console.log(`command ${command}: note ${note}, vel ${velocity}`);\r\n\r\n      switch (command) {\r\n        case 144: //noteOn\r\n          if (velocity > 0) {\r\n            //Note is on\r\n            sampler.triggerAttack(note, Tone.immediate(), velocity);\r\n            currentNotes.push(note);\r\n          } else {\r\n            //Note on + vel 0 = Note off\r\n            sampler.triggerRelease(note, Tone.immediate());\r\n            currentNotes = currentNotes.filter(\r\n              (currentNote) => currentNote !== note\r\n            );\r\n          }\r\n          break;\r\n        case 128: //noteOff\r\n          sampler.triggerRelease(note, Tone.immediate());\r\n          currentNotes = currentNotes.filter(\r\n            (currentNote) => currentNote !== note\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      computeDftCoeffs(currentNotes);\r\n    }\r\n\r\n    function success(midiAccess) {\r\n      midiAccess.onstatechange = updateDevices;\r\n\r\n      const inputs = midiAccess.inputs;\r\n\r\n      inputs.forEach((input) => {\r\n        input.onmidimessage = handleInput;\r\n      });\r\n    }\r\n\r\n    function failure() {\r\n      console.log('Could not connect MIDI');\r\n    }\r\n\r\n    function updateDevices(event) {\r\n      console.log(\r\n        `Name: ${event.port.name}, Brand: ${event.port.manufacturer}, State: ${event.port.state}, Type: ${event.port.type}`\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  function toggleShowPrototypes() {\r\n    setShowPrototypes(!showPrototypes);\r\n  }\r\n\r\n  function toggleShowMagAndPhase() {\r\n    setShowMagAndPhase(!showMagAndPhase);\r\n  }\r\n\r\n  function toggleShowFullTrace() {\r\n    setShowFullTrace(!showFullTrace);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          padding: 0,\r\n          margin: 'auto',\r\n          marginBottom: '70px',\r\n          width: `${accordionWidth}%`,\r\n        }}\r\n      >\r\n        <Accordion defaultExpanded={true}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel1a-content'\r\n            id='panel1a-header'\r\n          >\r\n            <Typography variant='h6'>Wavescapes</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails ref={accordionRef} sx={{ padding: 0 }}>\r\n            <WavescapeModule\r\n              wavescapesData={wavescapesData}\r\n              currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n              elemsWidth={elemsWidth}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <Accordion defaultExpanded={true}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel2a-content'\r\n            id='panel2a-header'\r\n          >\r\n            <Typography variant='h6'>Fourier Coefficient Spaces</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails sx={{ padding: 0 }}>\r\n            <CoefficientsModule\r\n              fullTraces={fullTraces}\r\n              coeffTracesData={coeffTracesData}\r\n              currentSubdiv={currentSubdiv}\r\n              showPrototypes={showPrototypes}\r\n              showMagAndPhase={showMagAndPhase}\r\n              showFullTrace={showFullTrace}\r\n              userPcvs={userPcvs}\r\n              midiDevNotesDftCoeffs={midiDevNotesDftCoeffs}\r\n              elemsWidth={elemsWidth}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Box>\r\n\r\n      <AppBar\r\n        position='fixed'\r\n        open={open}\r\n        color='secondary'\r\n        sx={{ top: 'auto', bottom: 0, maxHeight: '74px' }}\r\n      >\r\n        <Toolbar>\r\n          <Box sx={{ minWidth: 120 }}>\r\n            <FormControl size='small' variant='standard' fullWidth>\r\n              <InputLabel>Layout</InputLabel>\r\n              <Select\r\n                value={elemsForEachRow}\r\n                label='Layout'\r\n                onChange={(event) => {\r\n                  setAccordionWidth(100);\r\n                  setElemsForEachRow(event.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value={6}>1x6</MenuItem>\r\n                <MenuItem value={3}>2x3</MenuItem>\r\n                <MenuItem value={2}>3x2</MenuItem>\r\n                <MenuItem value={1}>6x1</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Player\r\n            fileName={fileName}\r\n            currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              margin: '2% 5%',\r\n              maxWidth: '100px',\r\n              justifyContent: 'space-evenly',\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowFullTrace()}\r\n                    checked={showFullTrace}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={<Typography noWrap={true}>Show full trace</Typography>}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowPrototypes()}\r\n                    checked={showPrototypes}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={<Typography noWrap={true}>Show Prototypes</Typography>}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowMagAndPhase()}\r\n                    checked={showMagAndPhase}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography noWrap={true}>Show &mu; and &phi;</Typography>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Box>\r\n          <Box sx={{ minWidth: '20%', padding: '1% 3% 1% 2%', marginTop: 1 }}>\r\n            <Typography>Plots size</Typography>\r\n            <Slider\r\n              min={20}\r\n              max={100}\r\n              value={accordionWidth}\r\n              defaultValue={100}\r\n              aria-label='Plots size'\r\n              valueLabelDisplay='auto'\r\n              onChange={(event, value) => {\r\n                setAccordionWidth(value);\r\n              }}\r\n              marks={[\r\n                { value: 20, label: '20%' },\r\n                { value: 50, label: '50%' },\r\n                { value: 100, label: '100%' },\r\n              ]}\r\n            />\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Application;\r\n","//React\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\n//Import functions\r\nimport { setPlayerMidiData } from './Player';\r\nimport {\r\n  getRgbaMatrix,\r\n  getMidiFileDataObject,\r\n  getDftCoeffStatic,\r\n  getDftCoeffDynamic,\r\n  sumCentered,\r\n  sumIncremental,\r\n  powerCentered,\r\n} from './getDftMatrices';\r\nimport dft from './DFT';\r\nimport parse from './parser';\r\nimport { getRosePoints } from './roses';\r\n\r\n//Import components\r\nimport Navbar from './Navbar';\r\nimport ResolutionSelector from './ResolutionSelector';\r\nimport PcvChipsBox from './PcvChipsBox';\r\nimport SaveDialog from './SaveDialog';\r\n\r\n//Import pages\r\nimport Home from './pages/Home';\r\nimport Theory from './pages/Theory';\r\nimport Analysis from './pages/Analysis';\r\n\r\n//Import material UI components\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Paper from '@mui/material/Paper';\r\nimport Slider from '@mui/material/Slider';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\n//Change this varible to change the size\r\n//of the Drawer component on the left\r\nconst drawerWidth = 400;\r\n\r\n//Song variables\r\nlet currentSongBPM = 80;\r\nlet currentSongMidiData;\r\nlet fileName;\r\n\r\n//Drawer animation\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#e0e0e0',\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: `-${drawerWidth}px`,\r\n    ...(open && {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n      backgroundColor: '#e0e0e0',\r\n    }),\r\n  })\r\n);\r\n\r\n//Custom style for Drawer header\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\n//Main component\r\nfunction App() {\r\n  const theme = useTheme();\r\n\r\n  // ----- STATES ----- //\r\n\r\n  //GENERAL STATES\r\n\r\n  //State: boolean\r\n  //If true the Drawer is opened.\r\n  const [open, setOpen] = useState(false);\r\n  //State: string\r\n  //File path MIDI.\r\n  const [file, setFile] = useState('');\r\n  //State: boolean\r\n  //Close or open the Drawer whenever the user move to another page.\r\n  const [inAnalysisPage, setInAnalysisPage] = useState(false);\r\n\r\n  //ANALYSIS STATES\r\n\r\n  //State: string[6][50]\r\n  //RGBA data of the wavescapes, from 1st to 6th coefficient.\r\n  const [wavescapesData, setWavescapesData] = useState([]);\r\n  //State: points[6][N]\r\n  //Points in the Fourier spaces (from 1st to 6th) related\r\n  //to pcvs extraced from subdivisions with the selected resolution.\r\n  const [coeffTracesData, setCoeffTracesData] = useState([]);\r\n  //State: PCV[N]]\r\n  //Unnormalized PC distributions for the current song\r\n  const [pcDistributions, setPcDistributions] = useState([]);\r\n  //State: points[6][N]\r\n  //Windowed version of coeffTracesData.\r\n  const [windowedCoeffTraces, setWindowedCoeffTraces] = useState([]);\r\n  //State: integer\r\n  //Current subdivision being played by the MIDI player,\r\n  //second index of coeffTracesData[1:6][currentSubdiv].\r\n  const [currentSubdiv, setCurrentSubdiv] = useState(0);\r\n  const [mapCurrentSubdiv, setMapCurrentSubdiv] = useState(0);\r\n  //State: integer\r\n  //Multiplicative factor of base time resolution.\r\n  const [windowLen, setWindowLen] = useState(1);\r\n  //State: object\r\n  //Changed only by ResolutionSelector component.\r\n  //noteResolutionValue: number, 1 is quarter note, 0.5 is eighth note...\r\n  //seconds: custom resolution in seconds\r\n  //useSeconds: use seconds attribute when true\r\n  const [resolutionMode, setResolutionMode] = useState({\r\n    noteResolutionValue: 1,\r\n    seconds: 1.5,\r\n    useSeconds: false,\r\n  });\r\n  //State: number\r\n  //Computed in order to have always 50 subdivisions for the wavescape,\r\n  //trade-off between MIDI file duration and minimum resolution since\r\n  //computing wavescapes presents high time complexity.\r\n  //Initial value of 10 is arbitrary and never used.\r\n  const [wavescapeResolution, setWavescapeResolution] = useState(10);\r\n  //State: number\r\n  //Can be controlled by the user. Resolution used to compute the\r\n  //coefficients in the Fourier spaces without computing the whole wavescape.\r\n  const [circleResolution, setCircleResolution] = useState(1);\r\n  //State: string\r\n  //Specify the type of normalization to use for windowing: sum, power\r\n  const [normalizationType, setNormalizationType] = useState('sum');\r\n  //State: string\r\n  //Specify the type of windowing: centered, incremental\r\n  const [windowingType, setWindowingType] = useState('centered');\r\n  const [normWindSelectedVal, setNormWindSelectedVal] = useState(0);\r\n\r\n  //INPUT STATES\r\n\r\n  //State: boolean\r\n  //True if the text field input of the window length is an invalid string.\r\n  const [invalidWndLen, setInvalidWndLen] = useState(false);\r\n  //State: string\r\n  //Current string in the text field input of the window length.\r\n  const [textfieldWndLen, setTextfieldWndLen] = useState('1');\r\n  //State: array\r\n  //Contains all the pcvs inserted by the user.\r\n  //label: string representing the pcv\r\n  //coeffs: points in the 6 Fourier spaces\r\n  //n,d: num and den, indexes of the rose matrix\r\n  //rosePoints: points that form the rose's shape\r\n  const [userPcvs, setUserPcvs] = useState([]);\r\n  const pcvTextRef = useRef(null);\r\n  //State: boolean\r\n  //If pcv input parser throw an error, this state is true --> show error\r\n  const [isInputPcvInvalid, setIsInputPcvInvalid] = useState(false);\r\n  //State: matrix\r\n  //Matrix that tracks if with a given index can be used or\r\n  //it is already in use.\r\n  const [rosesMat, setRosesMat] = useState([]);\r\n\r\n  //Effect: when currentSubdiv changes map\r\n  //coeffTracesData's subdivs to windowedCoeffTraces' subdivs --> centerd window\r\n  useEffect(() => {\r\n    if (windowedCoeffTraces.length > 0) {\r\n      switch (windowingType) {\r\n        case 'centered':\r\n          let halfWindowLen = Math.floor(windowLen / 2);\r\n          let mappedSubdiv = 0;\r\n          if (currentSubdiv >= windowedCoeffTraces[0].length + halfWindowLen)\r\n            mappedSubdiv = windowedCoeffTraces[0].length - 1;\r\n          else if (currentSubdiv <= halfWindowLen) mappedSubdiv = 0;\r\n          else mappedSubdiv = currentSubdiv - halfWindowLen;\r\n\r\n          setMapCurrentSubdiv(mappedSubdiv);\r\n\r\n          break;\r\n\r\n        case 'incremental':\r\n          if (currentSubdiv >= coeffTracesData[0].length)\r\n            setMapCurrentSubdiv(coeffTracesData[0].length - 1);\r\n          else setMapCurrentSubdiv(currentSubdiv);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [currentSubdiv]);\r\n\r\n  //Effect: when window length is changed,\r\n  //recompute the trace to be visualized\r\n  useEffect(() => {\r\n    let windowedTraces;\r\n\r\n    if (windowLen === 1) setWindowedCoeffTraces(coeffTracesData);\r\n    else {\r\n      switch (normWindSelectedVal) {\r\n        case 0:\r\n          windowedTraces = sumCentered(pcDistributions, windowLen);\r\n          break;\r\n        case 1:\r\n          windowedTraces = sumIncremental(pcDistributions, windowLen);\r\n          break;\r\n        case 2:\r\n          windowedTraces = powerCentered(pcDistributions, windowLen);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setWindowedCoeffTraces(windowedTraces);\r\n    }\r\n  }, [windowLen, coeffTracesData, normWindSelectedVal]);\r\n\r\n  //Pitch class vector submit function handler\r\n  function handleSubmitPitchClass(input) {\r\n    //Parse the input\r\n    let parsedInput;\r\n    let userPcvObjects = [];\r\n\r\n    try {\r\n      parsedInput = parse(input);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setIsInputPcvInvalid(true);\r\n      return;\r\n    }\r\n\r\n    //Create new pcv object\r\n    parsedInput.forEach((input) =>\r\n      userPcvObjects.push({\r\n        label: `(${input})`,\r\n        isDisabled: false,\r\n        coeffs: dft(input, true, true, false),\r\n        rosePoints: [],\r\n        n: -1,\r\n        d: -1,\r\n      })\r\n    );\r\n\r\n    //Check if we are adding an input already inserted\r\n    let labels = userPcvs.map((pcvData) => pcvData.label);\r\n    labels.forEach((label) => {\r\n      userPcvObjects = userPcvObjects.filter(\r\n        (pcvObj) => pcvObj.label !== label\r\n      );\r\n    });\r\n\r\n    //Assing an unused rose to each pcv\r\n    userPcvObjects.forEach((pcvData) => {\r\n      let found = false;\r\n\r\n      for (let i = 0; i < rosesMat.length && !found; i++) {\r\n        for (let j = 0; j < rosesMat[i].length && !found; j++) {\r\n          if (rosesMat[i][j].usable && !rosesMat[i][j].used) {\r\n            found = true;\r\n            pcvData.rosePoints = rosesMat[i][j].points;\r\n            rosesMat[i][j].used = true;\r\n            pcvData.n = rosesMat[i][j].n;\r\n            pcvData.d = rosesMat[i][j].d;\r\n          }\r\n        }\r\n      }\r\n\r\n      //If the are no available roses, return without changing anything\r\n      if (!found) return;\r\n    });\r\n\r\n    //Update the state with the new pcvs\r\n    setUserPcvs([...userPcvs, ...userPcvObjects]);\r\n  }\r\n\r\n  //Effect: MIDI analysis on file change\r\n  useEffect(() => {\r\n    //Get the uploaded file\r\n    let input = document.getElementById('file').files[0];\r\n\r\n    //Parse the MIDI file\r\n    if (input) {\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(input);\r\n      fileReader.onload = (loadedFile) => {\r\n        try {\r\n          let { midiData, midiBpm } = getMidiFileDataObject(\r\n            loadedFile.target.result\r\n          );\r\n\r\n          //Set song variables\r\n          currentSongBPM = midiBpm;\r\n          currentSongMidiData = midiData;\r\n          fileName = input.name;\r\n\r\n          //Wavescapes \"static\" analysis --> 50 subdivs\r\n          let subdivsNumberStatic = 50;\r\n          let staticResolution =\r\n            currentSongMidiData.duration / subdivsNumberStatic;\r\n          setWavescapeResolution(staticResolution);\r\n\r\n          setWavescapesData(\r\n            getRgbaMatrix(getDftCoeffStatic(midiData, staticResolution))\r\n          );\r\n\r\n          //Circles \"dynamic\" analysis --> single traces in the Fourier spaces\r\n          let { tracesData, resolution, currPcDistributions } =\r\n            getDftCoeffDynamic(\r\n              midiData,\r\n              resolutionMode,\r\n              currentSongBPM,\r\n              normalizationType\r\n            );\r\n          setCircleResolution(resolution);\r\n          setCoeffTracesData(tracesData);\r\n          setPcDistributions(currPcDistributions);\r\n          setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n          setWindowLen(1);\r\n          setTextfieldWndLen('1');\r\n\r\n          //console.log(midiData);\r\n        } catch (error) {\r\n          console.log(error);\r\n          return;\r\n        }\r\n      };\r\n    }\r\n  }, [file]);\r\n\r\n  //Effect: init roseMatrix and user pcv examples\r\n  useEffect(() => {\r\n    //7x7 matrix\r\n    let initMatrix = [];\r\n    for (let i = 1; i <= 7; i++) {\r\n      let temp = [];\r\n      for (let j = 1; j <= 7; j++) {\r\n        let rose = { n: j, d: i, used: false, usable: true, points: [] };\r\n        if (j % i === 0 && i !== 1) rose.usable = false;\r\n\r\n        if (rose.usable === true) rose.points = getRosePoints(j, i);\r\n\r\n        temp.push(rose);\r\n      }\r\n      initMatrix.push(temp);\r\n    }\r\n\r\n    //(0,0) or n=1, d=1 can't be used since it is a simple circle\r\n    initMatrix[0][0].usable = false;\r\n\r\n    setRosesMat(initMatrix);\r\n\r\n    //Examples\r\n    let examplePcvs = [\r\n      [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], // C\r\n      [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], // Cmin\r\n      [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], // Cdim\r\n    ];\r\n\r\n    let exPcvObjects = examplePcvs.map((pcv) => {\r\n      return {\r\n        label: `(${pcv.toString()})`,\r\n        isDisabled: false,\r\n        coeffs: dft(pcv, true, true, false),\r\n        rosePoints: [],\r\n        n: -1,\r\n        d: -1,\r\n      };\r\n    });\r\n\r\n    //Assing an unused rose to each pcv\r\n    exPcvObjects.forEach((pcvData) => {\r\n      let found = false;\r\n\r\n      for (let i = 0; i < initMatrix.length && !found; i++) {\r\n        for (let j = 0; j < initMatrix[i].length && !found; j++) {\r\n          if (initMatrix[i][j].usable && !initMatrix[i][j].used) {\r\n            found = true;\r\n            pcvData.rosePoints = initMatrix[i][j].points;\r\n            initMatrix[i][j].used = true;\r\n            pcvData.n = initMatrix[i][j].n;\r\n            pcvData.d = initMatrix[i][j].d;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    //2 disabled pcvs to show that there is the possibility to disable them\r\n    exPcvObjects[1].isDisabled = true;\r\n    exPcvObjects[2].isDisabled = true;\r\n\r\n    setUserPcvs(exPcvObjects);\r\n  }, []);\r\n\r\n  //Close Drawer function handler\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    retriggerAnalysis();\r\n  }, [normWindSelectedVal]);\r\n\r\n  //Re-compute the analysis when clicking on \"Change\" button in the Drawer\r\n  function retriggerAnalysis() {\r\n    //Only if there is midi data, retrigger analysis\r\n    if (currentSongMidiData == null) {\r\n      return;\r\n    }\r\n\r\n    //Circles dynamic analysis\r\n    let { tracesData, resolution } = getDftCoeffDynamic(\r\n      currentSongMidiData,\r\n      resolutionMode,\r\n      currentSongBPM\r\n    );\r\n    setCircleResolution(resolution);\r\n    setCoeffTracesData(tracesData);\r\n    setWindowLen(1);\r\n    setTextfieldWndLen('1');\r\n    setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n  }\r\n\r\n  return (\r\n    <HashRouter>\r\n      <CssBaseline />\r\n\r\n      <Navbar\r\n        open={open}\r\n        setOpen={setOpen}\r\n        setInAnalysisPage={setInAnalysisPage}\r\n        inAnalysisPage={inAnalysisPage}\r\n      />\r\n\r\n      <Box sx={{ display: 'flex' }}>\r\n        {/* DRAWER */}\r\n        <Drawer\r\n          sx={{\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            '& .MuiDrawer-paper': {\r\n              width: drawerWidth,\r\n              boxSizing: 'border-box',\r\n            },\r\n          }}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n        >\r\n          {/* DRAWER HEADER  */}\r\n          <DrawerHeader>\r\n            <Stack sx={{ flexGrow: '2', maxWidth: '85%', marginBottom: 1 }}>\r\n              <Typography sx={{ fontWeight: 'bold' }}>\r\n                Upload a midi file\r\n              </Typography>\r\n              <Stack spacing={2} direction='row' sx={{ alignItems: 'center' }}>\r\n                <label htmlFor='file'>\r\n                  <input\r\n                    style={{ display: 'none' }}\r\n                    type='file'\r\n                    id='file'\r\n                    name='file'\r\n                    value={file}\r\n                    onChange={(e) => setFile(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    variant='contained'\r\n                    size='small'\r\n                    color='primary'\r\n                    component='span'\r\n                  >\r\n                    Upload\r\n                  </Button>\r\n                </label>\r\n                <Typography\r\n                  noWrap={true}\r\n                  color={fileName ? 'primary' : 'error'}\r\n                >\r\n                  {wavescapesData.length > 0\r\n                    ? fileName\r\n                    : 'No midi file uploaded'}\r\n                </Typography>\r\n              </Stack>\r\n            </Stack>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === 'ltr' ? (\r\n                <ChevronLeftIcon />\r\n              ) : (\r\n                <ChevronRightIcon />\r\n              )}\r\n            </IconButton>\r\n          </DrawerHeader>\r\n          <Divider />\r\n\r\n          {/* TIME RESOLUTION MODULE */}\r\n          <Typography sx={{ marginLeft: 1, marginTop: 1, fontWeight: 'bold' }}>\r\n            Time resolution\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              margin: '2% 5% 0 2%',\r\n              width: '90%',\r\n              justifyContent: 'space-evenly',\r\n            }}\r\n          >\r\n            <ResolutionSelector\r\n              setResolutionMode={setResolutionMode}\r\n              resolutionMode={resolutionMode}\r\n              retriggerAnalysis={retriggerAnalysis}\r\n            />\r\n          </Box>\r\n          <Divider />\r\n\r\n          {/* WINDOW LENGTH MODULE */}\r\n          <Typography\r\n            sx={{\r\n              marginLeft: 1,\r\n              marginTop: 1,\r\n              fontWeight: 'bold',\r\n            }}\r\n          >\r\n            Window Length\r\n          </Typography>\r\n          <Stack\r\n            sx={{ margin: 'auto', marginBottom: 1, marginTop: 1 }}\r\n            direction='row'\r\n          >\r\n            <Typography\r\n              sx={{\r\n                marginLeft: 1,\r\n                paddingTop: '5px',\r\n                marginRight: '5px',\r\n                fontSize: '18px',\r\n              }}\r\n              variant='h5'\r\n              gutterBottom\r\n            >{`=`}</Typography>\r\n            <TextField\r\n              inputProps={{ style: { textAlign: 'center' } }}\r\n              sx={{ width: '15%' }}\r\n              error={invalidWndLen}\r\n              onChange={(event) => {\r\n                setTextfieldWndLen(event.target.value);\r\n                let input = parseInt(event.target.value);\r\n                if (isNaN(input)) {\r\n                  setInvalidWndLen(true);\r\n                } else {\r\n                  setInvalidWndLen(false);\r\n                  if (coeffTracesData.length > 0) {\r\n                    if (input < 1) {\r\n                      setInvalidWndLen(true);\r\n                      setWindowLen(1);\r\n                    } else if (input > coeffTracesData[0].length) {\r\n                      setInvalidWndLen(true);\r\n                      setWindowLen(coeffTracesData[0].length);\r\n                    } else setWindowLen(input);\r\n                  } else {\r\n                    setWindowLen(input);\r\n                  }\r\n                }\r\n              }}\r\n              value={textfieldWndLen}\r\n              variant='standard'\r\n            />\r\n            <Typography\r\n              sx={{\r\n                marginLeft: 1,\r\n                paddingTop: '5px',\r\n                fontSize: '18px',\r\n              }}\r\n              variant='h5'\r\n              gutterBottom\r\n            >\r\n              {'\\u00D7 time resolution'}\r\n            </Typography>\r\n          </Stack>\r\n          <Slider\r\n            sx={{\r\n              margin: 'auto',\r\n              width: '80%',\r\n              marginBottom: 3,\r\n              marginTop: 1,\r\n              heigth: '10%',\r\n            }}\r\n            value={windowLen}\r\n            onChange={(event, value) => {\r\n              setWindowLen(value);\r\n              setTextfieldWndLen(value);\r\n            }}\r\n            aria-label='Window Length'\r\n            defaultValue={1}\r\n            valueLabelDisplay='auto'\r\n            min={1}\r\n            max={coeffTracesData.length > 0 ? coeffTracesData[0].length : 100}\r\n            marks={\r\n              coeffTracesData.length > 0\r\n                ? [\r\n                    { value: 1, label: '1' },\r\n                    {\r\n                      value: coeffTracesData[0].length,\r\n                      label: `${coeffTracesData[0].length}`,\r\n                    },\r\n                  ]\r\n                : [\r\n                    { value: 1, label: '1' },\r\n                    { value: 100, label: '100' },\r\n                  ]\r\n            }\r\n          />\r\n          <Divider />\r\n\r\n          {/* PCV USER INPUT MODULE */}\r\n          <Typography sx={{ marginLeft: 1, marginTop: 1, fontWeight: 'bold' }}>\r\n            Custom pitch-class vectors\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              flexDirection: 'column',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              margin: '3% 5%',\r\n              height: '40%',\r\n              maxHeight: '350px',\r\n              justifyContent: 'flex-start',\r\n            }}\r\n            component='form'\r\n            noValidate\r\n            autoComplete='off'\r\n          >\r\n            <TextField\r\n              /* sx={{ minHeight: '5rem' }} */\r\n              fullWidth\r\n              error={isInputPcvInvalid}\r\n              helperText={isInputPcvInvalid && 'Invalid input'}\r\n              id='outlined-basic'\r\n              label='e.g. {0,0,4,7,10} (2,0,0,0,1,0,0,1,0,0,1,0)'\r\n              variant='outlined'\r\n              onKeyPress={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  event.preventDefault();\r\n                  handleSubmitPitchClass(pcvTextRef.current.value);\r\n                  pcvTextRef.current.value = '';\r\n                }\r\n              }}\r\n              onChange={() => {\r\n                setIsInputPcvInvalid(false);\r\n              }}\r\n              inputRef={pcvTextRef}\r\n            />\r\n            <PcvChipsBox\r\n              userPcvs={userPcvs}\r\n              setUserPcvs={setUserPcvs}\r\n              rosesMat={rosesMat}\r\n            />\r\n          </Box>\r\n          <Divider />\r\n\r\n          {/* NORMALIZATION TYPE */}\r\n          <Typography sx={{ marginLeft: 1, marginTop: 1, fontWeight: 'bold' }}>\r\n            Normalization and Windowing\r\n          </Typography>\r\n          <Box sx={{ margin: '3% 5%' }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='normalization'>Type</InputLabel>\r\n              <Select\r\n                labelId='normalization'\r\n                label='Type'\r\n                MenuProps={{\r\n                  disableScrollLock: true, //To disable popup scrollbar when menu is shown\r\n                }}\r\n                value={normWindSelectedVal}\r\n                defaultValue={0}\r\n                onChange={(e) => {\r\n                  switch (e.target.value) {\r\n                    case 0:\r\n                      setNormalizationType('sum');\r\n                      setWindowingType('centered');\r\n                      setNormWindSelectedVal(0);\r\n                      break;\r\n                    case 1:\r\n                      setNormalizationType('sum');\r\n                      setWindowingType('incremental');\r\n                      setNormWindSelectedVal(1);\r\n                      break;\r\n                    case 2:\r\n                      setNormalizationType('power');\r\n                      setWindowingType('centered');\r\n                      setNormWindSelectedVal(2);\r\n                      break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                }}\r\n              >\r\n                <MenuItem value={0}>\r\n                  Sum normalization - Centered window\r\n                </MenuItem>\r\n                <MenuItem value={1}>\r\n                  Sum normalization - Incremental window\r\n                </MenuItem>\r\n                <MenuItem value={2}>\r\n                  Power normalization - Centered window\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Divider />\r\n\r\n          {/* LEGEND OF COEFFICIENTS */}\r\n          <Typography sx={{ marginLeft: 1, marginTop: 1, fontWeight: 'bold' }}>\r\n            Legend of coefficients\r\n          </Typography>\r\n          <Box sx={{ margin: '5px 10px' }}>\r\n            <Paper>\r\n              <Stack>\r\n                <Stack direction='row'>\r\n                  <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                    <circle cx='12' cy='12' r='8' fill='black' />\r\n                    <text\r\n                      fontSize='15'\r\n                      textAnchor='middle'\r\n                      x='12'\r\n                      y='17'\r\n                      fill='white'\r\n                    >\r\n                      k\r\n                    </text>\r\n                  </svg>\r\n                  Fourier coefficient number\r\n                </Stack>\r\n                <Stack direction='row'>\r\n                  <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                    <circle cx='12' cy='12' r='6' fill='black' />\r\n                  </svg>\r\n                  MIDI file segments\r\n                </Stack>\r\n                <Stack direction='row'>\r\n                  <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                    <circle cx='12' cy='12' r='5' fill='white' />\r\n                    <circle\r\n                      cx='12'\r\n                      cy='12'\r\n                      r='5'\r\n                      fill='none'\r\n                      stroke='black'\r\n                      strokeWidth='3px'\r\n                    />\r\n                  </svg>\r\n                  MIDI playback\r\n                </Stack>\r\n                <Stack direction='row'>\r\n                  <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                    <g transform='translate(12,12)'>\r\n                      <line\r\n                        x1='0'\r\n                        x2='0'\r\n                        y1='7'\r\n                        y2='-7'\r\n                        stroke='black'\r\n                        strokeWidth='1.5'\r\n                      ></line>\r\n                      <line\r\n                        x1='7'\r\n                        x2='-7'\r\n                        y1='0'\r\n                        y2='0'\r\n                        stroke='black'\r\n                        strokeWidth='1.5'\r\n                      ></line>\r\n                    </g>\r\n                  </svg>\r\n                  MIDI controller input\r\n                </Stack>\r\n                <Stack direction='row'>\r\n                  <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                    <circle\r\n                      cx='12'\r\n                      cy='12'\r\n                      r='7'\r\n                      fill='none'\r\n                      stroke='grey'\r\n                      strokeWidth='2px'\r\n                    />\r\n                  </svg>\r\n                  Prototypes\r\n                </Stack>\r\n                <Stack direction='row'>\r\n                  <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                    {rosesMat.length > 0 ? (\r\n                      <polyline\r\n                        transform={`translate(${12},${12})`}\r\n                        fill='none'\r\n                        stroke='black'\r\n                        strokeWidth='1px'\r\n                        points={rosesMat[3][0].points}\r\n                      />\r\n                    ) : null}\r\n                  </svg>\r\n                  Custom pitch-class vectors\r\n                </Stack>\r\n              </Stack>\r\n            </Paper>\r\n          </Box>\r\n\r\n          {/* EXPORT MODULE */}\r\n          <SaveDialog\r\n            traces={windowedCoeffTraces}\r\n            userPcvs={userPcvs}\r\n            wavescapesData={wavescapesData}\r\n          />\r\n        </Drawer>\r\n\r\n        {/* MAIN */}\r\n        <Main open={open}>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path='/'\r\n              render={() => (\r\n                <Home\r\n                  setOpen={setOpen}\r\n                  setInAnalysisPage={setInAnalysisPage}\r\n                ></Home>\r\n              )}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path='/theory'\r\n              render={() => (\r\n                <Theory\r\n                  setOpen={setOpen}\r\n                  setInAnalysisPage={setInAnalysisPage}\r\n                ></Theory>\r\n              )}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path='/analysis'\r\n              render={() => (\r\n                <Analysis\r\n                  fileName={fileName}\r\n                  setInAnalysisPage={setInAnalysisPage}\r\n                  open={open}\r\n                  setOpen={setOpen}\r\n                  wavescapesData={wavescapesData}\r\n                  fullTraces={coeffTracesData}\r\n                  coeffTracesData={windowedCoeffTraces}\r\n                  currentSubdiv={mapCurrentSubdiv}\r\n                  currentWavescapeSubdiv={Math.floor(\r\n                    (currentSubdiv * circleResolution) / wavescapeResolution\r\n                  )}\r\n                  userPcvs={userPcvs}\r\n                />\r\n              )}\r\n            ></Route>\r\n          </Switch>\r\n        </Main>\r\n      </Box>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function parse(input) {\r\n  let pcvs = [];\r\n  //Vectorial notation, distribution -> real numbers\r\n  const openVect = '(';\r\n  const closeVect = ')';\r\n  //Set notation, integers\r\n  const openSet = '{';\r\n  const closeSet = '}';\r\n  //Number divider\r\n  const divider = ',';\r\n\r\n  let isGroup = false; //True if we are in between valid brackets\r\n  let isSet = false; //True if set notation detected, false otherwise\r\n\r\n  for (let i = 0; i < input.length; i++) {\r\n    if (input[i] === openSet || input[i] === openVect) {\r\n      isGroup = true;\r\n      if (input[i] === openSet) isSet = true;\r\n    }\r\n\r\n    if (isGroup) {\r\n      let stringGroup = [];\r\n      //Slice the current group\r\n      for (\r\n        let j = i + 1;\r\n        input[j] !== closeSet && input[j] !== closeVect;\r\n        j++\r\n      ) {\r\n        //Check if there is an invalid char in the group\r\n        if (\r\n          input[j] !== ',' &&\r\n          input[j] !== '.' &&\r\n          input[j] !== ' ' &&\r\n          isNaN(parseFloat(input[j]))\r\n        )\r\n          throw new Error('Found NaN');\r\n        if (input[j] !== ' ') stringGroup.push(input[j]);\r\n      }\r\n\r\n      stringGroup = stringGroup.join('');\r\n\r\n      //Check if the empty string\r\n      if (stringGroup === '') throw new Error('Empty input');\r\n\r\n      let numeralInput = [];\r\n      let count = 0;\r\n      for (let j = 0; j < stringGroup.length; j++) {\r\n        if (stringGroup[j] === divider) {\r\n          let num = stringGroup.slice(j - count, j);\r\n          //if num.length === 0 => two consecutive comas, invalid input\r\n          if (num.length === 0) throw new Error('Two consecutive comas');\r\n\r\n          numeralInput.push(+num);\r\n          count = -1;\r\n        }\r\n        count++;\r\n      }\r\n      //Last element not cover by the for cycle\r\n      let lastNum = stringGroup.slice(\r\n        stringGroup.length - count,\r\n        stringGroup.length\r\n      );\r\n      //Check if there is a last number\r\n      if (lastNum.length === 0) {\r\n        throw new Error('Missing last number');\r\n      }\r\n      numeralInput.push(+lastNum);\r\n\r\n      if (isSet) {\r\n        let bin = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (let i = 0; i < numeralInput.length; i++) {\r\n          //Set notation: check if num is valid range [0,11]\r\n          if (numeralInput[i] < 0 || numeralInput[i] >= 12) {\r\n            throw new Error('Set notation: out of range');\r\n          }\r\n\r\n          bin[numeralInput[i]] += 1;\r\n        }\r\n        pcvs.push(bin);\r\n      } else {\r\n        //If is in vectorial form, check if there are 12 elements\r\n        if (numeralInput.length !== 12) {\r\n          throw new Error('Vectorial notation: missing elements');\r\n        }\r\n        pcvs.push(numeralInput);\r\n      }\r\n\r\n      isGroup = false;\r\n      isSet = false;\r\n      i += count;\r\n    }\r\n  }\r\n\r\n  if (pcvs.length === 0) throw new Error('Invalid input');\r\n\r\n  return pcvs;\r\n}\r\n","//React\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//Import components\r\nimport App from './App';\r\n\r\n//Import material UI components\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\n//Custom theme\r\nconst customTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#323232',\r\n    },\r\n    secondary: {\r\n      main: '#fefefe',\r\n    },\r\n    background: {\r\n      default: '#e0e0e0',\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={customTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}