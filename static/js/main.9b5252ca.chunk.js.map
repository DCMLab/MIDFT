{"version":3,"sources":["Navbar.js","Player.js","DFT.js","colorMapping.js","getDftMatrices.js","roses.js","ResolutionSelector.js","PcvChipsBox.js","pages/Home.js","pages/Theory.js","Wavescape.js","WavescapeModule.js","Circle.js","prototypesData.js","CoefficientsModule.js","pages/Analysis.js","App.js","parser.js","index.js"],"names":["AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","Navbar","setOpen","setInAnalysisPage","inAnalysisPage","Box","sx","flexGrow","position","Toolbar","IconButton","disabled","color","onClick","edge","mr","display","Typography","variant","component","ButtonGroup","Button","Link","to","disableElevation","part","intervalID","currentSongDuration","TinyText","fontSize","opacity","fontWeight","letterSpacing","formatDuration","value","minute","Math","floor","secondLeft","setPlayerMidiData","midiData","resolution","setCurrentSubdiv","Tone","cancel","stop","console","log","partNotes","tracks","forEach","track","notes","note","push","subdiv","time","sampler","triggerAttackRelease","name","velocity","start","loop","loopEnd","urls","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","release","baseUrl","toDestination","Player","fileName","currentWavescapeSubdiv","useState","playbackSliderProgress","setPlaybackSliderProgress","flexDirection","alignItems","justifyContent","Stack","direction","paddingLeft","padding","stopInterval","size","children","pause","state","resume","setInterval","progress","noWrap","paddingRight","Slider","onChange","event","newValue","seconds","mt","clearInterval","volume","dft","pcv","normalize","round","polar","N","length","coeffs","k","temp","n","math","slice","norm","map","coeff","re","im","toPolar","sumAndNormalize","sum","i","j","contToDiscRGB","d3","domain","range","pixelColor","x","y","distance","r","g","b","angle","atan2","PI","a","getRgbaFromComplex","complex","polarComplex","phi","mod","ris","gradient","Pcv","this","C","Cs","D","Ds","E","F","Fs","G","Gs","A","As","B","targetPitch","getDftCoeffDynamic","resolutionMode","currentSongBPM","noteResolutionValue","useSeconds","isNaN","tracksSubdivision","filter","instrument","percussion","getSubdivision","pcvSubdivision","pitch","addNoteDuration","dftCoeffsSubdivision","getPcvAsArray","dftCoeffsMatrix","traces","firstRow","tracesData","subdivision","wndLen","cursor","isValidNote","noteAndDuration","getRosePoints","d","dataPoints","delta","cos","sin","ResolutionSelector","setResolutionMode","isInputSecondsInvalid","setIsInputSecondsInvalid","resolutionTextRef","useRef","FormControl","FormLabel","RadioGroup","row","defaultValue","newResolutionMode","parseFloat","current","target","FormControlLabel","control","Radio","label","TextField","minHeight","error","helperText","id","inputRef","ListItem","margin","spacing","PcvChipsBox","userPcvs","setUserPcvs","rosesMat","Paper","flexWrap","listStyle","p","overflow","data","Chip","isDisabled","icon","xmlns","height","viewBox","transform","fill","stroke","strokeWidth","points","rosePoints","onDelete","chipToDelete","used","chips","chip","Home","Theory","verticalScale","Wavescape","ticks","wsNumber","wavescapeMatrix","wavescapeWidth","canvasRef","wsCoordinates","setWsCoordinates","useEffect","baseSubdivision","canvas","ctx","getContext","margins","innerSize","clearRect","innerWidth","innerHeight","marginTop","unit","mat","computeTicks","beginPath","moveTo","lineTo","fillStyle","drawWavescape","style","ref","coord","x1","x2","y1","y2","cx","cy","WavescapeModule","wavescapesData","elemsWidth","Circle","coeffNumber","protoDataCoeff","traceDataCoeff","userPcvsCoeff","currentSubdiv","performanceCoeff","targetCircleWidth","showMagAndPhase","mu","currentSubdivCoeff","setCurrentSubdivCoeff","circleRadius","sqrt","Number","EPSILON","radius","devicePixelRatio","image","createImageData","scale","index","rgba","putImageData","getImageData","zIndex","innerRadius","outerRadius","startAngle","endAngle","pcvData","mark","scaleRatio","labelName","subSup","isSub","includes","dxOffset","dyOffset","sign","textAnchor","dx","dy","baselineShift","protoCircleMark","radiusScaleWidth","highlight","opacityArray","reverse","fillOpacity","highlightSubdiv","translateX","translateY","svgRoseIcon","circleMark","marksRadiusRatio","prototypesData","CoefficientsModule","coeffTracesData","showPrototypes","midiDevNotesDftCoeffs","selectedProtoPitchClasses","setSelectedProtoPitchClasses","subdivUserPcvs","setSubdivUserPcvs","tempSubdivUserPcvs","coeffNum","Application","currentSongMidiData","setShowPrototypes","setShowMagAndPhase","setMidiDevNotesDftCoeffs","accordionRef","accordionWidth","setAccordionWidth","refSizeSlider","elemsForEachRow","setElemsForEachRow","setElemsWidth","changeElementsSize","drawerOffset","adjustmentFractSizes","clientWidth","handleResize","window","addEventListener","currentNotes","handleInput","input","command","toNote","triggerAttack","triggerRelease","currentNote","playedNotes","dftCoeffs","computeDftCoeffs","updateDevices","port","manufacturer","type","navigator","requestMIDIAccess","then","midiAccess","onstatechange","inputs","onmidimessage","marginBottom","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","top","bottom","maxHeight","maxWidth","FormGroup","Switch","checked","minWidth","min","max","valueLabelDisplay","onChangeCommitted","marks","fullWidth","InputLabel","Select","MenuItem","Main","DrawerHeader","mixins","toolbar","App","useTheme","file","setFile","setWavescapesData","setCoeffTracesData","wavescapeResolution","setWavescapeResolution","circleResolution","setCircleResolution","pcvTextRef","isInputPcvInvalid","setIsInputPcvInvalid","setRosesMat","handleSubmitPitchClass","parsedInput","userPcvObjects","pcvs","isGroup","isSet","stringGroup","Error","join","numeralInput","count","num","lastNum","bin","parse","message","pcvObj","found","usable","document","getElementById","files","fileReader","FileReader","readAsArrayBuffer","onload","loadedFile","binMidiFile","Midi","tempos","header","tempo","bpm","midiBpm","nonPercussiveTracks","getMidiFileDataObject","result","staticResolution","matrixHeight","rowsWidth","wndLenUnits","windowed","rgbaMatrices","matrix","getRgbaMatrix","midiFile","getDftCoeffStatic","initMatrix","rose","exPcvObjects","toString","CssBaseline","Drawer","flexShrink","boxSizing","anchor","htmlFor","e","Divider","noValidate","autoComplete","key","preventDefault","exact","path","render","Analysis","customTheme","createTheme","palette","primary","main","secondary","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.9b5252ca.chunk.js","sourcesContent":["import React from 'react';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\n\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create(['margin', 'width'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: `${drawerWidth}px`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nexport default function Navbar({\r\n  open,\r\n  setOpen,\r\n  setInAnalysisPage,\r\n  inAnalysisPage,\r\n}) {\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position='static' open={open}>\r\n        <Toolbar>\r\n          <IconButton\r\n            disabled={!inAnalysisPage}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            edge='start'\r\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\r\n          >\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <Typography variant='h3' component='div' sx={{ flexGrow: 1 }}>\r\n            Mi_DFT\r\n          </Typography>\r\n          <ButtonGroup aria-label='outlined button group'>\r\n            <Button\r\n              component={Link}\r\n              to='/'\r\n              variant='contained'\r\n              disableElevation={true}\r\n              onClick={() => {\r\n                setInAnalysisPage(false);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/theory'\r\n              variant='contained'\r\n              disableElevation={true}\r\n              onClick={() => {\r\n                setInAnalysisPage(false);\r\n                setOpen(false);\r\n              }}\r\n            >\r\n              Theory\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/analysis'\r\n              variant='contained'\r\n              disableElevation={true}\r\n            >\r\n              Analysis\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import * as Tone from 'tone';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport PlayArrowRoundedIcon from '@mui/icons-material/PlayArrowRounded';\r\nimport PauseRoundedIcon from '@mui/icons-material/PauseRounded';\r\nimport StopRoundedIcon from '@mui/icons-material/StopRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Slider from '@mui/material/Slider';\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nlet part;\r\nlet currentSongDuration = 0; // seconds\r\nlet intervalID;\r\n\r\nconst TinyText = styled(Typography)({\r\n  fontSize: '0.75rem',\r\n  opacity: 0.38,\r\n  fontWeight: 500,\r\n  letterSpacing: 0.2,\r\n});\r\n\r\nfunction formatDuration(value) {\r\n  const minute = Math.floor(value / 60);\r\n  const secondLeft = Math.floor(value - minute * 60);\r\n  return `${minute}:${secondLeft < 9 ? `0${secondLeft}` : secondLeft}`;\r\n}\r\n\r\nexport function setPlayerMidiData(midiData, resolution, setCurrentSubdiv) {\r\n  //Remove the scheduled previous song\r\n  Tone.Transport.cancel(0);\r\n  setCurrentSubdiv(0);\r\n  Tone.Transport.stop();\r\n\r\n  currentSongDuration = midiData.duration;\r\n  console.log(currentSongDuration);\r\n\r\n  let partNotes = [];\r\n  midiData.tracks.forEach((track) =>\r\n    track.notes.forEach((note) => {\r\n      partNotes.push(note);\r\n    })\r\n  );\r\n\r\n  partNotes.forEach((note) => {\r\n    note.subdiv = Math.floor(note.time / resolution);\r\n  });\r\n\r\n  part = new Tone.Part(\r\n    (time, note) => {\r\n      sampler.triggerAttackRelease(\r\n        note.name,\r\n        note.duration,\r\n        time,\r\n        note.velocity\r\n      );\r\n      setCurrentSubdiv(note.subdiv);\r\n    },\r\n    [...partNotes]\r\n  ).start(0);\r\n\r\n  part.loop = true;\r\n  part.loopEnd = currentSongDuration;\r\n}\r\n\r\nconst sampler = new Tone.Sampler({\r\n  urls: {\r\n    A0: 'A0.mp3',\r\n    C1: 'C1.mp3',\r\n    'D#1': 'Ds1.mp3',\r\n    'F#1': 'Fs1.mp3',\r\n    A1: 'A1.mp3',\r\n    C2: 'C2.mp3',\r\n    'D#2': 'Ds2.mp3',\r\n    'F#2': 'Fs2.mp3',\r\n    A2: 'A2.mp3',\r\n    C3: 'C3.mp3',\r\n    'D#3': 'Ds3.mp3',\r\n    'F#3': 'Fs3.mp3',\r\n    A3: 'A3.mp3',\r\n    C4: 'C4.mp3',\r\n    'D#4': 'Ds4.mp3',\r\n    'F#4': 'Fs4.mp3',\r\n    A4: 'A4.mp3',\r\n    C5: 'C5.mp3',\r\n    'D#5': 'Ds5.mp3',\r\n    'F#5': 'Fs5.mp3',\r\n    A5: 'A5.mp3',\r\n    C6: 'C6.mp3',\r\n    'D#6': 'Ds6.mp3',\r\n    'F#6': 'Fs6.mp3',\r\n    A6: 'A6.mp3',\r\n    C7: 'C7.mp3',\r\n    'D#7': 'Ds7.mp3',\r\n    'F#7': 'Fs7.mp3',\r\n    A7: 'A7.mp3',\r\n    C8: 'C8.mp3',\r\n  },\r\n  release: 1,\r\n  baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n}).toDestination();\r\nsampler.volume.value = -20;\r\n\r\nexport default function Player({ fileName, currentWavescapeSubdiv }) {\r\n  const [playbackSliderProgress, setPlaybackSliderProgress] = useState(0);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '60%',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Stack direction='row' sx={{ flexGrow: 1, paddingLeft: '10%' }}>\r\n          <IconButton\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('stop');\r\n              Tone.Transport.stop();\r\n              stopInterval();\r\n            }}\r\n            size='large'\r\n            children={<StopRoundedIcon fontSize='large' />}\r\n          />\r\n          <IconButton\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('pause');\r\n              Tone.Transport.pause();\r\n              stopInterval();\r\n            }}\r\n            size='large'\r\n            children={<PauseRoundedIcon fontSize='large' />}\r\n          />\r\n          <IconButton\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('play');\r\n              if (Tone.context.state !== 'running') {\r\n                console.log('state running');\r\n                Tone.context.resume();\r\n              }\r\n              Tone.Transport.start();\r\n              if (!intervalID && part)\r\n                intervalID = setInterval(\r\n                  () => setPlaybackSliderProgress(part.progress),\r\n                  1000\r\n                );\r\n            }}\r\n            size='large'\r\n            children={<PlayArrowRoundedIcon fontSize='large' />}\r\n          />\r\n        </Stack>\r\n        <Typography noWrap={true} sx={{ flexGrow: '2', paddingRight: '10%' }}>\r\n          {fileName ? fileName : 'Upload a midi file'}\r\n        </Typography>\r\n      </Box>\r\n      <Slider\r\n        aria-label='Playback'\r\n        size='small'\r\n        value={playbackSliderProgress ? playbackSliderProgress * 100 : 0}\r\n        onChange={(event, newValue) => {\r\n          setPlaybackSliderProgress(newValue / 100);\r\n          Tone.Transport.seconds = (newValue / 100) * currentSongDuration;\r\n        }}\r\n        sx={{ width: '90%' }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          width: '90%',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          mt: -1,\r\n        }}\r\n      >\r\n        <TinyText>\r\n          -\r\n          {formatDuration(\r\n            currentSongDuration - playbackSliderProgress * currentSongDuration\r\n          )}\r\n        </TinyText>\r\n        <TinyText>{formatDuration(currentSongDuration)}</TinyText>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction stopInterval() {\r\n  clearInterval(intervalID);\r\n  // release our intervalID from the variable\r\n  intervalID = null;\r\n}\r\n","import * as math from 'mathjs';\r\n\r\n// Compute the DFT on the input pcv\r\nexport default function dft(\r\n  pcv,\r\n  normalize = true,\r\n  round = false,\r\n  polar = false\r\n) {\r\n  let N = pcv.length;\r\n\r\n  let coeffs = [];\r\n\r\n  for (let k = 0; k < N / 2 + 1; k++) {\r\n    let temp = 0;\r\n    for (let n = 0; n < N; n++) {\r\n      temp = math.add(\r\n        math.multiply(\r\n          pcv[n],\r\n          math.exp(math.multiply(math.i, (-2 * math.pi * k * n) / N))\r\n        ),\r\n        temp\r\n      );\r\n    }\r\n    coeffs.push(temp);\r\n  }\r\n\r\n  coeffs = coeffs.slice();\r\n\r\n  if (normalize) {\r\n    const norm = coeffs[0];\r\n    //'!=' gives a warning but '!==' doesn't compute correctly the if statement\r\n    if (norm != 0) coeffs = coeffs.map((coeff) => math.divide(coeff, norm));\r\n  }\r\n\r\n  if (round) {\r\n    coeffs.forEach((coeff) => {\r\n      coeff.re = Math.round(coeff.re * 10000) / 10000;\r\n      coeff.im = Math.round(coeff.im * 10000) / 10000;\r\n    });\r\n  }\r\n\r\n  if (polar) {\r\n    coeffs = coeffs.map((coeff) => coeff.toPolar());\r\n  }\r\n\r\n  return coeffs;\r\n}\r\n\r\nexport function sumAndNormalize(coeffs) {\r\n  let sum = coeffs[0];\r\n  for (let i = 1; i < coeffs.length; i++) {\r\n    //incremental sum for each coeff\r\n    let temp = [];\r\n    //coeff per coeff sum\r\n    for (let j = 0; j < coeffs[i].length; j++) {\r\n      temp.push(math.add(sum[j], coeffs[i][j]));\r\n    }\r\n    sum = temp.slice();\r\n  }\r\n\r\n  const norm = sum[0];\r\n  sum = sum.map((coeff) => math.divide(coeff, norm));\r\n\r\n  return sum;\r\n}\r\n","import * as d3 from 'd3';\r\nimport * as math from 'mathjs';\r\n\r\n//Convert rgb values from [0,1] to [0,255]\r\nconst contToDiscRGB = d3\r\n  .scaleQuantize()\r\n  .domain([0, 1])\r\n  .range(d3.range(0, 255, 1));\r\n\r\n//Generate the color space using the color mapping suggested in the paper\r\nexport const gradient = (angle) => {\r\n  let r, g, b;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\n//Generate the color space using the color mapping suggested in the paper\r\nexport const pixelColor = (x, y, distance) => {\r\n  let r, g, b, a;\r\n  //atan2 out in [-pi, pi]\r\n  let angle = Math.atan2(y, x);\r\n  angle = -angle;\r\n  //we need it in [0, 2pi]\r\n  if (angle < 0) angle += 2 * Math.PI;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n  a = contToDiscRGB(distance);\r\n\r\n  return { r, g, b, a };\r\n};\r\n\r\nexport function getRgbaFromComplex(complex) {\r\n  let polarComplex = complex.toPolar();\r\n  let angle = polarComplex.phi; // phi from [-pi, pi], but color mapping defined in [0,2pi]\r\n  let mod = polarComplex.r;\r\n\r\n  //negative angle mapped to their positive representation\r\n  if (angle < 0) angle += 2 * math.pi;\r\n\r\n  let ris = gradient(angle).slice(3, -1);\r\n\r\n  return `rgba${ris}, ${mod})`;\r\n}\r\n","import { Midi } from '@tonejs/midi';\r\nimport dft, { sumAndNormalize } from './DFT';\r\nimport { getRgbaFromComplex, pixelColor } from './colorMapping';\r\n\r\nclass Pcv {\r\n  constructor() {\r\n    this.C = 0;\r\n    this.Cs = 0;\r\n    this.D = 0;\r\n    this.Ds = 0;\r\n    this.E = 0;\r\n    this.F = 0;\r\n    this.Fs = 0;\r\n    this.G = 0;\r\n    this.Gs = 0;\r\n    this.A = 0;\r\n    this.As = 0;\r\n    this.B = 0;\r\n  }\r\n\r\n  addNoteDuration(targetPitch, duration) {\r\n    switch (targetPitch) {\r\n      case 'C':\r\n        this.C += duration;\r\n        break;\r\n      case 'C#':\r\n        this.Cs += duration;\r\n        break;\r\n      case 'D':\r\n        this.D += duration;\r\n        break;\r\n      case 'D#':\r\n        this.Ds += duration;\r\n        break;\r\n      case 'E':\r\n        this.E += duration;\r\n        break;\r\n      case 'F':\r\n        this.F += duration;\r\n        break;\r\n      case 'F#':\r\n        this.Fs += duration;\r\n        break;\r\n      case 'G':\r\n        this.G += duration;\r\n        break;\r\n      case 'G#':\r\n        this.Gs += duration;\r\n        break;\r\n      case 'A':\r\n        this.A += duration;\r\n        break;\r\n      case 'A#':\r\n        this.As += duration;\r\n        break;\r\n      case 'B':\r\n        this.B += duration;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getPcvAsArray() {\r\n    let temp = [\r\n      this.C,\r\n      this.Cs,\r\n      this.D,\r\n      this.Ds,\r\n      this.E,\r\n      this.F,\r\n      this.Fs,\r\n      this.G,\r\n      this.Gs,\r\n      this.A,\r\n      this.As,\r\n      this.B,\r\n    ];\r\n\r\n    return temp;\r\n  }\r\n\r\n  add(pcv) {\r\n    this.C = pcv.C;\r\n    this.Cs = pcv.Cs;\r\n    this.D = pcv.D;\r\n    this.Ds = pcv.Ds;\r\n    this.E = pcv.E;\r\n    this.F = pcv.F;\r\n    this.Fs = pcv.Fs;\r\n    this.G = pcv.G;\r\n    this.Gs = pcv.Gs;\r\n    this.A = pcv.A;\r\n    this.As = pcv.As;\r\n    this.B = pcv.B;\r\n  }\r\n}\r\n\r\nexport function getMidiFileDataObject(binMidiFile) {\r\n  let midiData = new Midi(binMidiFile);\r\n\r\n  let tempos = midiData.header.tempos.map((tempo) => Math.round(tempo.bpm));\r\n  let midiBpm = Math.max(...tempos); //For quarter-note conversion\r\n\r\n  //Check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  midiData.tracks = nonPercussiveTracks;\r\n\r\n  return { midiData, midiBpm };\r\n}\r\n\r\nexport function getDftCoeffStatic(midiFile, resolution) {\r\n  let tracksSubdivision = [];\r\n\r\n  midiFile.tracks.forEach((track) =>\r\n    tracksSubdivision.push(\r\n      getSubdivision(track.notes, resolution, midiFile.duration)\r\n    )\r\n  );\r\n  //console.log(tracksSubdivision);\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return dftCoeffsMatrix;\r\n}\r\n\r\nexport function getDftCoeffDynamic(midiData, resolutionMode, currentSongBPM) {\r\n  let { noteResolutionValue, seconds, useSeconds } = resolutionMode;\r\n\r\n  let resolution;\r\n  if (useSeconds) {\r\n    isNaN(seconds) ? (resolution = 1) : (resolution = seconds);\r\n  } else {\r\n    //Use bpm\r\n    resolution = noteResolutionValue * (60 / currentSongBPM);\r\n  }\r\n\r\n  //console.log(currentSongBPM);\r\n  //console.log(resolution);\r\n\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  //Subdividing the first row of the dft coeff matrix to get the trace for each coeff\r\n  let traces = [];\r\n  let firstRow = dftCoeffsMatrix[0];\r\n  for (let i = 1; i < 7; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < firstRow.length; j++) {\r\n      temp.push({ x: firstRow[j][i].re, y: firstRow[j][i].im });\r\n    }\r\n    traces.push(temp);\r\n  }\r\n\r\n  return { tracesData: traces, resolution: resolution };\r\n}\r\n\r\n//Resolution is in seconds\r\nexport function getDftCoeffFromMidiLinear(\r\n  midiFile,\r\n  multiRes = 1,\r\n  seconds = 1,\r\n  useSeconds\r\n) {\r\n  //For now, we don't take into account tempo changes\r\n  let midiData = new Midi(midiFile);\r\n  console.log(midiData);\r\n\r\n  let resolution;\r\n  if (useSeconds) {\r\n    isNaN(seconds) ? (resolution = 1) : (resolution = seconds);\r\n  } else {\r\n    //Use bpm\r\n    let tempos = midiData.header.tempos.map((tempo) => Math.round(tempo.bpm));\r\n    let bpm = Math.max(...tempos); //For quarter-note conversion\r\n    resolution = multiRes * (60 / bpm);\r\n  }\r\n\r\n  console.log(resolution);\r\n\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return { dftCoeffsLinear: dftCoeffsMatrix, resolution: resolution };\r\n}\r\n\r\n//Resolution is in seconds\r\nexport function getDftCoeffFromMidi(midiFile, resolution) {\r\n  //For now, we don't take into account tempo changes\r\n  let midiData = new Midi(midiFile);\r\n  console.log(midiData);\r\n  //const bpm = midiData.header.tempos[0].bpm; //For quarter-note conversion\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  /* midiData.tracks.forEach((track) => {\r\n    let tempMat = [];\r\n\r\n    for (let wndLen = resolution; wndLen < duration; wndLen += resolution) {\r\n      tempMat.push(getRow(track.notes, wndLen, resolution, duration));\r\n    }\r\n    //Since wndLen < duration, the for cycle do not include the top vertex of the triangle\r\n    tempMat.push(getRow(track.notes, duration, duration, duration)); //manually added\r\n\r\n    trackMatrices.push(tempMat);\r\n  }); */\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return dftCoeffsMatrix;\r\n\r\n  /* OLD   //Computing each row of the matrix as the normalized sum of the previous row (dft as linear op)\r\n  let matrixHeight = dftCoeffsSubdivision.length;\r\n  let rowsWidth = dftCoeffsSubdivision.length;\r\n  for (let i = 1; i < matrixHeight; i++) {\r\n    //starting from second row, first already populated\r\n    let temp = [];\r\n    for (let cursor = 1; cursor < rowsWidth; cursor++) {\r\n      //starting from the second element and backward summing\r\n      temp.push(\r\n        //TODO change, sum subdiv only on first row\r\n        sumAndNormalize(\r\n          dftCoeffsMatrix[i - 1][cursor - 1],\r\n          dftCoeffsMatrix[i - 1][cursor]\r\n        )\r\n      );\r\n    }\r\n    rowsWidth--;\r\n    dftCoeffsMatrix.push(temp);\r\n  } */\r\n}\r\n\r\nexport function getRgbaMatrix(dftCoeffsMatrix) {\r\n  //Computing each row of the matrix as the normalized sum of the previous row (dft as linear op)\r\n  let matrixHeight = dftCoeffsMatrix[0].length;\r\n  let rowsWidth = dftCoeffsMatrix[0].length;\r\n  let wndLenUnits = 2;\r\n  for (let i = 1; i < matrixHeight; i++) {\r\n    //starting from second row, first already populated\r\n    let temp = [];\r\n    for (let cursor = 0; cursor + wndLenUnits <= rowsWidth; cursor++) {\r\n      let windowed = dftCoeffsMatrix[0].slice(cursor, cursor + wndLenUnits);\r\n      temp.push(sumAndNormalize(windowed));\r\n    }\r\n    wndLenUnits++;\r\n    dftCoeffsMatrix.push(temp);\r\n  }\r\n\r\n  /* //Computing the pcvs for each subdivision\r\n  let pcvMatrix = [];\r\n\r\n  for (let i = 0; i < trackMatrices[0].length; i++) {\r\n    let temp = [];\r\n    for (let k = 0; k < trackMatrices[0][i].length; k++) {\r\n      temp.push(new Pcv());\r\n    }\r\n    pcvMatrix.push(temp);\r\n  } */\r\n\r\n  /* trackMatrices.forEach((track) => {\r\n    for (let i = 0; i < track.length; i++) {\r\n      for (let j = 0; j < track[i].length; j++) {\r\n        for (let k = 0; k < track[i][j].length; k++) {\r\n          let { pitch, duration } = track[i][j][k];\r\n          pcvMatrix[i][j].addNoteDuration(pitch, duration);\r\n        }\r\n      }\r\n    }\r\n  }); */\r\n\r\n  /* //Computing the dft coeff matrix\r\n  let dftCoeffMatrix = [];\r\n\r\n  for (let i = 0; i < pcvMatrix.length; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < pcvMatrix[i].length; j++) {\r\n      temp.push(dft(pcvMatrix[i][j].getPcvAsArray()));\r\n    }\r\n    dftCoeffMatrix.push(temp);\r\n  } */\r\n\r\n  let rgbaMatrices = [];\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    let matrix = [];\r\n    for (let j = 0; j < dftCoeffsMatrix.length; j++) {\r\n      let subdiv = [];\r\n      for (let k = 0; k < dftCoeffsMatrix[j].length; k++) {\r\n        subdiv.push('');\r\n      }\r\n      matrix.push(subdiv);\r\n    }\r\n    rgbaMatrices.push(matrix);\r\n  }\r\n\r\n  //Creating a single matrix for each coefficient with rgba values for each diamond\r\n  for (let i = 0; i < dftCoeffsMatrix.length; i++) {\r\n    for (let j = 0; j < dftCoeffsMatrix[i].length; j++) {\r\n      for (let k = 1; k < dftCoeffsMatrix[i][j].length; k++) {\r\n        rgbaMatrices[k - 1][i][j] = getRgbaFromComplex(\r\n          dftCoeffsMatrix[i][j][k]\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return rgbaMatrices;\r\n}\r\n\r\nfunction getSubdivision(notes, resolution, duration) {\r\n  let subdivision = [];\r\n  let wndLen = resolution;\r\n\r\n  for (let cursor = 0; cursor < duration; cursor += resolution) {\r\n    let temp = [];\r\n    notes.forEach((note) => {\r\n      let { time, duration } = note;\r\n\r\n      //Check if note contribute to the current window\r\n      if (isValidNote(time, duration, cursor, wndLen)) {\r\n        let noteAndDuration = { pitch: note.pitch };\r\n        //Computation of note contribution in the current window\r\n        if (time < cursor) {\r\n          if (time + duration < cursor + wndLen)\r\n            noteAndDuration.duration = time + duration - cursor;\r\n          else noteAndDuration.duration = wndLen;\r\n        } else {\r\n          if (time + duration <= cursor + wndLen)\r\n            noteAndDuration.duration = duration;\r\n          else noteAndDuration.duration = cursor + wndLen - time;\r\n        }\r\n\r\n        temp.push(noteAndDuration);\r\n      }\r\n    });\r\n\r\n    subdivision.push(temp);\r\n  }\r\n\r\n  return subdivision;\r\n}\r\n\r\nfunction isValidNote(time, duration, cursor, wndLen) {\r\n  if (\r\n    (time > cursor && time < cursor + wndLen) ||\r\n    (time + duration > cursor && time + duration < cursor + wndLen) ||\r\n    (time <= cursor && time + duration >= cursor + wndLen)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getComplementaryColours(coeffs) {\r\n  let colours = [];\r\n\r\n  //Opposite of re and im to get the complementary colour\r\n  coeffs.forEach((coeff) => {\r\n    let rho = Math.sqrt(Math.pow(coeff.re, 2) + Math.pow(coeff.im, 2));\r\n    let rgba = pixelColor(coeff.re, -coeff.im, rho);\r\n\r\n    //RGB complementary\r\n    rgba.r = 255 - rgba.r;\r\n    rgba.g = 255 - rgba.g;\r\n    rgba.b = 255 - rgba.b;\r\n\r\n    colours.push(rgbaToHexa(rgba));\r\n  });\r\n\r\n  return colours;\r\n}\r\n\r\nfunction rgbaToHexa(rgba) {\r\n  let hexa = Object.keys(rgba).map((key) => colorToHex(rgba[key]));\r\n  return `#${hexa.join('')}`;\r\n}\r\n\r\nfunction colorToHex(color) {\r\n  let hexadecimal = color.toString(16);\r\n  return hexadecimal.length == 1 ? '0' + hexadecimal : hexadecimal;\r\n}\r\n","export function getRosePoints(n, d) {\r\n  let dataPoints = [];\r\n\r\n  for (let delta = 0; delta < 2 * Math.PI * d; delta += 0.01) {\r\n    let r = 10 * Math.cos((n / d) * delta);\r\n    let x = r * Math.cos(delta);\r\n    let y = r * Math.sin(delta);\r\n\r\n    dataPoints.push([x, y]);\r\n  }\r\n\r\n  return dataPoints;\r\n}\r\n","import { useRef, useState } from 'react';\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nfunction ResolutionSelector({ resolutionMode, setResolutionMode }) {\r\n  //State: input error\r\n  const [isInputSecondsInvalid, setIsInputSecondsInvalid] = useState(false);\r\n  const resolutionTextRef = useRef(null);\r\n\r\n  function onChangeResolutionSelection(event) {\r\n    let newResolutionMode = { ...resolutionMode };\r\n    newResolutionMode.seconds = parseFloat(resolutionTextRef.current.value);\r\n\r\n    switch (event.target.value) {\r\n      case 'sixteenth':\r\n        newResolutionMode.noteResolutionValue = 0.25;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'eighth':\r\n        newResolutionMode.noteResolutionValue = 0.5;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'quarter':\r\n        newResolutionMode.noteResolutionValue = 1;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'half':\r\n        newResolutionMode.noteResolutionValue = 2;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'whole':\r\n        newResolutionMode.noteResolutionValue = 4;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'seconds':\r\n        newResolutionMode.useSeconds = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setResolutionMode(newResolutionMode);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl component='fieldset'>\r\n        <FormLabel component='legend'>Resolution</FormLabel>\r\n        <RadioGroup\r\n          row\r\n          defaultValue='quarter'\r\n          onChange={onChangeResolutionSelection}\r\n          aria-label='resolution'\r\n          name='row-radio-buttons-group'\r\n        >\r\n          <FormControlLabel\r\n            sx={{ fontSize: '20px' }}\r\n            value='sixteenth'\r\n            control={<Radio size='small' />}\r\n            label={<Typography sx={{ fontSize: '2rem' }}>&#119137;</Typography>}\r\n          />\r\n          <FormControlLabel\r\n            value='eighth'\r\n            control={<Radio size='small' />}\r\n            label={<Typography sx={{ fontSize: '2rem' }}>&#119136;</Typography>}\r\n          />\r\n          <FormControlLabel\r\n            value='quarter'\r\n            control={<Radio size='small' />}\r\n            label={<Typography sx={{ fontSize: '2rem' }}>&#9833;</Typography>}\r\n          />\r\n          <FormControlLabel\r\n            value='half'\r\n            control={<Radio size='small' />}\r\n            label={<Typography sx={{ fontSize: '2rem' }}>&#119134;</Typography>}\r\n          />\r\n          <FormControlLabel\r\n            value='whole'\r\n            control={<Radio size='small' />}\r\n            label={<Typography sx={{ fontSize: '2rem' }}>&#119133;</Typography>}\r\n          />\r\n          <FormControlLabel\r\n            value='seconds'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <TextField\r\n                sx={{ minHeight: '5rem' }}\r\n                error={isInputSecondsInvalid}\r\n                helperText={isInputSecondsInvalid && 'Invalid input'}\r\n                label='in seconds'\r\n                id='standard-size-small'\r\n                defaultValue='1.5'\r\n                size='small'\r\n                variant='standard'\r\n                onChange={() => {\r\n                  let newResolutionMode = { ...resolutionMode };\r\n                  newResolutionMode.seconds = parseFloat(\r\n                    resolutionTextRef.current.value\r\n                  );\r\n                  if (isNaN(newResolutionMode.seconds))\r\n                    setIsInputSecondsInvalid(true);\r\n                  else {\r\n                    setResolutionMode(newResolutionMode);\r\n                    setIsInputSecondsInvalid(false);\r\n                  }\r\n                }}\r\n                inputRef={resolutionTextRef}\r\n              />\r\n            }\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResolutionSelector;\r\n","import { styled } from '@mui/material/styles';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst ListItem = styled('li')(({ theme }) => ({\r\n  margin: theme.spacing(0.5),\r\n}));\r\n\r\nexport default function PcvChipsBox({ userPcvs, setUserPcvs, rosesMat }) {\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //on detele, set the rose icon to unused\r\n    //matrix coeffs are i = d-1, j=d-1\r\n    rosesMat[chipToDelete.d - 1][chipToDelete.n - 1].used = false;\r\n\r\n    setUserPcvs((chips) =>\r\n      chips.filter((chip) => chip.label !== chipToDelete.label)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        p: '5px',\r\n        overflow: 'auto',\r\n        minHeight: '50%',\r\n        width: '100%',\r\n      }}\r\n      component='ul'\r\n    >\r\n      {userPcvs.map((data, i) => {\r\n        return (\r\n          <ListItem key={`${i}`}>\r\n            <Chip\r\n              variant={data.isDisabled ? 'outlined' : 'filled'}\r\n              icon={\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  width='24'\r\n                  height='24'\r\n                  viewBox='0 0 24 24'\r\n                >\r\n                  <g /* fill='none' fill-rule='evenodd' */>\r\n                    {/* <rect\r\n                      width='20'\r\n                      height='20'\r\n                      x='2'\r\n                      y='2'\r\n                      fill='#FFF'\r\n                      rx='10'\r\n                    /> */}\r\n                    <polyline\r\n                      transform={`translate(${12},${12})`}\r\n                      fill='none'\r\n                      stroke='black'\r\n                      strokeWidth='1px'\r\n                      points={data.rosePoints}\r\n                    />\r\n                  </g>\r\n                </svg>\r\n              }\r\n              label={data.label}\r\n              onDelete={handleDelete(data)}\r\n              onClick={() => {\r\n                data.isDisabled = !data.isDisabled;\r\n                setUserPcvs([...userPcvs]);\r\n              }}\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\n","export default function Home() {\r\n  return (\r\n    <div>\r\n      <h1>Home - Theory and analysis</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae,\r\n        architecto temporibus laboriosam, atque veniam quod provident minus eos\r\n        aspernatur ipsa ad nihil veritatis ea, eaque amet! Itaque cupiditate\r\n        laudantium neque voluptas necessitatibus quidem perspiciatis molestias\r\n        dolores possimus. Veritatis perferendis, quidem molestiae ipsa\r\n        reprehenderit aperiam harum iste obcaecati doloribus, recusandae\r\n        adipisci et saepe non qui illum ratione nemo amet voluptates dolore\r\n        exercitationem provident. Ea sed incidunt cum eum excepturi vitae\r\n        consequuntur eius quam earum? Repudiandae explicabo incidunt molestiae\r\n        animi. Quibusdam veniam rerum minima error, quos voluptas incidunt. Est\r\n        ex nesciunt ea id, dolor harum nemo quo quibusdam molestias dicta quae\r\n        modi inventore. Sit dicta iure voluptatum modi. Recusandae harum\r\n        blanditiis in dolore quasi officiis minus quos veritatis eveniet\r\n        corporis eaque odio esse deserunt dolorum quod qui tempore, asperiores\r\n        repellat numquam dolorem nobis! Provident soluta officiis temporibus\r\n        optio, sapiente aspernatur accusantium ipsam velit necessitatibus natus\r\n        placeat obcaecati consectetur quia. Reiciendis ipsum tempora non, dicta\r\n        quod nesciunt. Magni, harum laudantium inventore omnis fugiat quia\r\n        explicabo temporibus itaque officiis minus autem cumque! Necessitatibus\r\n        dolorum aliquid omnis, sed ullam voluptatem reiciendis voluptate. Ad\r\n        minima voluptatem praesentium totam eum consequuntur reiciendis quae\r\n        soluta ipsam cupiditate? Officia labore modi illum libero error ad fugit\r\n        sit nostrum, totam esse magnam doloremque repellendus. Similique, iure\r\n        sed voluptatem quia molestiae aut incidunt facilis sequi! Veniam\r\n        cupiditate optio magnam officiis cumque beatae laudantium, quas natus at\r\n        aliquid nostrum, voluptatem aliquam quia doloremque, fugit fuga facere\r\n        esse. Nostrum numquam nam, praesentium iusto accusamus quasi delectus\r\n        rem vero laborum, optio blanditiis commodi id quidem beatae in.\r\n        Laudantium fugit aspernatur impedit quam maiores officiis! Odit, est\r\n        quae obcaecati repudiandae modi aliquid corporis natus dolores harum\r\n        porro perferendis magni nam. Aperiam provident accusamus soluta optio\r\n        eaque incidunt, quos modi nulla eligendi quo unde ipsa. Maxime\r\n        distinctio minus beatae consequuntur assumenda ab vitae pariatur.\r\n        Commodi maiores eius esse totam accusantium molestiae accusamus quas\r\n        fugiat placeat quaerat voluptate corrupti architecto sapiente reiciendis\r\n        obcaecati molestias, at tempore quisquam! Quam ratione aliquid quo illo\r\n        delectus eaque quae reiciendis dicta corporis obcaecati, nesciunt\r\n        veritatis molestiae impedit ut mollitia nam quisquam in aut quia nemo.\r\n        Ducimus nulla assumenda numquam debitis recusandae dicta quam amet\r\n        dolores, reprehenderit reiciendis ipsum sapiente sit alias obcaecati\r\n        praesentium consequatur ipsa natus iste distinctio officia vel fugiat\r\n        dolore delectus. Molestiae vero omnis blanditiis perspiciatis quibusdam,\r\n        ipsam quo fugiat sunt pariatur minima aperiam ratione, unde distinctio\r\n        porro incidunt praesentium repellendus aliquam autem dolores natus. Ab\r\n        corporis earum veniam corrupti neque aperiam! Perferendis, eligendi,\r\n        praesentium totam quia excepturi exercitationem dolores debitis cumque\r\n        optio consectetur et suscipit cupiditate fuga nam commodi minima\r\n        molestiae odit consequatur id enim aut quisquam eum. Modi dolores fuga\r\n        neque praesentium repellendus, aspernatur ea quod? Corporis quaerat,\r\n        nobis culpa quod nesciunt eum distinctio itaque cumque molestias\r\n        impedit, deleniti delectus. Eum repellat architecto velit delectus eius\r\n        praesentium, temporibus a nobis ad unde quaerat minus illum eos culpa\r\n        earum possimus? Doloribus nostrum, impedit aut, officia amet at fuga\r\n        velit minima tempora, harum molestiae non nisi quia maxime? Odio quo\r\n        reiciendis nostrum repudiandae, alias delectus aut ullam quisquam. Eius?\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","export default function Theory() {\r\n  return (\r\n    <div>\r\n      <h1>Theory page</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae,\r\n        architecto temporibus laboriosam, atque veniam quod provident minus eos\r\n        aspernatur ipsa ad nihil veritatis ea, eaque amet! Itaque cupiditate\r\n        laudantium neque voluptas necessitatibus quidem perspiciatis molestias\r\n        dolores possimus. Veritatis perferendis, quidem molestiae ipsa\r\n        reprehenderit aperiam harum iste obcaecati doloribus, recusandae\r\n        adipisci et saepe non qui illum ratione nemo amet voluptates dolore\r\n        exercitationem provident. Ea sed incidunt cum eum excepturi vitae\r\n        consequuntur eius quam earum? Repudiandae explicabo incidunt molestiae\r\n        animi. Quibusdam veniam rerum minima error, quos voluptas incidunt. Est\r\n        ex nesciunt ea id, dolor harum nemo quo quibusdam molestias dicta quae\r\n        modi inventore. Sit dicta iure voluptatum modi. Recusandae harum\r\n        blanditiis in dolore quasi officiis minus quos veritatis eveniet\r\n        corporis eaque odio esse deserunt dolorum quod qui tempore, asperiores\r\n        repellat numquam dolorem nobis! Provident soluta officiis temporibus\r\n        optio, sapiente aspernatur accusantium ipsam velit necessitatibus natus\r\n        placeat obcaecati consectetur quia. Reiciendis ipsum tempora non, dicta\r\n        quod nesciunt. Magni, harum laudantium inventore omnis fugiat quia\r\n        explicabo temporibus itaque officiis minus autem cumque! Necessitatibus\r\n        dolorum aliquid omnis, sed ullam voluptatem reiciendis voluptate. Ad\r\n        minima voluptatem praesentium totam eum consequuntur reiciendis quae\r\n        soluta ipsam cupiditate? Officia labore modi illum libero error ad fugit\r\n        sit nostrum, totam esse magnam doloremque repellendus. Similique, iure\r\n        sed voluptatem quia molestiae aut incidunt facilis sequi! Veniam\r\n        cupiditate optio magnam officiis cumque beatae laudantium, quas natus at\r\n        aliquid nostrum, voluptatem aliquam quia doloremque, fugit fuga facere\r\n        esse. Nostrum numquam nam, praesentium iusto accusamus quasi delectus\r\n        rem vero laborum, optio blanditiis commodi id quidem beatae in.\r\n        Laudantium fugit aspernatur impedit quam maiores officiis! Odit, est\r\n        quae obcaecati repudiandae modi aliquid corporis natus dolores harum\r\n        porro perferendis magni nam. Aperiam provident accusamus soluta optio\r\n        eaque incidunt, quos modi nulla eligendi quo unde ipsa. Maxime\r\n        distinctio minus beatae consequuntur assumenda ab vitae pariatur.\r\n        Commodi maiores eius esse totam accusantium molestiae accusamus quas\r\n        fugiat placeat quaerat voluptate corrupti architecto sapiente reiciendis\r\n        obcaecati molestias, at tempore quisquam! Quam ratione aliquid quo illo\r\n        delectus eaque quae reiciendis dicta corporis obcaecati, nesciunt\r\n        veritatis molestiae impedit ut mollitia nam quisquam in aut quia nemo.\r\n        Ducimus nulla assumenda numquam debitis recusandae dicta quam amet\r\n        dolores, reprehenderit reiciendis ipsum sapiente sit alias obcaecati\r\n        praesentium consequatur ipsa natus iste distinctio officia vel fugiat\r\n        dolore delectus. Molestiae vero omnis blanditiis perspiciatis quibusdam,\r\n        ipsam quo fugiat sunt pariatur minima aperiam ratione, unde distinctio\r\n        porro incidunt praesentium repellendus aliquam autem dolores natus. Ab\r\n        corporis earum veniam corrupti neque aperiam! Perferendis, eligendi,\r\n        praesentium totam quia excepturi exercitationem dolores debitis cumque\r\n        optio consectetur et suscipit cupiditate fuga nam commodi minima\r\n        molestiae odit consequatur id enim aut quisquam eum. Modi dolores fuga\r\n        neque praesentium repellendus, aspernatur ea quod? Corporis quaerat,\r\n        nobis culpa quod nesciunt eum distinctio itaque cumque molestias\r\n        impedit, deleniti delectus. Eum repellat architecto velit delectus eius\r\n        praesentium, temporibus a nobis ad unde quaerat minus illum eos culpa\r\n        earum possimus? Doloribus nostrum, impedit aut, officia amet at fuga\r\n        velit minima tempora, harum molestiae non nisi quia maxime? Odio quo\r\n        reiciendis nostrum repudiandae, alias delectus aut ullam quisquam. Eius?\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import { useRef, useEffect, useState } from 'react';\r\n\r\nconst verticalScale = Math.sin(Math.PI / 3);\r\n\r\nexport const Wavescape = ({\r\n  wsNumber,\r\n  wavescapeMatrix,\r\n  currentWavescapeSubdiv,\r\n  wavescapeWidth,\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const [wsCoordinates, setWsCoordinates] = useState([]);\r\n  const margin = 10;\r\n  let width = wavescapeWidth - margin;\r\n  let height = wavescapeWidth;\r\n  let ticks;\r\n\r\n  useEffect(() => {\r\n    width = wavescapeWidth;\r\n    height = wavescapeWidth;\r\n    console.log(wavescapeWidth);\r\n  }, [wavescapeWidth]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // increase the actual size of our canvas\r\n    //canvas.width = width * devicePixelRatio;\r\n    //canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    //ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    //canvas.style.width = width + 'px';\r\n    //canvas.style.height = height + 'px';\r\n\r\n    let margins = [margin, margin];\r\n    let innerSize = [canvas.width - margins[0], canvas.height - margins[1]];\r\n    let baseSubdivision;\r\n\r\n    if (wavescapeMatrix) {\r\n      baseSubdivision = wavescapeMatrix[0].length;\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      //ctx.setTransform(1, 0, 0, -1, 0, ctx.canvas.height);\r\n      ticks = computeTicks(\r\n        innerSize[0],\r\n        innerSize[1],\r\n        baseSubdivision,\r\n        margins[0],\r\n        margins[1]\r\n      );\r\n\r\n      setWsCoordinates(ticks);\r\n\r\n      //Vertical scaling to make the triangle equilateral\r\n      //ctx.scale(1, verticalScale);\r\n      drawWavescape(ticks, ctx, wavescapeMatrix);\r\n    }\r\n  }, [wavescapeMatrix, width, height]);\r\n\r\n  useEffect(() => {}, [wavescapeMatrix]);\r\n\r\n  return (\r\n    <svg width={width + margin} height={height}>\r\n      <text x='35%' y='15%' style={{ fontSize: `${(width / 100) * 7}px` }}>\r\n        {`${wsNumber}. `}\r\n      </text>\r\n      <g\r\n        transform={`scale(${1}, ${-verticalScale}) translate(${0},${-height})`}\r\n      >\r\n        <foreignObject x={0} y={0} width={width} height={height}>\r\n          <canvas width={width} height={height} ref={canvasRef}></canvas>\r\n        </foreignObject>\r\n\r\n        {/* //Line ticks */}\r\n        {wsCoordinates.length > 0\r\n          ? wsCoordinates[0].map((coord, i) => (\r\n              <line\r\n                key={`tick${i}`}\r\n                x1={coord.x}\r\n                x2={coord.x}\r\n                y1={coord.y - 3}\r\n                y2={coord.y + 3}\r\n                stroke='grey'\r\n                strokeWidth='1px'\r\n              />\r\n            ))\r\n          : null}\r\n        {/* Contour line */}\r\n        {wsCoordinates.length > 0 ? (\r\n          <>\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              stroke='grey'\r\n              strokeWidth='2px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <circle\r\n              cx={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].x +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].x) /\r\n                2\r\n              }\r\n              cy={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].y +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].y) /\r\n                2\r\n              }\r\n              r={0.01 * width}\r\n              fill='white'\r\n            />\r\n            <circle\r\n              cx={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].x +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].x) /\r\n                2\r\n              }\r\n              cy={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].y +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].y) /\r\n                2\r\n              }\r\n              r={0.01 * width}\r\n              stroke='black'\r\n              strokeWidth={1}\r\n              fill='transparent'\r\n            />\r\n          </>\r\n        ) : null}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction computeTicks(\r\n  innerWidth,\r\n  innerHeight,\r\n  baseSubdivision,\r\n  marginLeft,\r\n  marginTop\r\n) {\r\n  //Actually, it is a square matrix\r\n  let unit = innerWidth / baseSubdivision;\r\n  let mat = [];\r\n\r\n  for (let i = 0; i < baseSubdivision + 1; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < baseSubdivision + 1; j++) {\r\n      if (i <= j)\r\n        temp.push({\r\n          x: (j - i) * unit + (i * unit) / 2 + marginLeft,\r\n          y: i * unit + marginTop,\r\n        });\r\n    }\r\n    mat.push(temp);\r\n  }\r\n\r\n  return mat;\r\n}\r\n\r\nfunction drawWavescape(ticks, ctx, wavescapeMatrix) {\r\n  for (let i = 0; i < ticks.length - 1; i++) {\r\n    for (let j = 0; j < ticks[i].length - 1; j++) {\r\n      if (i === 0) {\r\n        //first row composed by triangles\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      } else {\r\n        //other rows composed by diamonds\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i - 1][j + 1].x, ticks[i - 1][j + 1].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Wavescape } from './Wavescape';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\n\r\nfunction WavescapeModule({\r\n  wavescapesData,\r\n  currentWavescapeSubdiv,\r\n  elemsWidth,\r\n}) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n      }}\r\n    >\r\n      {wavescapesData.length > 0 ? (\r\n        wavescapesData.map((data, i) => (\r\n          <Wavescape\r\n            wsNumber={i + 1}\r\n            key={`w.${i}`}\r\n            wavescapeMatrix={data}\r\n            currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n            wavescapeWidth={elemsWidth}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Typography>Upload a midi file first</Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WavescapeModule;\r\n","import * as d3 from 'd3';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { pixelColor } from './colorMapping';\r\n\r\n//Minus before every y coordinate due to the fact that svg has positive y\r\n//downward, meanwhile cartesian plane has positive y upward\r\n\r\nfunction Circle({\r\n  coeffNumber,\r\n  protoDataCoeff,\r\n  traceDataCoeff,\r\n  userPcvsCoeff,\r\n  currentSubdiv,\r\n  performanceCoeff,\r\n  targetCircleWidth,\r\n  showMagAndPhase,\r\n}) {\r\n  const canvasRef = useRef(null);\r\n  const [currentSubdivCoeff, setCurrentSubdivCoeff] = useState({\r\n    mu: 0,\r\n    phi: 0,\r\n  });\r\n  let width = 440;\r\n  let height = width;\r\n\r\n  const margin = 40;\r\n  const circleRadius = width / 2 - margin;\r\n\r\n  let marksRadiusRatio = 0.01;\r\n\r\n  useEffect(() => {\r\n    if (traceDataCoeff) {\r\n      //Rounding to second decimal and converting to polar coordinate\r\n      let x = traceDataCoeff[currentSubdiv].x;\r\n      let y = traceDataCoeff[currentSubdiv].y;\r\n\r\n      let phi = (Math.atan2(y, x) * 180) / Math.PI;\r\n      let mu = Math.sqrt(x * x + y * y);\r\n\r\n      phi = Math.round(phi + Number.EPSILON);\r\n      mu = Math.round((mu + Number.EPSILON) * 100) / 100;\r\n      setCurrentSubdivCoeff({ mu, phi });\r\n    }\r\n  }, [currentSubdiv]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let radius = Math.floor(circleRadius * devicePixelRatio);\r\n    let image = ctx.createImageData(2 * radius, 2 * radius);\r\n    let data = image.data;\r\n\r\n    // increase the actual size of our canvas\r\n    canvas.width = width * devicePixelRatio;\r\n    canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    canvas.style.width = width + 'px';\r\n    canvas.style.height = height + 'px';\r\n\r\n    for (let x = -radius; x < radius; x++) {\r\n      for (let y = -radius; y < radius; y++) {\r\n        let distance = Math.sqrt(x * x + y * y);\r\n\r\n        if (distance > radius) {\r\n          // skip all (x,y) coordinates that are outside of the circle\r\n          continue;\r\n        }\r\n        // Figure out the starting index of this pixel in the image data array.\r\n        let rowLength = 2 * radius;\r\n        let adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let pixelWidth = 4; // each pixel requires 4 slots in the data array\r\n        let index = (adjustedX + adjustedY * rowLength) * pixelWidth;\r\n        let rgba = pixelColor(x, y, distance / radius);\r\n        data[index] = rgba.r;\r\n        data[index + 1] = rgba.g;\r\n        data[index + 2] = rgba.b;\r\n        data[index + 3] = rgba.a;\r\n      }\r\n    }\r\n    ctx.putImageData(image, 0, 0);\r\n  }, [width, height, circleRadius]);\r\n\r\n  useEffect(() => {\r\n    //Workaround for chrome bug on canvas overlay in foreignObj SVG\r\n    canvasRef.current.getContext('2d').getImageData(0, 0, 1, 1);\r\n  }, []);\r\n\r\n  const circleMark = (pcvData, radiusScaleWidth, color, id, opacity = 1) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    return (\r\n      <path\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        fill={color}\r\n        fillOpacity={opacity}\r\n        key={id}\r\n        d={mark()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  function svgRoseIcon(rosePoints, translateX, translateY, scale, i) {\r\n    return (\r\n      <polyline\r\n        key={`r.${i}`}\r\n        transform={`translate(${translateX},${translateY}) scale(${scale})`}\r\n        fill='none'\r\n        stroke='black'\r\n        strokeWidth='1px'\r\n        points={rosePoints}\r\n      />\r\n    );\r\n  }\r\n\r\n  const protoCircleMark = (pcvData, id) => {\r\n    let scaleRatio = 0.02;\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius((scaleRatio * width) / 2)\r\n      .outerRadius(((scaleRatio + 0.01) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    //Check for sub/superscript\r\n    let labelName = '';\r\n    let subSup = '';\r\n    let isSub = false;\r\n    if (pcvData.label.includes('_') || pcvData.label.includes('^')) {\r\n      for (let i = 0; i < pcvData.label.length; i++) {\r\n        if (pcvData.label[i] === '_') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n          isSub = true;\r\n        }\r\n        if (pcvData.label[i] === '^') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n        }\r\n      }\r\n    } else {\r\n      labelName = pcvData.label;\r\n    }\r\n\r\n    //Computation of label offset\r\n    let dxOffset = 0,\r\n      dyOffset = 5;\r\n\r\n    if (Math.sign(pcvData.x) === 1) dxOffset = 20;\r\n    else if (Math.sign(pcvData.x) === -1) dxOffset = -20;\r\n\r\n    if (Math.sign(-pcvData.y) === 1) dyOffset = 25;\r\n    else if (Math.sign(-pcvData.y) === -1) dyOffset = -8;\r\n\r\n    if (pcvData.x === 0 && pcvData.y === 0) {\r\n      dxOffset = 15;\r\n      dyOffset = 5;\r\n    }\r\n\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        key={`p.${id}`}\r\n      >\r\n        <path fill={'grey'} key={id} d={mark()}></path>\r\n        <text textAnchor='middle' dx={dxOffset} dy={dyOffset} fontSize='20px'>\r\n          {labelName}\r\n          {isSub ? (\r\n            <tspan fontSize={15} baselineShift='sub'>\r\n              {subSup}\r\n            </tspan>\r\n          ) : (\r\n            <tspan fontSize={15} baselineShift='super'>\r\n              {subSup}\r\n            </tspan>\r\n          )}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const drawBorder = () => {\r\n    return (\r\n      <path\r\n        fill={'azure'}\r\n        d={d3\r\n          .arc()\r\n          .innerRadius(circleRadius - 1)\r\n          .outerRadius(circleRadius + 3)\r\n          .startAngle(0)\r\n          .endAngle(2 * Math.PI)()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const highlightSubdiv = (radiusScaleWidth) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    const highlight = d3\r\n      .arc()\r\n      .innerRadius((radiusScaleWidth * width) / 2)\r\n      .outerRadius(((radiusScaleWidth + 0.005) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    let highlightedTrace = [];\r\n    let length = 10;\r\n    let opacityArray = [];\r\n\r\n    opacityArray.push(1);\r\n    for (let i = 1; i < length; i++) {\r\n      opacityArray.push(opacityArray[i - 1] * 0.4);\r\n    }\r\n\r\n    if (currentSubdiv < length)\r\n      highlightedTrace = traceDataCoeff.slice(0, currentSubdiv + 1);\r\n    else\r\n      highlightedTrace = traceDataCoeff.slice(\r\n        currentSubdiv - length,\r\n        currentSubdiv\r\n      );\r\n\r\n    highlightedTrace = highlightedTrace.reverse();\r\n\r\n    return highlightedTrace.map((coeff, i) => {\r\n      return (\r\n        <g key={`g.${i}`}>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'white'}\r\n            key={i}\r\n            fillOpacity={opacityArray[i]}\r\n            d={mark()}\r\n          ></path>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'black'}\r\n            fillOpacity={opacityArray[i]}\r\n            key={`t.${i}`}\r\n            d={highlight()}\r\n          ></path>\r\n        </g>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      width={targetCircleWidth}\r\n      height={targetCircleWidth}\r\n      viewBox={`0 0 ${width} ${height}`}\r\n      /* transform={`scale(${targetCircleWidth / width},${\r\n        targetCircleWidth / width\r\n      })`} */\r\n    >\r\n      <text x='0' y='24' style={{ fontSize: '24px' }}>\r\n        {`${coeffNumber}.`}\r\n      </text>\r\n      {showMagAndPhase ? (\r\n        <>\r\n          <text\r\n            x='19'\r\n            y='24'\r\n            style={{ fontSize: '24px' }}\r\n          >{`\\u{3C6}: ${currentSubdivCoeff.phi}\\u{b0}`}</text>\r\n          <text\r\n            x='20'\r\n            y='44'\r\n            style={{ fontSize: '24px' }}\r\n          >{`\\u{3BC}: ${currentSubdivCoeff.mu}`}</text>\r\n        </>\r\n      ) : null}\r\n\r\n      <foreignObject x={margin} y={margin} width={width} height={height}>\r\n        <canvas\r\n          style={{ zIndex: '-1' }}\r\n          width={width}\r\n          height={height}\r\n          ref={canvasRef}\r\n        />\r\n      </foreignObject>\r\n      <g transform={`translate(${width / 2},${width / 2})`}>\r\n        {drawBorder()}\r\n        {protoDataCoeff\r\n          ? protoDataCoeff.map((pcv, i) => protoCircleMark(pcv, i))\r\n          : null}\r\n        {/* {traceDataCoeff\r\n            ? traceDataCoeff.map((pcv, i) =>\r\n                circleMark(pcv, marksRadiusRatio, 'black', i, 0.1)\r\n              )\r\n            : null} */}\r\n        {traceDataCoeff ? highlightSubdiv(marksRadiusRatio) : null}\r\n        {/* {userPcvsCoeff\r\n          ? userPcvsCoeff.map((pcv, i) => {\r\n              if (!pcv.isDisabled)\r\n                return circleMark(pcv, marksRadiusRatio + 0.015, pcv.color, i);\r\n            })\r\n          : null} */}\r\n        {userPcvsCoeff\r\n          ? userPcvsCoeff.map((pcv, i) => {\r\n              if (!pcv.isDisabled)\r\n                return svgRoseIcon(\r\n                  pcv.rosePoints,\r\n                  pcv.x * circleRadius,\r\n                  -pcv.y * circleRadius,\r\n                  0.5,\r\n                  i\r\n                );\r\n            })\r\n          : null}\r\n        {circleMark(performanceCoeff, marksRadiusRatio * 2, 'teal')}\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n","export const prototypesData = [\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'C♯', x: 0.866, y: -0.5 },\r\n    { label: 'D', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'E', x: -0.5, y: -0.866 },\r\n    { label: 'F', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'G', x: -0.866, y: 0.5 },\r\n    { label: 'A♭', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'B♭', x: 0.5, y: 0.866 },\r\n    { label: 'B', x: 0.866, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'T_0', x: 1, y: 0 },\r\n    { label: 'T_1', x: 0.5, y: -0.866 },\r\n    { label: 'T_2', x: -0.5, y: -0.866 },\r\n    { label: 'T_3', x: -1, y: 0 },\r\n    { label: 'T_4', x: -0.5, y: 0.866 },\r\n    { label: 'T_5', x: 0.5, y: 0.866 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C+', x: 1, y: 0 },\r\n    { label: 'C♯+', x: 0, y: -1 },\r\n    { label: 'D+', x: -1, y: 0 },\r\n    { label: 'D♯+', x: 0, y: 1 },\r\n    { label: 'H_0,3', x: 0.5, y: 0.5 },\r\n    { label: 'H_0,1', x: 0.5, y: -0.5 },\r\n    { label: 'H_1,2', x: -0.5, y: -0.5 },\r\n    { label: 'H_2,3', x: -0.5, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C^o7', x: 1, y: 0 },\r\n    { label: 'C♯^o7', x: -0.5, y: -0.866 },\r\n    { label: 'D^o7', x: -0.5, y: 0.866 },\r\n    { label: 'O_0,2', x: 0.25, y: 0.433 },\r\n    { label: 'O_0,1', x: 0.25, y: -0.433 },\r\n    { label: 'O_1,2', x: -0.5, y: 0 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'F', x: 0.866, y: -0.5 },\r\n    { label: 'B♭', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'A♭', x: -0.5, y: -0.866 },\r\n    { label: 'C♯', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'B', x: -0.866, y: 0.5 },\r\n    { label: 'E', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'D', x: 0.5, y: 0.866 },\r\n    { label: 'G', x: 0.866, y: 0.5 },\r\n    { label: '♮', x: 0.267, y: 0.462 },\r\n    { label: '5♭', x: 0, y: -0.533 },\r\n    { label: '2♯', x: -0.267, y: 0.462 },\r\n    { label: '3♭', x: 0.462, y: -0.267 },\r\n    { label: '4♯', x: -0.533, y: 0 },\r\n    { label: '♭', x: 0.462, y: 0.267 },\r\n    { label: '6♯', x: -0.267, y: -0.462 },\r\n    { label: '♯', x: 0, y: 0.533 },\r\n    { label: '4♭', x: 0.267, y: -0.462 },\r\n    { label: '3♯', x: -0.462, y: 0.267 },\r\n    { label: '2♭', x: 0.533, y: 0 },\r\n    { label: '5♯', x: -0.462, y: -0.267 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'WT_1', x: 1, y: 0 },\r\n    { label: 'WT_2', x: -1, y: 0 },\r\n  ],\r\n];\r\n","import Circle from './Circle';\r\nimport { useEffect, useState } from 'react';\r\nimport { prototypesData } from './prototypesData';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction CoefficientsModule({\r\n  coeffTracesData,\r\n  showPrototypes,\r\n  showMagAndPhase,\r\n  userPcvs,\r\n  currentSubdiv,\r\n  midiDevNotesDftCoeffs,\r\n  elemsWidth,\r\n}) {\r\n  const [selectedProtoPitchClasses, setSelectedProtoPitchClasses] =\r\n    useState(prototypesData);\r\n\r\n  const [subdivUserPcvs, setSubdivUserPcvs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (showPrototypes) {\r\n      setSelectedProtoPitchClasses(prototypesData);\r\n    } else setSelectedProtoPitchClasses([]);\r\n  }, [showPrototypes]);\r\n\r\n  useEffect(() => {\r\n    //Subdividing the coeffs for each circle\r\n    let tempSubdivUserPcvs = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < userPcvs.length; j++) {\r\n        temp.push({\r\n          x: userPcvs[j].coeffs[i].re,\r\n          y: userPcvs[j].coeffs[i].im,\r\n          rosePoints: userPcvs[j].rosePoints,\r\n          isDisabled: userPcvs[j].isDisabled,\r\n        });\r\n      }\r\n      tempSubdivUserPcvs.push(temp);\r\n    }\r\n\r\n    setSubdivUserPcvs(tempSubdivUserPcvs);\r\n  }, [userPcvs]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n      }}\r\n    >\r\n      {[1, 2, 3, 4, 5, 6].map((coeffNum) => (\r\n        <Circle\r\n          coeffNumber={coeffNum}\r\n          key={`w.${coeffNum}`}\r\n          protoDataCoeff={selectedProtoPitchClasses[coeffNum - 1]}\r\n          traceDataCoeff={coeffTracesData[coeffNum - 1]}\r\n          userPcvsCoeff={subdivUserPcvs[coeffNum - 1]}\r\n          currentSubdiv={currentSubdiv}\r\n          performanceCoeff={midiDevNotesDftCoeffs[coeffNum]}\r\n          targetCircleWidth={elemsWidth}\r\n          showMagAndPhase={showMagAndPhase}\r\n        />\r\n      ))}\r\n\r\n      {/* <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[0]}\r\n        traceDataCoeff={coeffTracesData[0]}\r\n        userPcvsCoeff={subdivUserPcvs[0]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[1]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[1]}\r\n        traceDataCoeff={coeffTracesData[1]}\r\n        userPcvsCoeff={subdivUserPcvs[1]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[2]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[2]}\r\n        traceDataCoeff={coeffTracesData[2]}\r\n        userPcvsCoeff={subdivUserPcvs[2]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[3]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[3]}\r\n        traceDataCoeff={coeffTracesData[3]}\r\n        userPcvsCoeff={subdivUserPcvs[3]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[4]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[4]}\r\n        traceDataCoeff={coeffTracesData[4]}\r\n        userPcvsCoeff={subdivUserPcvs[4]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[5]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[5]}\r\n        traceDataCoeff={coeffTracesData[5]}\r\n        userPcvsCoeff={subdivUserPcvs[5]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[6]}\r\n      /> */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CoefficientsModule;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport * as Tone from 'tone';\r\nimport WavescapeModule from '../WavescapeModule';\r\nimport CoefficientsModule from '../CoefficientsModule';\r\n\r\nimport Player from '../Player';\r\n\r\nimport dft from '../DFT';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Slider from '@mui/material/Slider';\r\n\r\n//Drawer mui components\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n//Accordion mui components\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n//Bottom appbar\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create(['margin', 'width'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: `${drawerWidth}px`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nfunction Application({\r\n  fileName,\r\n  setInAnalysisPage,\r\n  open,\r\n  setOpen,\r\n  wavescapesData,\r\n  coeffTracesData,\r\n  currentSubdiv,\r\n  currentWavescapeSubdiv,\r\n  userPcvs,\r\n}) {\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [showPrototypes, setShowPrototypes] = useState(true);\r\n  const [showMagAndPhase, setShowMagAndPhase] = useState(true);\r\n\r\n  //MIDI inputs\r\n  const [midiDevNotesDftCoeffs, setMidiDevNotesDftCoeffs] = useState(\r\n    dft([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]).map((coeff) => {\r\n      return { x: coeff.re, y: coeff.im };\r\n    })\r\n  );\r\n\r\n  //Ref to get the width of the accordion used to computed layout sizes\r\n  const accordionRef = useRef(null);\r\n  const [accordionWidth, setAccordionWidth] = useState(100);\r\n  const refSizeSlider = useRef(null);\r\n  const [elemsForEachRow, setElemsForEachRow] = useState(6);\r\n  const [elemsWidth, setElemsWidth] = useState(440);\r\n\r\n  function changeElementsSize(drawerOffset = 0) {\r\n    let adjustmentFractSizes = 5;\r\n\r\n    setElemsWidth(\r\n      (accordionRef.current.clientWidth + drawerOffset) / elemsForEachRow -\r\n        adjustmentFractSizes\r\n    );\r\n  }\r\n\r\n  /* function changeElementsSize(drawerOffset = 0) {\r\n    let adjustmentFractSizes = 5;\r\n\r\n    setElemsWidth(\r\n      (((accordionRef.current.clientWidth + drawerOffset) / elemsForEachRow -\r\n        adjustmentFractSizes) *\r\n        accordionWidth) /\r\n        100\r\n    );\r\n  } */\r\n\r\n  function handleResize() {\r\n    let drawerOffset = 0;\r\n    changeElementsSize(drawerOffset);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setInAnalysisPage(true);\r\n\r\n    //Open drawer when page loads\r\n    setOpen(true);\r\n\r\n    //Minus some pixel for robustness: sometimes width with fractional pixels\r\n    changeElementsSize();\r\n\r\n    window.addEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    changeElementsSize();\r\n    window.addEventListener('resize', handleResize);\r\n  }, [elemsForEachRow]);\r\n\r\n  useEffect(() => {\r\n    let drawerOffset = 0;\r\n    open ? (drawerOffset = -400) : (drawerOffset = +400);\r\n    changeElementsSize(drawerOffset);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    changeElementsSize();\r\n  }, [accordionWidth]);\r\n\r\n  //MIDI devices init\r\n  useEffect(() => {\r\n    //INIT\r\n    let currentNotes = [];\r\n    const sampler = new Tone.Sampler({\r\n      urls: {\r\n        A0: 'A0.mp3',\r\n        C1: 'C1.mp3',\r\n        'D#1': 'Ds1.mp3',\r\n        'F#1': 'Fs1.mp3',\r\n        A1: 'A1.mp3',\r\n        C2: 'C2.mp3',\r\n        'D#2': 'Ds2.mp3',\r\n        'F#2': 'Fs2.mp3',\r\n        A2: 'A2.mp3',\r\n        C3: 'C3.mp3',\r\n        'D#3': 'Ds3.mp3',\r\n        'F#3': 'Fs3.mp3',\r\n        A3: 'A3.mp3',\r\n        C4: 'C4.mp3',\r\n        'D#4': 'Ds4.mp3',\r\n        'F#4': 'Fs4.mp3',\r\n        A4: 'A4.mp3',\r\n        C5: 'C5.mp3',\r\n        'D#5': 'Ds5.mp3',\r\n        'F#5': 'Fs5.mp3',\r\n        A5: 'A5.mp3',\r\n        C6: 'C6.mp3',\r\n        'D#6': 'Ds6.mp3',\r\n        'F#6': 'Fs6.mp3',\r\n        A6: 'A6.mp3',\r\n        C7: 'C7.mp3',\r\n        'D#7': 'Ds7.mp3',\r\n        'F#7': 'Fs7.mp3',\r\n        A7: 'A7.mp3',\r\n        C8: 'C8.mp3',\r\n      },\r\n      release: 1,\r\n      baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n    }).toDestination();\r\n    sampler.volume.value = -30;\r\n\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator.requestMIDIAccess().then(success, failure);\r\n    }\r\n\r\n    function computeDftCoeffs(playedNotes) {\r\n      let pcv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n      playedNotes.forEach((note) => {\r\n        let pitch;\r\n        if (note.includes('#')) {\r\n          pitch = note.slice(0, 2);\r\n        } else pitch = pitch = note.slice(0, 1);\r\n\r\n        switch (pitch) {\r\n          case 'C':\r\n            pcv[0] += 1;\r\n            break;\r\n          case 'C#':\r\n            pcv[1] += 1;\r\n            break;\r\n          case 'D':\r\n            pcv[2] += 1;\r\n            break;\r\n          case 'D#':\r\n            pcv[3] += 1;\r\n            break;\r\n          case 'E':\r\n            pcv[4] += 1;\r\n            break;\r\n          case 'F':\r\n            pcv[5] += 1;\r\n            break;\r\n          case 'F#':\r\n            pcv[6] += 1;\r\n            break;\r\n          case 'G':\r\n            pcv[7] += 1;\r\n            break;\r\n          case 'G#':\r\n            pcv[8] += 1;\r\n            break;\r\n          case 'A':\r\n            pcv[9] += 1;\r\n            break;\r\n          case 'A#':\r\n            pcv[10] += 1;\r\n            break;\r\n          case 'B':\r\n            pcv[11] += 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      let dftCoeffs = dft(pcv);\r\n      dftCoeffs = dftCoeffs.map((coeff) => {\r\n        return { x: coeff.re, y: coeff.im };\r\n      });\r\n      //console.log(dftCoeffs);\r\n      setMidiDevNotesDftCoeffs(dftCoeffs);\r\n    }\r\n\r\n    function handleInput(input) {\r\n      const command = input.data[0];\r\n      const note = Tone.Frequency(input.data[1], 'midi').toNote();\r\n      const velocity = Math.round(input.data[2] * 0.05);\r\n      //const velocity = input.data[2];\r\n\r\n      switch (command) {\r\n        case 144: //noteOn\r\n          if (velocity > 0) {\r\n            //Note is on\r\n            sampler.triggerAttack(note, Tone.immediate(), velocity);\r\n            currentNotes.push(note);\r\n          } else {\r\n            //Note is off\r\n            sampler.triggerRelease(note, Tone.immediate());\r\n            currentNotes.filter((currentNote) => currentNote !== note);\r\n          }\r\n          break;\r\n        case 128: //noteOff\r\n          sampler.triggerRelease(note, Tone.immediate());\r\n          currentNotes = currentNotes.filter(\r\n            (currentNote) => currentNote !== note\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      computeDftCoeffs(currentNotes);\r\n    }\r\n\r\n    function success(midiAccess) {\r\n      midiAccess.onstatechange = updateDevices;\r\n\r\n      const inputs = midiAccess.inputs;\r\n\r\n      inputs.forEach((input) => {\r\n        input.onmidimessage = handleInput;\r\n      });\r\n    }\r\n\r\n    function failure() {\r\n      console.log('Could not connect MIDI');\r\n    }\r\n\r\n    function updateDevices(event) {\r\n      console.log(\r\n        `Name: ${event.port.name}, Brand: ${event.port.manufacturer}, State: ${event.port.state}, Type: ${event.port.type}`\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  function toggleShowPrototypes() {\r\n    setShowPrototypes(!showPrototypes);\r\n  }\r\n\r\n  function toggleShowMagAndPhase() {\r\n    setShowMagAndPhase(!showMagAndPhase);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          padding: 0,\r\n          margin: 'auto',\r\n          marginBottom: '70px',\r\n          width: `${accordionWidth}%`,\r\n        }}\r\n      >\r\n        <Accordion defaultExpanded={true}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel1a-content'\r\n            id='panel1a-header'\r\n          >\r\n            <Typography variant='h6'>Wavescape</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails ref={accordionRef} sx={{ padding: 0 }}>\r\n            <WavescapeModule\r\n              wavescapesData={wavescapesData}\r\n              currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n              elemsWidth={elemsWidth}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <Accordion defaultExpanded={true}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel2a-content'\r\n            id='panel2a-header'\r\n          >\r\n            <Typography variant='h6'>Fourier Coefficients</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails sx={{ padding: 0 }}>\r\n            <CoefficientsModule\r\n              coeffTracesData={coeffTracesData}\r\n              currentSubdiv={currentSubdiv}\r\n              showPrototypes={showPrototypes}\r\n              showMagAndPhase={showMagAndPhase}\r\n              userPcvs={userPcvs}\r\n              midiDevNotesDftCoeffs={midiDevNotesDftCoeffs}\r\n              elemsWidth={elemsWidth}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Box>\r\n\r\n      <AppBar\r\n        position='fixed'\r\n        open={open}\r\n        color='secondary'\r\n        sx={{ top: 'auto', bottom: 0, maxHeight: '74px' }}\r\n      >\r\n        <Toolbar>\r\n          <Player\r\n            fileName={fileName}\r\n            currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              margin: '2% 5%',\r\n              maxWidth: '100px',\r\n              justifyContent: 'space-evenly',\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowPrototypes()}\r\n                    checked={showPrototypes}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={<Typography noWrap={true}>Show Prototypes</Typography>}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowMagAndPhase()}\r\n                    checked={showMagAndPhase}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography noWrap={true}>Show &mu; and &phi;</Typography>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Box>\r\n          <Box sx={{ minWidth: '20%', paddingRight: '3%', paddingLeft: '1%' }}>\r\n            <Typography>Plots size</Typography>\r\n            <Slider\r\n              ref={refSizeSlider}\r\n              min={20}\r\n              max={100}\r\n              defaultValue={100}\r\n              aria-label='Plots size'\r\n              valueLabelDisplay='auto'\r\n              onChangeCommitted={(event, value) => {\r\n                console.log(refSizeSlider);\r\n                setAccordionWidth(value);\r\n              }}\r\n              marks={[\r\n                { value: 20, label: '20%' },\r\n                { value: 100, label: '100%' },\r\n              ]}\r\n            />\r\n          </Box>\r\n          <Box sx={{ minWidth: 120 }}>\r\n            <FormControl size='small' variant='standard' fullWidth>\r\n              <InputLabel>Layout</InputLabel>\r\n              <Select\r\n                value={elemsForEachRow}\r\n                label='Layout'\r\n                onChange={(event) => {\r\n                  setAccordionWidth(100);\r\n                  setElemsForEachRow(event.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value={6}>1x6</MenuItem>\r\n                <MenuItem value={3}>2x3</MenuItem>\r\n                <MenuItem value={2}>3x2</MenuItem>\r\n                <MenuItem value={1}>6x1</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Application;\r\n","import Navbar from './Navbar';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState, useEffect, useRef } from 'react';\r\n\r\nimport { setPlayerMidiData } from './Player';\r\nimport {\r\n  getComplementaryColours,\r\n  getRgbaMatrix,\r\n  getMidiFileDataObject,\r\n  getDftCoeffStatic,\r\n  getDftCoeffDynamic,\r\n} from './getDftMatrices';\r\nimport dft from './DFT';\r\nimport parse from './parser';\r\nimport { getRosePoints } from './roses';\r\n\r\nimport ResolutionSelector from './ResolutionSelector';\r\nimport PcvChipsBox from './PcvChipsBox';\r\n\r\n//Pages\r\nimport Home from './pages/Home';\r\nimport Theory from './pages/Theory';\r\nimport Analysis from './pages/Analysis';\r\n\r\n//Test\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nconst drawerWidth = 400;\r\n\r\n//Song variables\r\nlet currentSongBPM = 80;\r\nlet currentSongMidiData;\r\nlet fileName;\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: `-${drawerWidth}px`,\r\n    ...(open && {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    }),\r\n  })\r\n);\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nfunction App() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [file, setFile] = useState('');\r\n  //State: contains the color data of the wavescape of a given coeff (Array(6) one for coeff)\r\n  const [wavescapesData, setWavescapesData] = useState([]);\r\n\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [coeffTracesData, setCoeffTracesData] = useState([]);\r\n  const [currentSubdiv, setCurrentSubdiv] = useState(0);\r\n\r\n  //State: inputs\r\n  const [resolutionMode, setResolutionMode] = useState({\r\n    noteResolutionValue: 1,\r\n    seconds: 1.5,\r\n    useSeconds: false,\r\n  });\r\n  const [wavescapeResolution, setWavescapeResolution] = useState(10);\r\n  const [circleResolution, setCircleResolution] = useState(1);\r\n\r\n  const [userPcvs, setUserPcvs] = useState([]);\r\n  const pcvTextRef = useRef(null);\r\n\r\n  //State: error states in input\r\n  const [isInputPcvInvalid, setIsInputPcvInvalid] = useState(false);\r\n\r\n  //State: in analysis page flag\r\n  const [inAnalysisPage, setInAnalysisPage] = useState(false);\r\n\r\n  //State: usable/used roses for pcvs' labels\r\n  const [rosesMat, setRosesMat] = useState([]);\r\n\r\n  function handleSubmitPitchClass(input) {\r\n    //In order not to refresh the page (default behaviuor)\r\n    let parsedInput;\r\n    let userPcvObjects = [];\r\n\r\n    try {\r\n      parsedInput = parse(input);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setIsInputPcvInvalid(true);\r\n      return;\r\n    }\r\n\r\n    parsedInput.forEach((input) =>\r\n      userPcvObjects.push({\r\n        label: `(${input})`,\r\n        isDisabled: false,\r\n        coeffs: dft(input, true, true, false),\r\n        rosePoints: [],\r\n        n: -1,\r\n        d: -1,\r\n      })\r\n    );\r\n\r\n    //Check if we are adding an input already inserted\r\n    let labels = userPcvs.map((pcvData) => pcvData.label);\r\n    labels.forEach((label) => {\r\n      userPcvObjects = userPcvObjects.filter(\r\n        (pcvObj) => pcvObj.label !== label\r\n      );\r\n    });\r\n\r\n    //Assing an unused rose to each pcv\r\n    userPcvObjects.forEach((pcvData) => {\r\n      let found = false;\r\n\r\n      for (let i = 0; i < rosesMat.length && !found; i++) {\r\n        for (let j = 0; j < rosesMat[i].length && !found; j++) {\r\n          if (rosesMat[i][j].usable && !rosesMat[i][j].used) {\r\n            found = true;\r\n            pcvData.rosePoints = rosesMat[i][j].points;\r\n            rosesMat[i][j].used = true;\r\n            pcvData.n = rosesMat[i][j].n;\r\n            pcvData.d = rosesMat[i][j].d;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    setUserPcvs([...userPcvs, ...userPcvObjects]);\r\n  }\r\n\r\n  //MIDI parsing on file change\r\n  useEffect(() => {\r\n    let input = document.getElementById('file').files[0];\r\n\r\n    input ? (fileName = input.name) : (fileName = '');\r\n\r\n    if (input) {\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(input);\r\n      fileReader.onload = (loadedFile) => {\r\n        let { midiData, midiBpm } = getMidiFileDataObject(\r\n          loadedFile.target.result\r\n        );\r\n        currentSongBPM = midiBpm;\r\n        currentSongMidiData = midiData;\r\n\r\n        //Wavescapes static analysis\r\n        let subdivsNumberStatic = 50;\r\n        let staticResolution =\r\n          currentSongMidiData.duration / subdivsNumberStatic;\r\n        setWavescapeResolution(staticResolution);\r\n\r\n        setWavescapesData(\r\n          getRgbaMatrix(\r\n            getDftCoeffStatic(currentSongMidiData, staticResolution)\r\n          )\r\n        );\r\n\r\n        //Circles dynamic analysis\r\n        let { tracesData, resolution } = getDftCoeffDynamic(\r\n          midiData,\r\n          resolutionMode,\r\n          currentSongBPM\r\n        );\r\n        setCircleResolution(resolution);\r\n        setCoeffTracesData(tracesData);\r\n        setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n\r\n        console.log(midiData);\r\n      };\r\n    }\r\n  }, [file]);\r\n\r\n  //Init roseMatrix and user pcv examples\r\n  useEffect(() => {\r\n    let initMatrix = [];\r\n    for (let i = 1; i <= 7; i++) {\r\n      let temp = [];\r\n      for (let j = 1; j <= 7; j++) {\r\n        let rose = { n: j, d: i, used: false, usable: true, points: [] };\r\n        if (j % i === 0 && i !== 1) rose.usable = false;\r\n\r\n        if (rose.usable === true) rose.points = getRosePoints(j, i);\r\n\r\n        temp.push(rose);\r\n      }\r\n      initMatrix.push(temp);\r\n    }\r\n\r\n    //(0,0) or n=1, d=1 can't be used since it is a simple circle\r\n    initMatrix[0][0].usable = false;\r\n\r\n    setRosesMat(initMatrix);\r\n\r\n    let examplePcvs = [\r\n      [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], // C\r\n      [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], // Cmin\r\n      [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], // Cdim\r\n    ];\r\n\r\n    let exPcvObjects = examplePcvs.map((pcv) => {\r\n      return {\r\n        label: `(${pcv.toString()})`,\r\n        isDisabled: false,\r\n        coeffs: dft(pcv, true, true, false),\r\n        rosePoints: [],\r\n        n: -1,\r\n        d: -1,\r\n      };\r\n    });\r\n\r\n    //Assing an unused rose to each pcv\r\n    exPcvObjects.forEach((pcvData) => {\r\n      let found = false;\r\n\r\n      for (let i = 0; i < initMatrix.length && !found; i++) {\r\n        for (let j = 0; j < initMatrix[i].length && !found; j++) {\r\n          if (initMatrix[i][j].usable && !initMatrix[i][j].used) {\r\n            found = true;\r\n            pcvData.rosePoints = initMatrix[i][j].points;\r\n            initMatrix[i][j].used = true;\r\n            pcvData.n = initMatrix[i][j].n;\r\n            pcvData.d = initMatrix[i][j].d;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    exPcvObjects[1].isDisabled = true;\r\n    exPcvObjects[2].isDisabled = true;\r\n\r\n    setUserPcvs(exPcvObjects);\r\n  }, []);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function retriggerAnalysis() {\r\n    //Only if there is midi data, retrigger analysis\r\n    if (currentSongMidiData == null) {\r\n      return;\r\n    }\r\n\r\n    //Circles dynamic analysis\r\n    let { tracesData, resolution } = getDftCoeffDynamic(\r\n      currentSongMidiData,\r\n      resolutionMode,\r\n      currentSongBPM\r\n    );\r\n    setCoeffTracesData(tracesData);\r\n    setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <CssBaseline />\r\n        <Navbar\r\n          open={open}\r\n          setOpen={setOpen}\r\n          setInAnalysisPage={setInAnalysisPage}\r\n          inAnalysisPage={inAnalysisPage}\r\n        />\r\n        <Box sx={{ display: 'flex' }}>\r\n          <Drawer\r\n            sx={{\r\n              width: drawerWidth,\r\n              flexShrink: 0,\r\n              '& .MuiDrawer-paper': {\r\n                width: drawerWidth,\r\n                boxSizing: 'border-box',\r\n              },\r\n            }}\r\n            variant='persistent'\r\n            anchor='left'\r\n            open={open}\r\n          >\r\n            <DrawerHeader>\r\n              <Typography noWrap={true} sx={{ flexGrow: '2' }}>\r\n                {file ? fileName : 'Upload a midi file'}\r\n              </Typography>\r\n              <label htmlFor='file'>\r\n                <input\r\n                  style={{ display: 'none' }}\r\n                  type='file'\r\n                  id='file'\r\n                  name='file'\r\n                  value={file}\r\n                  onChange={(e) => setFile(e.target.value)}\r\n                />\r\n                <Button variant='contained' color='primary' component='span'>\r\n                  Upload\r\n                </Button>\r\n              </label>\r\n\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === 'ltr' ? (\r\n                  <ChevronLeftIcon />\r\n                ) : (\r\n                  <ChevronRightIcon />\r\n                )}\r\n              </IconButton>\r\n            </DrawerHeader>\r\n            <Divider />\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: '2% 5%',\r\n                width: '90%',\r\n                justifyContent: 'space-evenly',\r\n              }}\r\n            >\r\n              <ResolutionSelector\r\n                setResolutionMode={setResolutionMode}\r\n                resolutionMode={resolutionMode}\r\n              />\r\n              <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={retriggerAnalysis}\r\n                sx={{ width: '10%' }}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Box>\r\n            <Divider />\r\n            <Box\r\n              sx={{\r\n                flexDirection: 'column',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: '3% 5%',\r\n                height: '50%',\r\n                justifyContent: 'space-evenly',\r\n              }}\r\n              component='form'\r\n              noValidate\r\n              autoComplete='off'\r\n            >\r\n              <TextField\r\n                sx={{ minHeight: '5rem' }}\r\n                fullWidth\r\n                label={'margin=\"dense\"'}\r\n                error={isInputPcvInvalid}\r\n                helperText={isInputPcvInvalid && 'Invalid input'}\r\n                id='outlined-basic'\r\n                label='Pitch class vector'\r\n                variant='outlined'\r\n                onKeyPress={(event) => {\r\n                  if (event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    handleSubmitPitchClass(pcvTextRef.current.value);\r\n                    pcvTextRef.current.value = '';\r\n                  }\r\n                }}\r\n                onChange={() => {\r\n                  setIsInputPcvInvalid(false);\r\n                }}\r\n                inputRef={pcvTextRef}\r\n              />\r\n              <PcvChipsBox\r\n                userPcvs={userPcvs}\r\n                setUserPcvs={setUserPcvs}\r\n                rosesMat={rosesMat}\r\n              />\r\n            </Box>\r\n          </Drawer>\r\n          <Main open={open}>\r\n            <Switch>\r\n              <Route exact path='/' component={Home}></Route>\r\n              <Route exact path='/theory' component={Theory}></Route>\r\n              <Route\r\n                exact\r\n                path='/analysis'\r\n                render={() => (\r\n                  <Analysis\r\n                    fileName={fileName}\r\n                    setInAnalysisPage={setInAnalysisPage}\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    wavescapesData={wavescapesData}\r\n                    coeffTracesData={coeffTracesData}\r\n                    currentSubdiv={currentSubdiv}\r\n                    currentWavescapeSubdiv={Math.floor(\r\n                      (currentSubdiv * circleResolution) / wavescapeResolution\r\n                    )}\r\n                    userPcvs={userPcvs}\r\n                  />\r\n                )}\r\n              ></Route>\r\n            </Switch>\r\n          </Main>\r\n        </Box>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function parse(input) {\r\n  let pcvs = [];\r\n  //Vectorial notation, distribution -> real numbers\r\n  const openVect = '(';\r\n  const closeVect = ')';\r\n  //Set notation, integers\r\n  const openSet = '{';\r\n  const closeSet = '}';\r\n  //Number divider\r\n  const divider = ',';\r\n\r\n  let isGroup = false;\r\n  let isSet = false;\r\n\r\n  for (let i = 0; i < input.length; i++) {\r\n    if (input[i] === openSet || input[i] === openVect) {\r\n      isGroup = true;\r\n      if (input[i] === openSet) isSet = true;\r\n    }\r\n\r\n    if (isGroup) {\r\n      let stringGroup = [];\r\n      //Slice the current group\r\n      for (\r\n        let j = i + 1;\r\n        input[j] !== closeSet && input[j] !== closeVect;\r\n        j++\r\n      ) {\r\n        //Check if there is an invalid char in the group\r\n        if (input[j] !== ',' && input[j] !== '.' && isNaN(parseFloat(input[j])))\r\n          throw new Error('Found NaN');\r\n        stringGroup.push(input[j]);\r\n      }\r\n\r\n      stringGroup = stringGroup.join('');\r\n\r\n      //Check if the empty string\r\n      if (stringGroup === '') throw new Error('Empty input');\r\n\r\n      let numeralInput = [];\r\n      let count = 0;\r\n      for (let j = 0; j < stringGroup.length; j++) {\r\n        if (stringGroup[j] === divider) {\r\n          let num = stringGroup.slice(j - count, j);\r\n          //if num.length === 0 => two consecutive comas, invalid input\r\n          if (num.length === 0) throw new Error('Two consecutive comas');\r\n\r\n          numeralInput.push(+num);\r\n          count = -1;\r\n        }\r\n        count++;\r\n      }\r\n      //Last element not cover by the for cycle\r\n      let lastNum = stringGroup.slice(\r\n        stringGroup.length - count,\r\n        stringGroup.length\r\n      );\r\n      //Check if there is a last number\r\n      if (lastNum.length === 0) {\r\n        throw new Error('Missing last number');\r\n      }\r\n      numeralInput.push(+lastNum);\r\n\r\n      if (isSet) {\r\n        let bin = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (let i = 0; i < numeralInput.length; i++) {\r\n          //Set notation: check if num is valid range [0,11]\r\n          if (numeralInput[i] < 0 || numeralInput[i] >= 12) {\r\n            throw new Error('Set notation: out of range');\r\n          }\r\n\r\n          bin[numeralInput[i]] += 1;\r\n        }\r\n        pcvs.push(bin);\r\n      } else {\r\n        //If is in vectorial form, check if there are 12 elements\r\n        if (numeralInput.length !== 12) {\r\n          throw new Error('Vectorial notation: missing elements');\r\n        }\r\n        pcvs.push(numeralInput);\r\n      }\r\n\r\n      isGroup = false;\r\n      isSet = false;\r\n      i += count;\r\n    }\r\n  }\r\n\r\n  if (pcvs.length === 0) throw new Error('Invalid input');\r\n\r\n  return pcvs;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst customTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#323232',\r\n    },\r\n    secondary: {\r\n      main: '#fefefe',\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={customTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}