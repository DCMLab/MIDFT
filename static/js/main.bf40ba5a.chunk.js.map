{"version":3,"sources":["Navbar.js","pages/Home.js","Wavescape.js","prototypesData.js","colorMapping.js","Circle.js","Player.js","DFT.js","getDftMatrices.js","parser.js","pages/Visualization.js","LiveCircle.js","pages/Live.js","pages/Keyboard.js","WavescapeModule.js","ResolutionSelector.js","CoefficientsModule.js","pages/Application.js","App.js","index.js"],"names":["Navbar","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","ButtonGroup","Button","Link","to","color","Home","Wavescape","wavescapeMatrix","canvasRef","useRef","width","height","useEffect","canvas","current","ctx","getContext","devicePixelRatio","scale","style","baseSubdivision","margins","innerSize","length","clearRect","setTransform","ticks","i","j","beginPath","moveTo","x","y","lineTo","fillStyle","fill","drawWavescape","innerWidth","innerHeight","marginLeft","marginTop","unit","mat","temp","push","computeTicks","ref","prototypesData","label","contToDiscRGB","d3","domain","range","pixelColor","distance","r","g","b","angle","Math","atan2","PI","math","a","getRbgaFromComplex","complex","polarComplex","toPolar","phi","mod","ris","gradient","slice","Circle","protoDataCoeff","traceDataCoeff","userPcvsCoeff","currentSubdiv","performanceCoeff","circleRadius","marksRadiusRatio","radius","floor","image","createImageData","data","sqrt","index","rgba","putImageData","getImageData","circleMark","pcvData","radiusScaleWidth","id","opacity","mark","innerRadius","outerRadius","startAngle","endAngle","transform","fillOpacity","d","zIndex","map","pcv","scaleRatio","labelName","subSup","isSub","includes","dxOffset","dyOffset","sign","textAnchor","dx","dy","fontSize","baselineShift","protoCircleMark","highlight","opacityArray","reverse","coeff","highlightSubdiv","setPlayerMidiData","midiData","resolution","setCurrentSubdiv","Tone","cancel","stop","partNotes","tracks","forEach","track","notes","note","subdiv","time","sampler","triggerAttackRelease","name","duration","velocity","start","urls","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","release","baseUrl","toDestination","Player","IconButton","onClick","console","log","size","children","pause","state","resume","volume","value","dft","normalize","round","polar","N","coeffs","k","n","norm","re","im","sumAndNormalize","sum","Pcv","this","C","Cs","D","Ds","E","F","Fs","G","Gs","A","As","B","targetPitch","getDftCoeffDynamic","resolutionMode","currentSongBPM","noteResolutionValue","seconds","useSeconds","isNaN","tracksSubdivision","filter","instrument","percussion","getSubdivision","pcvSubdivision","pitch","addNoteDuration","dftCoeffsSubdivision","getPcvAsArray","dftCoeffsMatrix","traces","firstRow","tracesData","getRgbaMatrix","matrixHeight","rowsWidth","wndLenUnits","cursor","windowed","rgbaMatrices","matrix","subdivision","wndLen","isValidNote","noteAndDuration","parse","input","pcvs","isGroup","isSet","stringGroup","join","numeralInput","count","num","bin","Visualization","useState","selectedProtoPitchClasses","setSelectedProtoPitchClasses","showPrototypes","setShowPrototypes","wavescapesData","setWavescapesData","setTracesData","file","setFile","userPcvs","setUserPcvs","setResolution","resolutionSliderRef","document","getElementById","files","fileReader","FileReader","readAsArrayBuffer","onload","res","target","result","dftCoeff","midiFile","Midi","getDftCoeffFromMidi","onSubmit","e","parsedInput","preventDefault","error","dftCoeffsInput","subdivUserPcvs","htmlFor","type","autoComplete","placeholder","onChange","showing","handleShowPrototypes","checked","defaultValue","min","max","step","LiveCircle","deltaTime","frameStamps","setFrameStamps","currentPoint","setCurrentPoint","nextPoint","setNextPoint","circleImageData","setCircleImageData","intervalID","currentFrame","margin","imageData","clearInterval","tempNextPoint","tempCurrentPoint","middlePoint","p1","p2","t","segment","globalCompositeOperation","strokeStyle","lineWidth","save","translate","stroke","restore","nextFrame","draw","frameCap","Live","multiRes","setMultiRes","setSeconds","setUseSeconds","resolutionTextRef","setDeltaTime","tempos","header","tempo","bpm","dftCoeffsLinear","getDftCoeffFromMidiLinear","event","parseFloat","defaultChecked","Keyboard","currentNotesDftCoeffs","setCurrentNotesDftCoeffs","currentNotes","handleInput","command","toNote","triggerAttack","triggerRelease","currentNote","playedNotes","dftCoeffs","computeDftCoeffs","updateDevices","port","manufacturer","navigator","requestMIDIAccess","then","midiAccess","onstatechange","inputs","onmidimessage","WavescapeModule","showModule","setShowModule","Switch","Collapse","in","ResolutionSelector","setResolutionMode","FormControl","FormLabel","RadioGroup","row","newResolutionMode","FormControlLabel","control","Radio","TextField","inputRef","CoefficientsModule","currentSongMidiData","coeffTracesData","midiDevNotesDftCoeffs","Application","setCoeffTracesData","pcvTextRef","setMidiDevNotesDftCoeffs","loadedFile","binMidiFile","midiBpm","nonPercussiveTracks","getMidiFileDataObject","staticResolution","getDftCoeffStatic","Container","FormGroup","m","noValidate","onKeyPress","key","handleSubmitPitchClass","display","Divider","App","CssBaseline","basename","process","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bf40ba5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Typography variant='h3' component='div' sx={{ flexGrow: 1 }}>\r\n            Mi_DFT\r\n          </Typography>\r\n          <ButtonGroup variant='outlined' aria-label='outlined button group'>\r\n            <Button component={Link} to='/' variant='contained' color='primary'>\r\n              Home\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/visualization'\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Wavescape\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/live'\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Live\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/keyboard'\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Keyboard\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/analysis'\r\n              variant='contained'\r\n              color='primary'\r\n            >\r\n              Analysis\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <h1>Home - Theory and analysis</h1>\r\n      <p>\r\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Beatae,\r\n        architecto temporibus laboriosam, atque veniam quod provident minus eos\r\n        aspernatur ipsa ad nihil veritatis ea, eaque amet! Itaque cupiditate\r\n        laudantium neque voluptas necessitatibus quidem perspiciatis molestias\r\n        dolores possimus. Veritatis perferendis, quidem molestiae ipsa\r\n        reprehenderit aperiam harum iste obcaecati doloribus, recusandae\r\n        adipisci et saepe non qui illum ratione nemo amet voluptates dolore\r\n        exercitationem provident. Ea sed incidunt cum eum excepturi vitae\r\n        consequuntur eius quam earum? Repudiandae explicabo incidunt molestiae\r\n        animi. Quibusdam veniam rerum minima error, quos voluptas incidunt. Est\r\n        ex nesciunt ea id, dolor harum nemo quo quibusdam molestias dicta quae\r\n        modi inventore. Sit dicta iure voluptatum modi. Recusandae harum\r\n        blanditiis in dolore quasi officiis minus quos veritatis eveniet\r\n        corporis eaque odio esse deserunt dolorum quod qui tempore, asperiores\r\n        repellat numquam dolorem nobis! Provident soluta officiis temporibus\r\n        optio, sapiente aspernatur accusantium ipsam velit necessitatibus natus\r\n        placeat obcaecati consectetur quia. Reiciendis ipsum tempora non, dicta\r\n        quod nesciunt. Magni, harum laudantium inventore omnis fugiat quia\r\n        explicabo temporibus itaque officiis minus autem cumque! Necessitatibus\r\n        dolorum aliquid omnis, sed ullam voluptatem reiciendis voluptate. Ad\r\n        minima voluptatem praesentium totam eum consequuntur reiciendis quae\r\n        soluta ipsam cupiditate? Officia labore modi illum libero error ad fugit\r\n        sit nostrum, totam esse magnam doloremque repellendus. Similique, iure\r\n        sed voluptatem quia molestiae aut incidunt facilis sequi! Veniam\r\n        cupiditate optio magnam officiis cumque beatae laudantium, quas natus at\r\n        aliquid nostrum, voluptatem aliquam quia doloremque, fugit fuga facere\r\n        esse. Nostrum numquam nam, praesentium iusto accusamus quasi delectus\r\n        rem vero laborum, optio blanditiis commodi id quidem beatae in.\r\n        Laudantium fugit aspernatur impedit quam maiores officiis! Odit, est\r\n        quae obcaecati repudiandae modi aliquid corporis natus dolores harum\r\n        porro perferendis magni nam. Aperiam provident accusamus soluta optio\r\n        eaque incidunt, quos modi nulla eligendi quo unde ipsa. Maxime\r\n        distinctio minus beatae consequuntur assumenda ab vitae pariatur.\r\n        Commodi maiores eius esse totam accusantium molestiae accusamus quas\r\n        fugiat placeat quaerat voluptate corrupti architecto sapiente reiciendis\r\n        obcaecati molestias, at tempore quisquam! Quam ratione aliquid quo illo\r\n        delectus eaque quae reiciendis dicta corporis obcaecati, nesciunt\r\n        veritatis molestiae impedit ut mollitia nam quisquam in aut quia nemo.\r\n        Ducimus nulla assumenda numquam debitis recusandae dicta quam amet\r\n        dolores, reprehenderit reiciendis ipsum sapiente sit alias obcaecati\r\n        praesentium consequatur ipsa natus iste distinctio officia vel fugiat\r\n        dolore delectus. Molestiae vero omnis blanditiis perspiciatis quibusdam,\r\n        ipsam quo fugiat sunt pariatur minima aperiam ratione, unde distinctio\r\n        porro incidunt praesentium repellendus aliquam autem dolores natus. Ab\r\n        corporis earum veniam corrupti neque aperiam! Perferendis, eligendi,\r\n        praesentium totam quia excepturi exercitationem dolores debitis cumque\r\n        optio consectetur et suscipit cupiditate fuga nam commodi minima\r\n        molestiae odit consequatur id enim aut quisquam eum. Modi dolores fuga\r\n        neque praesentium repellendus, aspernatur ea quod? Corporis quaerat,\r\n        nobis culpa quod nesciunt eum distinctio itaque cumque molestias\r\n        impedit, deleniti delectus. Eum repellat architecto velit delectus eius\r\n        praesentium, temporibus a nobis ad unde quaerat minus illum eos culpa\r\n        earum possimus? Doloribus nostrum, impedit aut, officia amet at fuga\r\n        velit minima tempora, harum molestiae non nisi quia maxime? Odio quo\r\n        reiciendis nostrum repudiandae, alias delectus aut ullam quisquam. Eius?\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import { useRef, useEffect } from 'react';\r\n\r\nexport const Wavescape = ({ wavescapeMatrix }) => {\r\n  const canvasRef = useRef(null);\r\n  let width = 400;\r\n  let height = 400;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // increase the actual size of our canvas\r\n    canvas.width = width * devicePixelRatio;\r\n    canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    canvas.style.width = width + 'px';\r\n    canvas.style.height = height + 'px';\r\n\r\n    let margins = [0, 0];\r\n    let innerSize = [canvas.width - margins[0], canvas.height - margins[1]];\r\n    let baseSubdivision;\r\n\r\n    if (wavescapeMatrix) {\r\n      baseSubdivision = wavescapeMatrix[0].length;\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      ctx.setTransform(1, 0, 0, -1, 0, ctx.canvas.height);\r\n      let ticks = computeTicks(\r\n        innerSize[0],\r\n        innerSize[1],\r\n        baseSubdivision,\r\n        margins[0],\r\n        margins[1]\r\n      );\r\n\r\n      drawWavescape(ticks, ctx, wavescapeMatrix);\r\n    }\r\n  }, [wavescapeMatrix, width, height]);\r\n\r\n  return <canvas width={width} height={height} ref={canvasRef}></canvas>;\r\n};\r\n\r\nfunction computeTicks(\r\n  innerWidth,\r\n  innerHeight,\r\n  baseSubdivision,\r\n  marginLeft,\r\n  marginTop\r\n) {\r\n  //Actually, it is a square matrix\r\n  let unit = innerWidth / baseSubdivision;\r\n  let mat = [];\r\n\r\n  for (let i = 0; i < baseSubdivision + 1; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < baseSubdivision + 1; j++) {\r\n      if (i <= j)\r\n        temp.push({\r\n          x: (j - i) * unit + (i * unit) / 2 + marginLeft,\r\n          y: i * unit + marginTop,\r\n        });\r\n    }\r\n    mat.push(temp);\r\n  }\r\n\r\n  return mat;\r\n}\r\n\r\nfunction drawWavescape(ticks, ctx, wavescapeMatrix) {\r\n  for (let i = 0; i < ticks.length - 1; i++) {\r\n    for (let j = 0; j < ticks[i].length - 1; j++) {\r\n      if (i === 0) {\r\n        //first row composed by triangles\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      } else {\r\n        //other rows composed by diamonds\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i - 1][j + 1].x, ticks[i - 1][j + 1].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      }\r\n    }\r\n  }\r\n}\r\n","export const prototypesData = [\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'C♯', x: 0.866, y: -0.5 },\r\n    { label: 'D', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'E', x: -0.5, y: -0.866 },\r\n    { label: 'F', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'G', x: -0.866, y: 0.5 },\r\n    { label: 'A♭', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'B♭', x: 0.5, y: 0.866 },\r\n    { label: 'B', x: 0.866, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'T_0', x: 1, y: 0 },\r\n    { label: 'T_1', x: 0.5, y: -0.866 },\r\n    { label: 'T_2', x: -0.5, y: -0.866 },\r\n    { label: 'T_3', x: -1, y: 0 },\r\n    { label: 'T_4', x: -0.5, y: 0.866 },\r\n    { label: 'T_5', x: 0.5, y: 0.866 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C+', x: 1, y: 0 },\r\n    { label: 'C♯+', x: 0, y: -1 },\r\n    { label: 'D+', x: -1, y: 0 },\r\n    { label: 'D♯+', x: 0, y: 1 },\r\n    { label: 'H_0,3', x: 0.5, y: 0.5 },\r\n    { label: 'H_0,1', x: 0.5, y: -0.5 },\r\n    { label: 'H_1,2', x: -0.5, y: -0.5 },\r\n    { label: 'H_2,3', x: -0.5, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C^o7', x: 1, y: 0 },\r\n    { label: 'C♯^o7', x: -0.5, y: -0.866 },\r\n    { label: 'D^o7', x: -0.5, y: 0.866 },\r\n    { label: 'O_0,2', x: 0.25, y: 0.433 },\r\n    { label: 'O_0,1', x: 0.25, y: -0.433 },\r\n    { label: 'O_1,2', x: -0.5, y: 0 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'F', x: 0.866, y: -0.5 },\r\n    { label: 'B♭', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'A♭', x: -0.5, y: -0.866 },\r\n    { label: 'C♯', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'B', x: -0.866, y: 0.5 },\r\n    { label: 'E', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'D', x: 0.5, y: 0.866 },\r\n    { label: 'G', x: 0.866, y: 0.5 },\r\n    { label: '♮', x: 0.267, y: 0.462 },\r\n    { label: '5♭', x: 0, y: -0.533 },\r\n    { label: '2♯', x: -0.267, y: 0.462 },\r\n    { label: '3♭', x: 0.462, y: -0.267 },\r\n    { label: '4♯', x: -0.533, y: 0 },\r\n    { label: '♭', x: 0.462, y: 0.267 },\r\n    { label: '6♯', x: -0.267, y: -0.462 },\r\n    { label: '♯', x: 0, y: 0.533 },\r\n    { label: '4♭', x: 0.267, y: -0.462 },\r\n    { label: '3♯', x: -0.462, y: 0.267 },\r\n    { label: '2♭', x: 0.533, y: 0 },\r\n    { label: '5♯', x: -0.462, y: -0.267 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'WT_1', x: 1, y: 0 },\r\n    { label: 'WT_2', x: -1, y: 0 },\r\n  ],\r\n];\r\n","import * as d3 from 'd3';\r\nimport * as math from 'mathjs';\r\n\r\n//Convert rgb values from [0,1] to [0,255]\r\nconst contToDiscRGB = d3\r\n  .scaleQuantize()\r\n  .domain([0, 1])\r\n  .range(d3.range(0, 255, 1));\r\n\r\n//Generate the color space using the color mapping suggested in the paper\r\nexport const gradient = (angle) => {\r\n  let r, g, b;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\n//Generate the color space using the color mapping suggested in the paper\r\nexport const pixelColor = (x, y, distance) => {\r\n  let r, g, b, a;\r\n  //atan2 out in [-pi, pi]\r\n  let angle = Math.atan2(y, x);\r\n  angle = -angle;\r\n  //we need it in [0, 2pi]\r\n  if (angle < 0) angle += 2 * Math.PI;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n  a = contToDiscRGB(distance);\r\n\r\n  return { r, g, b, a };\r\n};\r\n\r\nexport function getRbgaFromComplex(complex) {\r\n  let polarComplex = complex.toPolar();\r\n  let angle = polarComplex.phi; // phi from [-pi, pi], but color mapping defined in [0,2pi]\r\n  let mod = polarComplex.r;\r\n\r\n  //negative angle mapped to their positive representation\r\n  if (angle < 0) angle += 2 * math.pi;\r\n\r\n  let ris = gradient(angle).slice(3, -1);\r\n\r\n  return `rgba${ris}, ${mod})`;\r\n}\r\n","import * as d3 from 'd3';\r\nimport { useRef, useEffect } from 'react';\r\nimport { pixelColor } from './colorMapping';\r\n\r\n//Minus before every y coordinate due to the fact that svg has positive y\r\n//downward, meanwhile cartesian plane has positive y upward\r\n\r\nfunction Circle({\r\n  protoDataCoeff,\r\n  traceDataCoeff,\r\n  userPcvsCoeff,\r\n  currentSubdiv,\r\n  performanceCoeff,\r\n}) {\r\n  const canvasRef = useRef(null);\r\n  const width = 440;\r\n  const height = width;\r\n\r\n  const margin = 40;\r\n  const innerWidth = width - margin;\r\n  const circleRadius = width / 2 - margin;\r\n\r\n  let marksRadiusRatio = 0.01;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let radius = Math.floor(circleRadius * devicePixelRatio);\r\n    let image = ctx.createImageData(2 * radius, 2 * radius);\r\n    let data = image.data;\r\n\r\n    // increase the actual size of our canvas\r\n    canvas.width = width * devicePixelRatio;\r\n    canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    canvas.style.width = width + 'px';\r\n    canvas.style.height = height + 'px';\r\n\r\n    for (let x = -radius; x < radius; x++) {\r\n      for (let y = -radius; y < radius; y++) {\r\n        let distance = Math.sqrt(x * x + y * y);\r\n\r\n        if (distance > radius) {\r\n          // skip all (x,y) coordinates that are outside of the circle\r\n          continue;\r\n        }\r\n        // Figure out the starting index of this pixel in the image data array.\r\n        let rowLength = 2 * radius;\r\n        let adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let pixelWidth = 4; // each pixel requires 4 slots in the data array\r\n        let index = (adjustedX + adjustedY * rowLength) * pixelWidth;\r\n        let rgba = pixelColor(x, y, distance / radius);\r\n        data[index] = rgba.r;\r\n        data[index + 1] = rgba.g;\r\n        data[index + 2] = rgba.b;\r\n        data[index + 3] = rgba.a;\r\n      }\r\n    }\r\n    ctx.putImageData(image, 0, 0);\r\n  }, [width, height, circleRadius]);\r\n\r\n  useEffect(() => {\r\n    //Workaround for chrome bug on canvas overlay in foreignObj SVG\r\n    canvasRef.current.getContext('2d').getImageData(0, 0, 1, 1);\r\n  }, []);\r\n\r\n  const circleMark = (pcvData, radiusScaleWidth, color, id, opacity = 1) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    return (\r\n      <path\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        fill={color}\r\n        fillOpacity={opacity}\r\n        key={id}\r\n        d={mark()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const protoCircleMark = (pcvData, id) => {\r\n    let scaleRatio = 0.02;\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius((scaleRatio * width) / 2)\r\n      .outerRadius(((scaleRatio + 0.01) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    //Check for sub/superscript\r\n    let labelName = '';\r\n    let subSup = '';\r\n    let isSub = false;\r\n    if (pcvData.label.includes('_') || pcvData.label.includes('^')) {\r\n      for (let i = 0; i < pcvData.label.length; i++) {\r\n        if (pcvData.label[i] === '_') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n          isSub = true;\r\n        }\r\n        if (pcvData.label[i] === '^') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n        }\r\n      }\r\n    } else {\r\n      labelName = pcvData.label;\r\n    }\r\n\r\n    //Computation of label offset\r\n    let dxOffset = 0,\r\n      dyOffset = 5;\r\n\r\n    if (Math.sign(pcvData.x) === 1) dxOffset = 20;\r\n    else if (Math.sign(pcvData.x) === -1) dxOffset = -20;\r\n\r\n    if (Math.sign(-pcvData.y) === 1) dyOffset = 25;\r\n    else if (Math.sign(-pcvData.y) === -1) dyOffset = -8;\r\n\r\n    if (pcvData.x === 0 && pcvData.y === 0) {\r\n      dxOffset = 15;\r\n      dyOffset = 5;\r\n    }\r\n\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        key={`p.${id}`}\r\n      >\r\n        <path fill={'grey'} key={id} d={mark()}></path>\r\n        <text textAnchor='middle' dx={dxOffset} dy={dyOffset} fontSize='20px'>\r\n          {labelName}\r\n          {isSub ? (\r\n            <tspan fontSize={15} baselineShift='sub'>\r\n              {subSup}\r\n            </tspan>\r\n          ) : (\r\n            <tspan fontSize={15} baselineShift='super'>\r\n              {subSup}\r\n            </tspan>\r\n          )}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const drawBorder = () => {\r\n    return (\r\n      <path\r\n        fill={'azure'}\r\n        d={d3\r\n          .arc()\r\n          .innerRadius(circleRadius - 1)\r\n          .outerRadius(circleRadius + 1)\r\n          .startAngle(0)\r\n          .endAngle(2 * Math.PI)()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const highlightSubdiv = (radiusScaleWidth) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    const highlight = d3\r\n      .arc()\r\n      .innerRadius((radiusScaleWidth * width) / 2)\r\n      .outerRadius(((radiusScaleWidth + 0.005) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    let highlightedTrace = [];\r\n    let length = 50;\r\n    let opacityArray = [];\r\n\r\n    opacityArray.push(1);\r\n    for (let i = 1; i < length; i++) {\r\n      opacityArray.push(opacityArray[i - 1] * 0.8);\r\n    }\r\n\r\n    if (currentSubdiv < length)\r\n      highlightedTrace = traceDataCoeff.slice(0, currentSubdiv + 1);\r\n    else\r\n      highlightedTrace = traceDataCoeff.slice(\r\n        currentSubdiv - length,\r\n        currentSubdiv\r\n      );\r\n\r\n    highlightedTrace = highlightedTrace.reverse();\r\n\r\n    return highlightedTrace.map((coeff, i) => {\r\n      return (\r\n        <g key={`g.${i}`}>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'white'}\r\n            key={i}\r\n            fillOpacity={opacityArray[i]}\r\n            d={mark()}\r\n          ></path>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'black'}\r\n            fillOpacity={opacityArray[i]}\r\n            key={`t.${i}`}\r\n            d={highlight()}\r\n          ></path>\r\n        </g>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <svg width={width} height={height}>\r\n        <foreignObject x={margin} y={margin} width={width} height={height}>\r\n          <canvas\r\n            style={{ zIndex: '-1' }}\r\n            width={width}\r\n            height={height}\r\n            ref={canvasRef}\r\n          />\r\n        </foreignObject>\r\n        <g transform={`translate(${width / 2},${width / 2})`}>\r\n          {drawBorder()}\r\n          {protoDataCoeff\r\n            ? protoDataCoeff.map((pcv, i) => protoCircleMark(pcv, i))\r\n            : null}\r\n          {/* {traceDataCoeff\r\n            ? traceDataCoeff.map((pcv, i) =>\r\n                circleMark(pcv, marksRadiusRatio, 'black', i, 0.1)\r\n              )\r\n            : null} */}\r\n          {traceDataCoeff ? highlightSubdiv(marksRadiusRatio) : null}\r\n          {userPcvsCoeff\r\n            ? userPcvsCoeff.map((pcv, i) =>\r\n                circleMark(pcv, marksRadiusRatio, 'teal', i)\r\n              )\r\n            : null}\r\n          {circleMark(performanceCoeff, marksRadiusRatio * 2, 'teal')}\r\n        </g>\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n","import * as Tone from 'tone';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport PlayArrowRoundedIcon from '@mui/icons-material/PlayArrowRounded';\r\nimport PauseRoundedIcon from '@mui/icons-material/PauseRounded';\r\nimport StopRoundedIcon from '@mui/icons-material/StopRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport function setPlayerMidiData(midiData, resolution, setCurrentSubdiv) {\r\n  //Remove the scheduled previous song\r\n  Tone.Transport.cancel(0);\r\n  setCurrentSubdiv(0);\r\n  Tone.Transport.stop();\r\n\r\n  let partNotes = [];\r\n  midiData.tracks.forEach((track) =>\r\n    track.notes.forEach((note) => {\r\n      partNotes.push(note);\r\n    })\r\n  );\r\n\r\n  partNotes.forEach(\r\n    (note) => (note.subdiv = Math.floor(note.time / resolution))\r\n  );\r\n\r\n  const part = new Tone.Part(\r\n    (time, note) => {\r\n      sampler.triggerAttackRelease(\r\n        note.name,\r\n        note.duration,\r\n        time,\r\n        note.velocity\r\n      );\r\n      setCurrentSubdiv(note.subdiv);\r\n      //console.log(note.subdiv);\r\n    },\r\n    [...partNotes]\r\n  ).start(0);\r\n}\r\n\r\nconst sampler = new Tone.Sampler({\r\n  urls: {\r\n    A0: 'A0.mp3',\r\n    C1: 'C1.mp3',\r\n    'D#1': 'Ds1.mp3',\r\n    'F#1': 'Fs1.mp3',\r\n    A1: 'A1.mp3',\r\n    C2: 'C2.mp3',\r\n    'D#2': 'Ds2.mp3',\r\n    'F#2': 'Fs2.mp3',\r\n    A2: 'A2.mp3',\r\n    C3: 'C3.mp3',\r\n    'D#3': 'Ds3.mp3',\r\n    'F#3': 'Fs3.mp3',\r\n    A3: 'A3.mp3',\r\n    C4: 'C4.mp3',\r\n    'D#4': 'Ds4.mp3',\r\n    'F#4': 'Fs4.mp3',\r\n    A4: 'A4.mp3',\r\n    C5: 'C5.mp3',\r\n    'D#5': 'Ds5.mp3',\r\n    'F#5': 'Fs5.mp3',\r\n    A5: 'A5.mp3',\r\n    C6: 'C6.mp3',\r\n    'D#6': 'Ds6.mp3',\r\n    'F#6': 'Fs6.mp3',\r\n    A6: 'A6.mp3',\r\n    C7: 'C7.mp3',\r\n    'D#7': 'Ds7.mp3',\r\n    'F#7': 'Fs7.mp3',\r\n    A7: 'A7.mp3',\r\n    C8: 'C8.mp3',\r\n  },\r\n  release: 1,\r\n  baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n}).toDestination();\r\nsampler.volume.value = -20;\r\n\r\nexport default function Player() {\r\n  return (\r\n    <Box>\r\n      <IconButton\r\n        onClick={() => {\r\n          console.log('stop');\r\n          Tone.Transport.stop();\r\n        }}\r\n        size='large'\r\n        children={<StopRoundedIcon fontSize='large' />}\r\n      />\r\n      <IconButton\r\n        onClick={() => {\r\n          console.log('pause');\r\n          Tone.Transport.pause();\r\n        }}\r\n        size='large'\r\n        children={<PauseRoundedIcon fontSize='large' />}\r\n      />\r\n      <IconButton\r\n        onClick={() => {\r\n          console.log('play');\r\n          if (Tone.context.state !== 'running') {\r\n            console.log('state running');\r\n            Tone.context.resume();\r\n          }\r\n          Tone.Transport.start();\r\n        }}\r\n        size='large'\r\n        children={<PlayArrowRoundedIcon fontSize='large' />}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import * as math from 'mathjs';\r\n\r\n// Compute the DFT on the input pcv\r\nexport default function dft(\r\n  pcv,\r\n  normalize = true,\r\n  round = false,\r\n  polar = false\r\n) {\r\n  let N = pcv.length;\r\n\r\n  let coeffs = [];\r\n\r\n  for (let k = 0; k < N / 2 + 1; k++) {\r\n    let temp = 0;\r\n    for (let n = 0; n < N; n++) {\r\n      temp = math.add(\r\n        math.multiply(\r\n          pcv[n],\r\n          math.exp(math.multiply(math.i, (-2 * math.pi * k * n) / N))\r\n        ),\r\n        temp\r\n      );\r\n    }\r\n    coeffs.push(temp);\r\n  }\r\n\r\n  coeffs = coeffs.slice();\r\n\r\n  if (normalize) {\r\n    const norm = coeffs[0];\r\n    //'!=' gives a warning but '!==' doesn't compute correctly the if statement\r\n    if (norm != 0) coeffs = coeffs.map((coeff) => math.divide(coeff, norm));\r\n  }\r\n\r\n  if (round) {\r\n    coeffs.forEach((coeff) => {\r\n      coeff.re = Math.round(coeff.re * 10000) / 10000;\r\n      coeff.im = Math.round(coeff.im * 10000) / 10000;\r\n    });\r\n  }\r\n\r\n  if (polar) {\r\n    coeffs = coeffs.map((coeff) => coeff.toPolar());\r\n  }\r\n\r\n  return coeffs;\r\n}\r\n\r\nexport function sumAndNormalize(coeffs) {\r\n  let sum = coeffs[0];\r\n  for (let i = 1; i < coeffs.length; i++) {\r\n    //incremental sum for each coeff\r\n    let temp = [];\r\n    //coeff per coeff sum\r\n    for (let j = 0; j < coeffs[i].length; j++) {\r\n      temp.push(math.add(sum[j], coeffs[i][j]));\r\n    }\r\n    sum = temp.slice();\r\n  }\r\n\r\n  const norm = sum[0];\r\n  sum = sum.map((coeff) => math.divide(coeff, norm));\r\n\r\n  return sum;\r\n}\r\n","import { Midi } from '@tonejs/midi';\r\nimport dft, { sumAndNormalize } from './DFT';\r\nimport { getRbgaFromComplex } from './colorMapping';\r\n\r\nclass Pcv {\r\n  constructor() {\r\n    this.C = 0;\r\n    this.Cs = 0;\r\n    this.D = 0;\r\n    this.Ds = 0;\r\n    this.E = 0;\r\n    this.F = 0;\r\n    this.Fs = 0;\r\n    this.G = 0;\r\n    this.Gs = 0;\r\n    this.A = 0;\r\n    this.As = 0;\r\n    this.B = 0;\r\n  }\r\n\r\n  addNoteDuration(targetPitch, duration) {\r\n    switch (targetPitch) {\r\n      case 'C':\r\n        this.C += duration;\r\n        break;\r\n      case 'C#':\r\n        this.Cs += duration;\r\n        break;\r\n      case 'D':\r\n        this.D += duration;\r\n        break;\r\n      case 'D#':\r\n        this.Ds += duration;\r\n        break;\r\n      case 'E':\r\n        this.E += duration;\r\n        break;\r\n      case 'F':\r\n        this.F += duration;\r\n        break;\r\n      case 'F#':\r\n        this.Fs += duration;\r\n        break;\r\n      case 'G':\r\n        this.G += duration;\r\n        break;\r\n      case 'G#':\r\n        this.Gs += duration;\r\n        break;\r\n      case 'A':\r\n        this.A += duration;\r\n        break;\r\n      case 'A#':\r\n        this.As += duration;\r\n        break;\r\n      case 'B':\r\n        this.B += duration;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getPcvAsArray() {\r\n    let temp = [\r\n      this.C,\r\n      this.Cs,\r\n      this.D,\r\n      this.Ds,\r\n      this.E,\r\n      this.F,\r\n      this.Fs,\r\n      this.G,\r\n      this.Gs,\r\n      this.A,\r\n      this.As,\r\n      this.B,\r\n    ];\r\n\r\n    return temp;\r\n  }\r\n\r\n  add(pcv) {\r\n    this.C = pcv.C;\r\n    this.Cs = pcv.Cs;\r\n    this.D = pcv.D;\r\n    this.Ds = pcv.Ds;\r\n    this.E = pcv.E;\r\n    this.F = pcv.F;\r\n    this.Fs = pcv.Fs;\r\n    this.G = pcv.G;\r\n    this.Gs = pcv.Gs;\r\n    this.A = pcv.A;\r\n    this.As = pcv.As;\r\n    this.B = pcv.B;\r\n  }\r\n}\r\n\r\nexport function getMidiFileDataObject(binMidiFile) {\r\n  let midiData = new Midi(binMidiFile);\r\n\r\n  let tempos = midiData.header.tempos.map((tempo) => Math.round(tempo.bpm));\r\n  let midiBpm = Math.max(...tempos); //For quarter-note conversion\r\n\r\n  //Check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  midiData.tracks = nonPercussiveTracks;\r\n\r\n  return { midiData, midiBpm };\r\n}\r\n\r\nexport function getDftCoeffStatic(midiFile, resolution) {\r\n  let tracksSubdivision = [];\r\n\r\n  midiFile.tracks.forEach((track) =>\r\n    tracksSubdivision.push(\r\n      getSubdivision(track.notes, resolution, midiFile.duration)\r\n    )\r\n  );\r\n  console.log(tracksSubdivision);\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return dftCoeffsMatrix;\r\n}\r\n\r\nexport function getDftCoeffDynamic(midiData, resolutionMode, currentSongBPM) {\r\n  let { noteResolutionValue, seconds, useSeconds } = resolutionMode;\r\n\r\n  let resolution;\r\n  if (useSeconds) {\r\n    isNaN(seconds) ? (resolution = 1) : (resolution = seconds);\r\n  } else {\r\n    //Use bpm\r\n    resolution = noteResolutionValue * (60 / currentSongBPM);\r\n  }\r\n\r\n  console.log(currentSongBPM);\r\n  console.log(resolution);\r\n\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  //Subdividing the first row of the dft coeff matrix to get the trace for each coeff\r\n  let traces = [];\r\n  let firstRow = dftCoeffsMatrix[0];\r\n  for (let i = 1; i < 7; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < firstRow.length; j++) {\r\n      temp.push({ x: firstRow[j][i].re, y: firstRow[j][i].im });\r\n    }\r\n    traces.push(temp);\r\n  }\r\n\r\n  return { tracesData: traces, resolution: resolution };\r\n}\r\n\r\n//Resolution is in seconds\r\nexport function getDftCoeffFromMidiLinear(\r\n  midiFile,\r\n  multiRes = 1,\r\n  seconds = 1,\r\n  useSeconds\r\n) {\r\n  //For now, we don't take into account tempo changes\r\n  let midiData = new Midi(midiFile);\r\n  console.log(midiData);\r\n\r\n  let resolution;\r\n  if (useSeconds) {\r\n    isNaN(seconds) ? (resolution = 1) : (resolution = seconds);\r\n  } else {\r\n    //Use bpm\r\n    let tempos = midiData.header.tempos.map((tempo) => Math.round(tempo.bpm));\r\n    let bpm = Math.max(...tempos); //For quarter-note conversion\r\n    resolution = multiRes * (60 / bpm);\r\n  }\r\n\r\n  console.log(resolution);\r\n\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return { dftCoeffsLinear: dftCoeffsMatrix, resolution: resolution };\r\n}\r\n\r\n//Resolution is in seconds\r\nexport function getDftCoeffFromMidi(midiFile, resolution) {\r\n  //For now, we don't take into account tempo changes\r\n  let midiData = new Midi(midiFile);\r\n  console.log(midiData);\r\n  //const bpm = midiData.header.tempos[0].bpm; //For quarter-note conversion\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  /* midiData.tracks.forEach((track) => {\r\n    let tempMat = [];\r\n\r\n    for (let wndLen = resolution; wndLen < duration; wndLen += resolution) {\r\n      tempMat.push(getRow(track.notes, wndLen, resolution, duration));\r\n    }\r\n    //Since wndLen < duration, the for cycle do not include the top vertex of the triangle\r\n    tempMat.push(getRow(track.notes, duration, duration, duration)); //manually added\r\n\r\n    trackMatrices.push(tempMat);\r\n  }); */\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return dftCoeffsMatrix;\r\n\r\n  /* OLD   //Computing each row of the matrix as the normalized sum of the previous row (dft as linear op)\r\n  let matrixHeight = dftCoeffsSubdivision.length;\r\n  let rowsWidth = dftCoeffsSubdivision.length;\r\n  for (let i = 1; i < matrixHeight; i++) {\r\n    //starting from second row, first already populated\r\n    let temp = [];\r\n    for (let cursor = 1; cursor < rowsWidth; cursor++) {\r\n      //starting from the second element and backward summing\r\n      temp.push(\r\n        //TODO change, sum subdiv only on first row\r\n        sumAndNormalize(\r\n          dftCoeffsMatrix[i - 1][cursor - 1],\r\n          dftCoeffsMatrix[i - 1][cursor]\r\n        )\r\n      );\r\n    }\r\n    rowsWidth--;\r\n    dftCoeffsMatrix.push(temp);\r\n  } */\r\n}\r\n\r\nexport function getRgbaMatrix(dftCoeffsMatrix) {\r\n  //Computing each row of the matrix as the normalized sum of the previous row (dft as linear op)\r\n  let matrixHeight = dftCoeffsMatrix[0].length;\r\n  let rowsWidth = dftCoeffsMatrix[0].length;\r\n  let wndLenUnits = 2;\r\n  for (let i = 1; i < matrixHeight; i++) {\r\n    //starting from second row, first already populated\r\n    let temp = [];\r\n    for (let cursor = 0; cursor + wndLenUnits <= rowsWidth; cursor++) {\r\n      let windowed = dftCoeffsMatrix[0].slice(cursor, cursor + wndLenUnits);\r\n      temp.push(sumAndNormalize(windowed));\r\n    }\r\n    wndLenUnits++;\r\n    dftCoeffsMatrix.push(temp);\r\n  }\r\n\r\n  /* //Computing the pcvs for each subdivision\r\n  let pcvMatrix = [];\r\n\r\n  for (let i = 0; i < trackMatrices[0].length; i++) {\r\n    let temp = [];\r\n    for (let k = 0; k < trackMatrices[0][i].length; k++) {\r\n      temp.push(new Pcv());\r\n    }\r\n    pcvMatrix.push(temp);\r\n  } */\r\n\r\n  /* trackMatrices.forEach((track) => {\r\n    for (let i = 0; i < track.length; i++) {\r\n      for (let j = 0; j < track[i].length; j++) {\r\n        for (let k = 0; k < track[i][j].length; k++) {\r\n          let { pitch, duration } = track[i][j][k];\r\n          pcvMatrix[i][j].addNoteDuration(pitch, duration);\r\n        }\r\n      }\r\n    }\r\n  }); */\r\n\r\n  /* //Computing the dft coeff matrix\r\n  let dftCoeffMatrix = [];\r\n\r\n  for (let i = 0; i < pcvMatrix.length; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < pcvMatrix[i].length; j++) {\r\n      temp.push(dft(pcvMatrix[i][j].getPcvAsArray()));\r\n    }\r\n    dftCoeffMatrix.push(temp);\r\n  } */\r\n\r\n  let rgbaMatrices = [];\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    let matrix = [];\r\n    for (let j = 0; j < dftCoeffsMatrix.length; j++) {\r\n      let subdiv = [];\r\n      for (let k = 0; k < dftCoeffsMatrix[j].length; k++) {\r\n        subdiv.push('');\r\n      }\r\n      matrix.push(subdiv);\r\n    }\r\n    rgbaMatrices.push(matrix);\r\n  }\r\n\r\n  //Creating a single matrix for each coefficient with rgba values for each diamond\r\n  for (let i = 0; i < dftCoeffsMatrix.length; i++) {\r\n    for (let j = 0; j < dftCoeffsMatrix[i].length; j++) {\r\n      for (let k = 1; k < dftCoeffsMatrix[i][j].length; k++) {\r\n        rgbaMatrices[k - 1][i][j] = getRbgaFromComplex(\r\n          dftCoeffsMatrix[i][j][k]\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return rgbaMatrices;\r\n}\r\n\r\nfunction getSubdivision(notes, resolution, duration) {\r\n  let subdivision = [];\r\n  let wndLen = resolution;\r\n\r\n  for (let cursor = 0; cursor < duration; cursor += resolution) {\r\n    let temp = [];\r\n    notes.forEach((note) => {\r\n      let { time, duration } = note;\r\n\r\n      //Check if note contribute to the current window\r\n      if (isValidNote(time, duration, cursor, wndLen)) {\r\n        let noteAndDuration = { pitch: note.pitch };\r\n        //Computation of note contribution in the current window\r\n        if (time < cursor) {\r\n          if (time + duration < cursor + wndLen)\r\n            noteAndDuration.duration = time + duration - cursor;\r\n          else noteAndDuration.duration = wndLen;\r\n        } else {\r\n          if (time + duration <= cursor + wndLen)\r\n            noteAndDuration.duration = duration;\r\n          else noteAndDuration.duration = cursor + wndLen - time;\r\n        }\r\n\r\n        temp.push(noteAndDuration);\r\n      }\r\n    });\r\n\r\n    subdivision.push(temp);\r\n  }\r\n\r\n  return subdivision;\r\n}\r\n\r\nfunction isValidNote(time, duration, cursor, wndLen) {\r\n  if (\r\n    (time > cursor && time < cursor + wndLen) ||\r\n    (time + duration > cursor && time + duration < cursor + wndLen) ||\r\n    (time <= cursor && time + duration >= cursor + wndLen)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","export default function parse(input) {\r\n  let pcvs = [];\r\n  //Vectorial notation, distribution -> real numbers\r\n  const openVect = '(';\r\n  const closeVect = ')';\r\n  //Set notation, integers\r\n  const openSet = '{';\r\n  const closeSet = '}';\r\n  //Number divider\r\n  const divider = ',';\r\n\r\n  let isGroup = false;\r\n  let isSet = false;\r\n\r\n  for (let i = 0; i < input.length; i++) {\r\n    if (input[i] === openSet || input[i] === openVect) {\r\n      isGroup = true;\r\n      if (input[i] === openSet) isSet = true;\r\n    }\r\n\r\n    if (isGroup) {\r\n      let stringGroup = [];\r\n      //Slice the current group\r\n      for (\r\n        let j = i + 1;\r\n        input[j] !== closeSet && input[j] !== closeVect;\r\n        j++\r\n      ) {\r\n        stringGroup.push(input[j]);\r\n      }\r\n\r\n      stringGroup = stringGroup.join('');\r\n      //console.log(stringGroup);\r\n\r\n      //Check if the empty string\r\n      if (stringGroup === '') throw 'empty input';\r\n\r\n      let numeralInput = [];\r\n      let count = 0;\r\n      for (let j = 0; j < stringGroup.length; j++) {\r\n        if (stringGroup[j] === divider) {\r\n          let num = stringGroup.slice(j - count, j);\r\n          //if num.length === 0 => two consecutive comas, invalid input\r\n          if (num.length === 0) throw 'two consecutive comas';\r\n\r\n          //check if num is valid range\r\n          if (num < 0 || num >= 12) throw 'set notation: out of range';\r\n\r\n          numeralInput.push(+num);\r\n          count = -1;\r\n        }\r\n        count++;\r\n      }\r\n      //Last element not cover by the for cycle\r\n      let num = stringGroup.slice(\r\n        stringGroup.length - count,\r\n        stringGroup.length\r\n      );\r\n      numeralInput.push(+num);\r\n      //console.log(numeralInput);\r\n\r\n      if (isSet) {\r\n        let bin = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (let i = 0; i < numeralInput.length; i++) {\r\n          bin[numeralInput[i]] += 1;\r\n        }\r\n        pcvs.push(bin);\r\n      } else {\r\n        pcvs.push(numeralInput);\r\n      }\r\n\r\n      isGroup = false;\r\n      isSet = false;\r\n      i += count;\r\n    }\r\n  }\r\n\r\n  //console.log(pcvs);\r\n  if (pcvs.length === 0) throw 'invalid input';\r\n\r\n  return pcvs;\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Wavescape } from '../Wavescape';\r\nimport { prototypesData } from '../prototypesData';\r\nimport Circle from '../Circle';\r\nimport Player, { setPlayerMidiData } from '../Player';\r\nimport { getDftCoeffFromMidi, getRgbaMatrix } from '../getDftMatrices';\r\nimport dft from '../DFT';\r\nimport parse from '../parser';\r\n\r\nexport default function Visualization() {\r\n  //State: show or hide on the circles pitch class of the prototypes\r\n  const [selectedProtoPitchClasses, setSelectedProtoPitchClasses] =\r\n    useState(prototypesData);\r\n  const [showPrototypes, setShowPrototypes] = useState(true);\r\n\r\n  //State: contains the color data of the wavescape of a given coeff (Array(6) one for coeff)\r\n  const [wavescapesData, setWavescapesData] = useState([]);\r\n\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [tracesData, setTracesData] = useState([]);\r\n  const [currentSubdiv, setCurrentSubdiv] = useState(0);\r\n\r\n  const [file, setFile] = useState('');\r\n\r\n  const [userPcvs, setUserPcvs] = useState([]);\r\n\r\n  const [resolution, setResolution] = useState(1);\r\n  const resolutionSliderRef = useRef(null);\r\n\r\n  function handleShowPrototypes(showing) {\r\n    let temp = selectedProtoPitchClasses.slice();\r\n\r\n    if (showing) temp.push(...prototypesData);\r\n    else temp = [];\r\n\r\n    setSelectedProtoPitchClasses(temp);\r\n    setShowPrototypes(showing);\r\n  }\r\n\r\n  //MIDI parsing on file change\r\n  useEffect(() => {\r\n    let input = document.getElementById('file').files[0];\r\n    if (input) {\r\n      let resolution = +resolutionSliderRef.current.value;\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(input);\r\n      fileReader.onload = (res) => {\r\n        //Once the file is loaded\r\n\r\n        //Computation of the minimum resolution given time-precision trade off\r\n        /* let mode = {\r\n          userFriendly: 150,\r\n          precise: 250,\r\n          scientific: 400,\r\n          stillBearable: 600,\r\n          goodLuck: 1000,\r\n        }; */\r\n\r\n        setPlayerMidiData(res.target.result, resolution, setCurrentSubdiv);\r\n        let dftCoeff = getDftCoeffFromMidi(res.target.result, resolution);\r\n\r\n        //Subdividing the first row of the dft coeff matrix to get the trace for each coeff\r\n        let traces = [];\r\n        let firstRow = dftCoeff[0];\r\n        for (let i = 1; i < 7; i++) {\r\n          let temp = [];\r\n          for (let j = 0; j < firstRow.length; j++) {\r\n            temp.push({ x: firstRow[j][i].re, y: firstRow[j][i].im });\r\n          }\r\n          traces.push(temp);\r\n        }\r\n        setTracesData(traces);\r\n        setWavescapesData(getRgbaMatrix(dftCoeff));\r\n        console.log(traces[0].length);\r\n      };\r\n    }\r\n  }, [file]);\r\n\r\n  const handleSubmit = (e) => {\r\n    //In order not to refresh the page (default behaviuor)\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleSubmitPitchClass = (e) => {\r\n    //In order not to refresh the page (default behaviuor)\r\n    e.preventDefault();\r\n    let parsedInput;\r\n\r\n    try {\r\n      parsedInput = parse(e.target[0].value);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return;\r\n    }\r\n\r\n    let dftCoeffsInput = [];\r\n    for (let i = 0; i < parsedInput.length; i++) {\r\n      dftCoeffsInput.push(dft(parsedInput[i], true, true, false));\r\n    }\r\n\r\n    //Subdividing the coeffs for their coeff number\r\n    let subdivUserPcvs = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < dftCoeffsInput.length; j++) {\r\n        temp.push({ x: dftCoeffsInput[j][i].re, y: dftCoeffsInput[j][i].im });\r\n      }\r\n      subdivUserPcvs.push(temp);\r\n    }\r\n\r\n    if (userPcvs.length === 0) setUserPcvs(subdivUserPcvs);\r\n    else {\r\n      let temp = userPcvs.slice();\r\n      for (let i = 0; i < userPcvs.length; i++) {\r\n        temp[i].push(...subdivUserPcvs[i]);\r\n      }\r\n\r\n      setUserPcvs(temp);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Player />\r\n      <form onSubmit={handleSubmitPitchClass}>\r\n        <div>\r\n          <label htmlFor='pitchClass'>Pitch class: </label>\r\n          <input\r\n            type='text'\r\n            name='pitchClass'\r\n            id='pitchClass'\r\n            autoComplete='off'\r\n            placeholder='Ex.(1,0,0,0,1,0,0,1,0,0,0,1)'\r\n          />\r\n          <button type='submit'>Submit</button>\r\n        </div>\r\n      </form>\r\n\r\n      <div>\r\n        <label htmlFor='showPrototypes'>Show prototypes: </label>\r\n        <input\r\n          type='checkbox'\r\n          id='showPrototypes'\r\n          name='showPrototypes'\r\n          onChange={() => handleShowPrototypes(!showPrototypes)}\r\n          checked={showPrototypes}\r\n        ></input>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor='file'>Select a MIDI file: </label>\r\n          <input\r\n            type='file'\r\n            id='file'\r\n            name='file'\r\n            value={file}\r\n            onChange={(e) => setFile(e.target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      <div>\r\n        <input\r\n          type='range'\r\n          id='resolutin'\r\n          name='resolution'\r\n          defaultValue='1'\r\n          min='0.1'\r\n          max='10'\r\n          step='0.1'\r\n          onChange={() => setResolution(resolutionSliderRef.current.value)}\r\n          ref={resolutionSliderRef}\r\n        />\r\n        <label htmlFor='resolution'>Resolution: {resolution}</label>\r\n      </div>\r\n\r\n      {/* <DrawCircles\r\n        printablePitchClasses={selectedPitchClasses}\r\n        traceData={traceData}\r\n        userPcv={userPcv}\r\n        currentSubdiv={currentSubdiv}\r\n      /> */}\r\n\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[0]}\r\n        traceDataCoeff={tracesData[0]}\r\n        userPcvsCoeff={userPcvs[0]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={{ x: 0, y: 0 }}\r\n      />\r\n      <Wavescape wavescapeMatrix={wavescapesData[0]} />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[1]}\r\n        traceDataCoeff={tracesData[1]}\r\n        userPcvsCoeff={userPcvs[1]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={{ x: 0, y: 0 }}\r\n      />\r\n      <Wavescape wavescapeMatrix={wavescapesData[1]} />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[2]}\r\n        traceDataCoeff={tracesData[2]}\r\n        userPcvsCoeff={userPcvs[2]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={{ x: 0, y: 0 }}\r\n      />\r\n      <Wavescape wavescapeMatrix={wavescapesData[2]} />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[3]}\r\n        traceDataCoeff={tracesData[3]}\r\n        userPcvsCoeff={userPcvs[3]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={{ x: 0, y: 0 }}\r\n      />\r\n      <Wavescape wavescapeMatrix={wavescapesData[3]} />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[4]}\r\n        traceDataCoeff={tracesData[4]}\r\n        userPcvsCoeff={userPcvs[4]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={{ x: 0, y: 0 }}\r\n      />\r\n      <Wavescape wavescapeMatrix={wavescapesData[4]} />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[5]}\r\n        traceDataCoeff={tracesData[5]}\r\n        userPcvsCoeff={userPcvs[5]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={{ x: 0, y: 0 }}\r\n      />\r\n      <Wavescape wavescapeMatrix={wavescapesData[5]} />\r\n    </>\r\n  );\r\n}\r\n","import * as d3 from 'd3';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { pixelColor } from './colorMapping';\r\n\r\n//Minus before every y coordinate due to the fact that svg has positive y\r\n//downward, meanwhile cartesian plane has positive y upward\r\n\r\nfunction LiveCircle({\r\n  protoDataCoeff,\r\n  traceDataCoeff,\r\n  currentSubdiv,\r\n  deltaTime,\r\n}) {\r\n  const [frameStamps, setFrameStamps] = useState([]);\r\n  //const [currentFrame, setCurrentFrame] = useState(1);\r\n  const [currentPoint, setCurrentPoint] = useState({ x: 0, y: 0 });\r\n  const [nextPoint, setNextPoint] = useState({ x: 0, y: 0 });\r\n  const [circleImageData, setCircleImageData] = useState();\r\n  const [intervalID, setIntervalID] = useState(0);\r\n  const frameCap = 30;\r\n\r\n  let currentFrame = 1;\r\n\r\n  const canvasRef = useRef(null);\r\n  const width = 400;\r\n  const height = width;\r\n\r\n  const margin = 20;\r\n  const innerWidth = width - margin;\r\n  const circleRadius = width / 2 - margin;\r\n\r\n  let marksRadiusRatio = 0.01;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let radius = Math.floor(circleRadius * devicePixelRatio);\r\n    let image = ctx.createImageData(2 * radius, 2 * radius);\r\n    let imageData = image.data;\r\n\r\n    // increase the actual size of our canvas\r\n    canvas.width = width * devicePixelRatio;\r\n    canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    canvas.style.width = width + 'px';\r\n    canvas.style.height = height + 'px';\r\n\r\n    for (let x = -radius; x < radius; x++) {\r\n      for (let y = -radius; y < radius; y++) {\r\n        let distance = Math.sqrt(x * x + y * y);\r\n\r\n        if (distance > radius) {\r\n          // skip all (x,y) coordinates that are outside of the circle\r\n          continue;\r\n        }\r\n        // Figure out the starting index of this pixel in the image data array.\r\n        let rowLength = 2 * radius;\r\n        let adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n        let pixelWidth = 4; // each pixel requires 4 slots in the data array\r\n        let index = (adjustedX + adjustedY * rowLength) * pixelWidth;\r\n        let rgba = pixelColor(x, y, distance / radius);\r\n        imageData[index] = rgba.r;\r\n        imageData[index + 1] = rgba.g;\r\n        imageData[index + 2] = rgba.b;\r\n        imageData[index + 3] = rgba.a;\r\n      }\r\n    }\r\n    ctx.putImageData(image, 0, 0);\r\n    setCircleImageData(\r\n      ctx.getImageData(\r\n        0,\r\n        0,\r\n        width * devicePixelRatio,\r\n        height * devicePixelRatio\r\n      )\r\n    );\r\n    console.log(circleImageData);\r\n  }, [width, height, circleRadius]);\r\n\r\n  useEffect(() => {\r\n    //Workaround for chrome bug on canvas overlay in foreignObj SVG\r\n    canvasRef.current.getContext('2d').getImageData(0, 0, 1, 1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('current subdiv: ', currentSubdiv);\r\n    if (currentSubdiv > 0) {\r\n      //console.log(intervalID);\r\n      //setCurrentFrame(0);\r\n      setCurrentPoint({ ...traceDataCoeff[currentSubdiv] });\r\n      setNextPoint({ ...traceDataCoeff[currentSubdiv + 1] });\r\n      clearInterval(intervalID);\r\n      draw();\r\n      //setIntervalID(setInterval(draw, (deltaTime * 1000) / frameCap));\r\n    }\r\n  }, [currentSubdiv]);\r\n\r\n  useEffect(() => {\r\n    if (deltaTime > 0) {\r\n      let temp = [0];\r\n      for (let i = 1; i < frameCap + 1; i++) {\r\n        temp.push(temp[i - 1] + 1 / frameCap);\r\n      }\r\n      setFrameStamps(temp);\r\n    }\r\n  }, [deltaTime]);\r\n\r\n  const segment = (p1, p2, t) => {\r\n    if (t > 1) t = 1;\r\n    return { x: p1.x + (p2.x - p1.x) * t, y: p1.y + (p2.y - p1.y) * t };\r\n  };\r\n\r\n  function draw() {\r\n    let ctx = canvasRef.current.getContext('2d');\r\n    //console.log(circleImageData);\r\n\r\n    //Spread operation for shallow copy\r\n    let tempNextPoint = { ...nextPoint };\r\n    let tempCurrentPoint = { ...currentPoint };\r\n    //Coordinates conversion in pixels\r\n    tempNextPoint.x = tempNextPoint.x * circleRadius - margin;\r\n    tempNextPoint.y = -tempNextPoint.y * circleRadius - margin;\r\n    tempCurrentPoint.x = tempCurrentPoint.x * circleRadius - margin;\r\n    tempCurrentPoint.y = -tempCurrentPoint.y * circleRadius - margin;\r\n\r\n    let middlePoint = segment(\r\n      tempCurrentPoint,\r\n      tempNextPoint,\r\n      frameStamps[currentFrame]\r\n    );\r\n\r\n    //To draw over current canvas content\r\n    ctx.globalCompositeOperation = 'destination-over';\r\n    /* let imageData = ctx.getImageData(\r\n      0,\r\n      0,\r\n      width * devicePixelRatio,\r\n      height * devicePixelRatio\r\n    ); */\r\n\r\n    ctx.clearRect(0, 0, width, height); // clear canvas\r\n\r\n    ctx.strokeStyle = 'rgba(0, 153, 255, 1)';\r\n    ctx.lineWidth = 1;\r\n    ctx.save();\r\n\r\n    ctx.translate(width / 2, height / 2);\r\n    ctx.putImageData(circleImageData, 0, 0);\r\n    ctx.beginPath();\r\n    ctx.moveTo(tempCurrentPoint.x, tempCurrentPoint.y);\r\n    ctx.lineTo(middlePoint.x, middlePoint.y);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n\r\n    let nextFrame = currentFrame + 1;\r\n    nextFrame > frameCap ? (currentFrame = 1) : (currentFrame = nextFrame);\r\n\r\n    //console.log(frameStamps[currentFrame]);\r\n  }\r\n\r\n  const protoCircleMark = (pcvData, id) => {\r\n    let scaleRatio = 0.02;\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius((scaleRatio * width) / 2)\r\n      .outerRadius(((scaleRatio + 0.01) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    //Check for sub/superscript\r\n    let labelName = '';\r\n    let subSup = '';\r\n    let isSub = false;\r\n    if (pcvData.label.includes('_') || pcvData.label.includes('^')) {\r\n      for (let i = 0; i < pcvData.label.length; i++) {\r\n        if (pcvData.label[i] === '_') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n          isSub = true;\r\n        }\r\n        if (pcvData.label[i] === '^') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n        }\r\n      }\r\n    } else {\r\n      labelName = pcvData.label;\r\n    }\r\n\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        key={`p.${id}`}\r\n      >\r\n        <path fill={'grey'} key={id} d={mark()}></path>\r\n        <text\r\n          textAnchor='middle'\r\n          dx={-Math.sign(pcvData.x) * 20}\r\n          dy={-Math.sign(-pcvData.y) * 20}\r\n          fontSize='20px'\r\n        >\r\n          {labelName}\r\n          {isSub ? (\r\n            <tspan fontSize={15} baselineShift='sub'>\r\n              {subSup}\r\n            </tspan>\r\n          ) : (\r\n            <tspan fontSize={15} baselineShift='super'>\r\n              {subSup}\r\n            </tspan>\r\n          )}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const drawBorder = () => {\r\n    return (\r\n      <path\r\n        fill={'azure'}\r\n        d={d3\r\n          .arc()\r\n          .innerRadius(innerWidth / 2 - 9)\r\n          .outerRadius(innerWidth / 2 - 11)\r\n          .startAngle(0)\r\n          .endAngle(2 * Math.PI)()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const highlightSubdiv = (radiusScaleWidth) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    const highlight = d3\r\n      .arc()\r\n      .innerRadius((radiusScaleWidth * width) / 2)\r\n      .outerRadius(((radiusScaleWidth + 0.005) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    let highlightedTrace = [];\r\n    let length = 10;\r\n    let opacityArray = [];\r\n\r\n    opacityArray.push(1);\r\n    for (let i = 1; i < 10; i++) {\r\n      opacityArray.push(opacityArray[i - 1] * 0.8);\r\n    }\r\n\r\n    if (currentSubdiv < length)\r\n      highlightedTrace = traceDataCoeff.slice(0, currentSubdiv + 1);\r\n    else\r\n      highlightedTrace = traceDataCoeff.slice(\r\n        currentSubdiv - length,\r\n        currentSubdiv\r\n      );\r\n\r\n    highlightedTrace = highlightedTrace.reverse();\r\n\r\n    return highlightedTrace.map((coeff, i) => {\r\n      return (\r\n        <g key={`g.${i}`}>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'white'}\r\n            key={i}\r\n            fillOpacity={opacityArray[i]}\r\n            d={mark()}\r\n          ></path>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'black'}\r\n            fillOpacity={opacityArray[i]}\r\n            key={`t.${i}`}\r\n            d={highlight()}\r\n          ></path>\r\n        </g>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <svg width={width} height={height}>\r\n        <foreignObject x={margin} y={margin} width={width} height={height}>\r\n          <canvas\r\n            style={{ zIndex: '-1' }}\r\n            width={width}\r\n            height={height}\r\n            ref={canvasRef}\r\n          />\r\n        </foreignObject>\r\n        <g transform={`translate(${width / 2},${width / 2})`}>\r\n          {drawBorder()}\r\n          {protoDataCoeff\r\n            ? protoDataCoeff.map((pcv, i) => protoCircleMark(pcv, i))\r\n            : null}\r\n          {traceDataCoeff ? highlightSubdiv(marksRadiusRatio) : null}\r\n        </g>\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LiveCircle;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { prototypesData } from '../prototypesData';\r\nimport LiveCircle from '../LiveCircle';\r\nimport Player, { setPlayerMidiData } from '../Player';\r\nimport { getDftCoeffFromMidiLinear } from '../getDftMatrices';\r\n\r\nexport default function Live() {\r\n  //State: show or hide on the circles pitch class of the prototypes\r\n  const [selectedProtoPitchClasses, setSelectedProtoPitchClasses] =\r\n    useState(prototypesData);\r\n  const [showPrototypes, setShowPrototypes] = useState(true);\r\n\r\n  const [multiRes, setMultiRes] = useState(1);\r\n  const [seconds, setSeconds] = useState(1);\r\n  const [useSeconds, setUseSeconds] = useState(false);\r\n  const resolutionTextRef = useRef(null);\r\n\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [tracesData, setTracesData] = useState([]);\r\n  const [currentSubdiv, setCurrentSubdiv] = useState(0);\r\n  const [deltaTime, setDeltaTime] = useState(0);\r\n\r\n  const [file, setFile] = useState('');\r\n\r\n  function handleShowPrototypes(showing) {\r\n    let temp = selectedProtoPitchClasses.slice();\r\n\r\n    if (showing) temp.push(...prototypesData);\r\n    else temp = [];\r\n\r\n    setSelectedProtoPitchClasses(temp);\r\n    setShowPrototypes(showing);\r\n  }\r\n\r\n  //MIDI parsing on file change\r\n  useEffect(() => {\r\n    let input = document.getElementById('file').files[0];\r\n    if (input) {\r\n      //let resolution = +resolutionSliderRef.current.value;\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(input);\r\n      fileReader.onload = (res) => {\r\n        //Once the file is loaded\r\n        let { dftCoeffsLinear, resolution } = getDftCoeffFromMidiLinear(\r\n          res.target.result,\r\n          multiRes,\r\n          seconds,\r\n          useSeconds\r\n        );\r\n        setDeltaTime(resolution);\r\n        setPlayerMidiData(res.target.result, resolution, setCurrentSubdiv);\r\n\r\n        //Subdividing the first row of the dft coeff matrix to get the trace for each coeff\r\n        let traces = [];\r\n        let firstRow = dftCoeffsLinear[0];\r\n        for (let i = 1; i < 7; i++) {\r\n          let temp = [];\r\n          for (let j = 0; j < firstRow.length; j++) {\r\n            temp.push({ x: firstRow[j][i].re, y: firstRow[j][i].im });\r\n          }\r\n          traces.push(temp);\r\n        }\r\n        setTracesData(traces);\r\n      };\r\n    }\r\n  }, [file]);\r\n\r\n  const handleSubmit = (e) => {\r\n    //In order not to refresh the page (default behaviuor)\r\n    e.preventDefault();\r\n  };\r\n\r\n  function multiResOnChange(event) {\r\n    switch (event.target.value) {\r\n      case 'sixteenth':\r\n        setMultiRes(0.25);\r\n        setUseSeconds(false);\r\n        break;\r\n      case 'eighth':\r\n        setMultiRes(0.5);\r\n        setUseSeconds(false);\r\n        break;\r\n      case 'quarter':\r\n        setMultiRes(1);\r\n        setUseSeconds(false);\r\n        break;\r\n      case 'half':\r\n        setMultiRes(2);\r\n        setUseSeconds(false);\r\n        break;\r\n      case 'whole':\r\n        setMultiRes(4);\r\n        setUseSeconds(false);\r\n        break;\r\n      case 'seconds':\r\n        setUseSeconds(true);\r\n        let sec = setSeconds(parseFloat(resolutionTextRef.current.value));\r\n        break;\r\n      default:\r\n        setMultiRes(1);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Player />\r\n      <div>\r\n        <label htmlFor='showPrototypes'>Show prototypes: </label>\r\n        <input\r\n          type='checkbox'\r\n          id='showPrototypes'\r\n          name='showPrototypes'\r\n          onChange={() => handleShowPrototypes(!showPrototypes)}\r\n          checked={showPrototypes}\r\n        ></input>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor='file'>Select a MIDI file: </label>\r\n          <input\r\n            type='file'\r\n            id='file'\r\n            name='file'\r\n            value={file}\r\n            onChange={(e) => setFile(e.target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      <div style={{ fontSize: '40px' }} onChange={multiResOnChange}>\r\n        <input type='radio' id='resChoice1' name='multiRes' value='sixteenth' />\r\n        <label htmlFor='resChoice1'> &#119137;</label>\r\n\r\n        <input type='radio' id='resChoice2' name='multiRes' value='eighth' />\r\n        <label htmlFor='resChoice2'>&#119136;</label>\r\n\r\n        <input\r\n          type='radio'\r\n          id='resChoice3'\r\n          name='multiRes'\r\n          value='quarter'\r\n          defaultChecked\r\n        />\r\n        <label htmlFor='resChoice3'>&#9833;</label>\r\n\r\n        <input type='radio' id='resChoice4' name='multiRes' value='half' />\r\n        <label htmlFor='resChoice4'>&#119134;</label>\r\n\r\n        <input type='radio' id='resChoice5' name='multiRes' value='whole' />\r\n        <label htmlFor='resChoice5'>&#119133;</label>\r\n\r\n        <input type='radio' id='resChoice6' name='multiRes' value='seconds' />\r\n        <label htmlFor='resChoice5' style={{ fontSize: '15px' }}>\r\n          in seconds\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor='resolutionSeconds'>Resolution (seconds): </label>\r\n        <input\r\n          type='text'\r\n          name='resolutionSeconds'\r\n          id='resolutionSeconds'\r\n          autoComplete='off'\r\n          placeholder='Ex. 1.5'\r\n          onChange={() => {\r\n            setSeconds(parseFloat(resolutionTextRef.current.value));\r\n          }}\r\n          ref={resolutionTextRef}\r\n        />\r\n      </div>\r\n\r\n      <LiveCircle\r\n        protoDataCoeff={selectedProtoPitchClasses[0]}\r\n        traceDataCoeff={tracesData[0]}\r\n        currentSubdiv={currentSubdiv}\r\n        deltaTime={deltaTime}\r\n      />\r\n      <LiveCircle\r\n        protoDataCoeff={selectedProtoPitchClasses[1]}\r\n        traceDataCoeff={tracesData[1]}\r\n        currentSubdiv={currentSubdiv}\r\n        deltaTime={deltaTime}\r\n      />\r\n      <LiveCircle\r\n        protoDataCoeff={selectedProtoPitchClasses[2]}\r\n        traceDataCoeff={tracesData[2]}\r\n        currentSubdiv={currentSubdiv}\r\n        deltaTime={deltaTime}\r\n      />\r\n      <LiveCircle\r\n        protoDataCoeff={selectedProtoPitchClasses[3]}\r\n        traceDataCoeff={tracesData[3]}\r\n        currentSubdiv={currentSubdiv}\r\n        deltaTime={deltaTime}\r\n      />\r\n      <LiveCircle\r\n        protoDataCoeff={selectedProtoPitchClasses[4]}\r\n        traceDataCoeff={tracesData[4]}\r\n        currentSubdiv={currentSubdiv}\r\n        deltaTime={deltaTime}\r\n      />\r\n      <LiveCircle\r\n        protoDataCoeff={selectedProtoPitchClasses[5]}\r\n        traceDataCoeff={tracesData[5]}\r\n        currentSubdiv={currentSubdiv}\r\n        deltaTime={deltaTime}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import * as Tone from 'tone';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport dft from '../DFT';\r\nimport Circle from '../Circle';\r\nimport { prototypesData } from '../prototypesData';\r\n\r\nfunction Keyboard() {\r\n  const [currentNotesDftCoeffs, setCurrentNotesDftCoeffs] = useState(\r\n    dft([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]).map((coeff) => {\r\n      return { x: coeff.re, y: coeff.im };\r\n    })\r\n  );\r\n\r\n  const [selectedProtoPitchClasses, setSelectedProtoPitchClasses] =\r\n    useState(prototypesData);\r\n  const [showPrototypes, setShowPrototypes] = useState(true);\r\n  function handleShowPrototypes(showing) {\r\n    let temp = selectedProtoPitchClasses.slice();\r\n\r\n    if (showing) temp.push(...prototypesData);\r\n    else temp = [];\r\n\r\n    setSelectedProtoPitchClasses(temp);\r\n    setShowPrototypes(showing);\r\n  }\r\n\r\n  useEffect(() => {\r\n    //INIT\r\n    let currentNotes = [];\r\n    const sampler = new Tone.Sampler({\r\n      urls: {\r\n        A0: 'A0.mp3',\r\n        C1: 'C1.mp3',\r\n        'D#1': 'Ds1.mp3',\r\n        'F#1': 'Fs1.mp3',\r\n        A1: 'A1.mp3',\r\n        C2: 'C2.mp3',\r\n        'D#2': 'Ds2.mp3',\r\n        'F#2': 'Fs2.mp3',\r\n        A2: 'A2.mp3',\r\n        C3: 'C3.mp3',\r\n        'D#3': 'Ds3.mp3',\r\n        'F#3': 'Fs3.mp3',\r\n        A3: 'A3.mp3',\r\n        C4: 'C4.mp3',\r\n        'D#4': 'Ds4.mp3',\r\n        'F#4': 'Fs4.mp3',\r\n        A4: 'A4.mp3',\r\n        C5: 'C5.mp3',\r\n        'D#5': 'Ds5.mp3',\r\n        'F#5': 'Fs5.mp3',\r\n        A5: 'A5.mp3',\r\n        C6: 'C6.mp3',\r\n        'D#6': 'Ds6.mp3',\r\n        'F#6': 'Fs6.mp3',\r\n        A6: 'A6.mp3',\r\n        C7: 'C7.mp3',\r\n        'D#7': 'Ds7.mp3',\r\n        'F#7': 'Fs7.mp3',\r\n        A7: 'A7.mp3',\r\n        C8: 'C8.mp3',\r\n      },\r\n      release: 1,\r\n      baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n    }).toDestination();\r\n    sampler.volume.value = -30;\r\n\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator.requestMIDIAccess().then(success, failure);\r\n    }\r\n\r\n    function computeDftCoeffs(playedNotes) {\r\n      let pcv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n      playedNotes.forEach((note) => {\r\n        let pitch;\r\n        if (note.includes('#')) {\r\n          pitch = note.slice(0, 2);\r\n        } else pitch = pitch = note.slice(0, 1);\r\n\r\n        switch (pitch) {\r\n          case 'C':\r\n            pcv[0] = 1;\r\n            break;\r\n          case 'C#':\r\n            pcv[1] = 1;\r\n            break;\r\n          case 'D':\r\n            pcv[2] = 1;\r\n            break;\r\n          case 'D#':\r\n            pcv[3] = 1;\r\n            break;\r\n          case 'E':\r\n            pcv[4] = 1;\r\n            break;\r\n          case 'F':\r\n            pcv[5] = 1;\r\n            break;\r\n          case 'F#':\r\n            pcv[6] = 1;\r\n            break;\r\n          case 'G':\r\n            pcv[7] = 1;\r\n            break;\r\n          case 'G#':\r\n            pcv[8] = 1;\r\n            break;\r\n          case 'A':\r\n            pcv[9] = 1;\r\n            break;\r\n          case 'A#':\r\n            pcv[10] = 1;\r\n            break;\r\n          case 'B':\r\n            pcv[11] = 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      let dftCoeffs = dft(pcv);\r\n      dftCoeffs = dftCoeffs.map((coeff) => {\r\n        return { x: coeff.re, y: coeff.im };\r\n      });\r\n      //console.log(dftCoeffs);\r\n      setCurrentNotesDftCoeffs(dftCoeffs);\r\n    }\r\n\r\n    function handleInput(input) {\r\n      const command = input.data[0];\r\n      const note = Tone.Frequency(input.data[1], 'midi').toNote();\r\n      const velocity = Math.round(input.data[2] * 0.05);\r\n      //const velocity = input.data[2];\r\n\r\n      switch (command) {\r\n        case 144: //noteOn\r\n          if (velocity > 0) {\r\n            //Note is on\r\n            sampler.triggerAttack(note, Tone.immediate(), velocity);\r\n            currentNotes.push(note);\r\n          } else {\r\n            //Note is off\r\n            sampler.triggerRelease(note, Tone.immediate());\r\n            currentNotes.filter((currentNote) => currentNote !== note);\r\n          }\r\n          break;\r\n        case 128: //noteOff\r\n          sampler.triggerRelease(note, Tone.immediate());\r\n          currentNotes = currentNotes.filter(\r\n            (currentNote) => currentNote !== note\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      computeDftCoeffs(currentNotes);\r\n    }\r\n\r\n    function success(midiAccess) {\r\n      midiAccess.onstatechange = updateDevices;\r\n\r\n      const inputs = midiAccess.inputs;\r\n\r\n      inputs.forEach((input) => {\r\n        input.onmidimessage = handleInput;\r\n      });\r\n    }\r\n\r\n    function failure() {\r\n      console.log('Could not connect MIDI');\r\n    }\r\n\r\n    function updateDevices(event) {\r\n      console.log(\r\n        `Name: ${event.port.name}, Brand: ${event.port.manufacturer}, State: ${event.port.state}, Type: ${event.port.type}`\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label htmlFor='showPrototypes'>Show prototypes: </label>\r\n        <input\r\n          type='checkbox'\r\n          id='showPrototypes'\r\n          name='showPrototypes'\r\n          onChange={() => handleShowPrototypes(!showPrototypes)}\r\n          checked={showPrototypes}\r\n        ></input>\r\n      </div>\r\n      {currentNotesDftCoeffs.map((coeff, i) => (\r\n        <h4 key={i}>{`coeff${i}:{Re:${coeff.x}, Im:${coeff.x}}`}</h4>\r\n      ))}\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[0]}\r\n        performanceCoeff={currentNotesDftCoeffs[1]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[1]}\r\n        performanceCoeff={currentNotesDftCoeffs[2]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[2]}\r\n        performanceCoeff={currentNotesDftCoeffs[3]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[3]}\r\n        performanceCoeff={currentNotesDftCoeffs[4]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[4]}\r\n        performanceCoeff={currentNotesDftCoeffs[5]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[5]}\r\n        performanceCoeff={currentNotesDftCoeffs[6]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Keyboard;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { Wavescape } from './Wavescape';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Switch from '@mui/material/Switch';\r\nimport { Typography } from '@mui/material';\r\nimport Collapse from '@mui/material/Collapse';\r\n\r\nfunction WavescapeModule({ wavescapesData }) {\r\n  const [showModule, setShowModule] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (wavescapesData.length > 0) setShowModule(true);\r\n  }, [wavescapesData]);\r\n\r\n  return (\r\n    <Box>\r\n      <Switch\r\n        onChange={() => setShowModule(!showModule)}\r\n        checked={showModule}\r\n      />\r\n\r\n      <Typography variant='h6'>Static Analysis</Typography>\r\n      <Collapse in={showModule}>\r\n        {wavescapesData.map((data, i) => (\r\n          <Wavescape key={`w.${i}`} wavescapeMatrix={data} />\r\n        ))}\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WavescapeModule;\r\n","import { useRef } from 'react';\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nfunction ResolutionSelector({ resolutionMode, setResolutionMode }) {\r\n  const resolutionTextRef = useRef(null);\r\n\r\n  function onChangeResolutionSelection(event) {\r\n    let newResolutionMode = { ...resolutionMode };\r\n    newResolutionMode.seconds = parseFloat(resolutionTextRef.current.value);\r\n\r\n    switch (event.target.value) {\r\n      case 'sixteenth':\r\n        newResolutionMode.noteResolutionValue = 0.25;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'eighth':\r\n        newResolutionMode.noteResolutionValue = 0.5;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'quarter':\r\n        newResolutionMode.noteResolutionValue = 1;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'half':\r\n        newResolutionMode.noteResolutionValue = 2;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'whole':\r\n        newResolutionMode.noteResolutionValue = 4;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'seconds':\r\n        newResolutionMode.useSeconds = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setResolutionMode(newResolutionMode);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <FormControl component='fieldset'>\r\n        <FormLabel component='legend'>Resolution</FormLabel>\r\n        <RadioGroup\r\n          row\r\n          defaultValue='quarter'\r\n          onChange={onChangeResolutionSelection}\r\n          aria-label='resolution'\r\n          name='row-radio-buttons-group'\r\n        >\r\n          <FormControlLabel\r\n            value='sixteenth'\r\n            control={<Radio />}\r\n            label=' &#119137;'\r\n          />\r\n          <FormControlLabel\r\n            value='eighth'\r\n            control={<Radio />}\r\n            label=' &#119136;'\r\n          />\r\n          <FormControlLabel\r\n            value='quarter'\r\n            control={<Radio />}\r\n            label='&#9833;'\r\n          />\r\n          <FormControlLabel\r\n            value='half'\r\n            control={<Radio />}\r\n            label='&#119134;'\r\n          />\r\n          <FormControlLabel\r\n            value='whole'\r\n            control={<Radio />}\r\n            label='&#119133;'\r\n          />\r\n          <FormControlLabel\r\n            value='seconds'\r\n            control={<Radio />}\r\n            label={\r\n              <TextField\r\n                label='in seconds'\r\n                id='standard-size-small'\r\n                defaultValue='1.5'\r\n                size='small'\r\n                variant='standard'\r\n                onChange={() => {\r\n                  let newResolutionMode = { ...resolutionMode };\r\n                  newResolutionMode.seconds = parseFloat(\r\n                    resolutionTextRef.current.value\r\n                  );\r\n                  setResolutionMode(newResolutionMode);\r\n                }}\r\n                inputRef={resolutionTextRef}\r\n              />\r\n            }\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResolutionSelector;\r\n","import Circle from './Circle';\r\nimport { useEffect, useState } from 'react';\r\nimport { prototypesData } from './prototypesData';\r\n\r\nfunction CoefficientsModule({\r\n  coeffTracesData,\r\n  showPrototypes,\r\n  userPcvs,\r\n  currentSubdiv,\r\n  midiDevNotesDftCoeffs,\r\n}) {\r\n  const [selectedProtoPitchClasses, setSelectedProtoPitchClasses] =\r\n    useState(prototypesData);\r\n\r\n  useEffect(() => {\r\n    if (showPrototypes) {\r\n      setSelectedProtoPitchClasses(prototypesData);\r\n    } else setSelectedProtoPitchClasses([]);\r\n  }, [showPrototypes]);\r\n\r\n  useEffect(() => {\r\n    console.log(selectedProtoPitchClasses);\r\n  }, [selectedProtoPitchClasses]);\r\n\r\n  return (\r\n    <>\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[0]}\r\n        traceDataCoeff={coeffTracesData[0]}\r\n        userPcvsCoeff={userPcvs[0]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[1]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[1]}\r\n        traceDataCoeff={coeffTracesData[1]}\r\n        userPcvsCoeff={userPcvs[1]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[2]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[2]}\r\n        traceDataCoeff={coeffTracesData[2]}\r\n        userPcvsCoeff={userPcvs[2]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[3]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[3]}\r\n        traceDataCoeff={coeffTracesData[3]}\r\n        userPcvsCoeff={userPcvs[3]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[4]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[4]}\r\n        traceDataCoeff={coeffTracesData[4]}\r\n        userPcvsCoeff={userPcvs[4]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[5]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[5]}\r\n        traceDataCoeff={coeffTracesData[5]}\r\n        userPcvsCoeff={userPcvs[5]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[6]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CoefficientsModule;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport * as Tone from 'tone';\r\nimport WavescapeModule from '../WavescapeModule';\r\nimport ResolutionSelector from '../ResolutionSelector';\r\nimport CoefficientsModule from '../CoefficientsModule';\r\n\r\nimport Player, { setPlayerMidiData } from '../Player';\r\nimport {\r\n  getDftCoeffFromMidi,\r\n  getRgbaMatrix,\r\n  getMidiFileDataObject,\r\n  getDftCoeffStatic,\r\n  getDftCoeffDynamic,\r\n} from '../getDftMatrices';\r\nimport dft from '../DFT';\r\nimport parse from '../parser';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nlet currentSongBPM = 80;\r\nlet currentSongMidiData;\r\n\r\nfunction Application() {\r\n  //State: contains the color data of the wavescape of a given coeff (Array(6) one for coeff)\r\n  const [wavescapesData, setWavescapesData] = useState([]);\r\n\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [coeffTracesData, setCoeffTracesData] = useState([]);\r\n  const [showPrototypes, setShowPrototypes] = useState(true);\r\n  const [currentSubdiv, setCurrentSubdiv] = useState(0);\r\n\r\n  //State: inputs\r\n  const [resolutionMode, setResolutionMode] = useState({\r\n    noteResolutionValue: 1,\r\n    seconds: 1.5,\r\n    useSeconds: false,\r\n  });\r\n\r\n  const [userPcvs, setUserPcvs] = useState([]);\r\n  const pcvTextRef = useRef(null);\r\n\r\n  const [file, setFile] = useState('');\r\n\r\n  //MIDI inputs\r\n  const [midiDevNotesDftCoeffs, setMidiDevNotesDftCoeffs] = useState(\r\n    dft([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]).map((coeff) => {\r\n      return { x: coeff.re, y: coeff.im };\r\n    })\r\n  );\r\n\r\n  //MIDI parsing on file change\r\n  useEffect(() => {\r\n    let input = document.getElementById('file').files[0];\r\n\r\n    if (input) {\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(input);\r\n      fileReader.onload = (loadedFile) => {\r\n        let { midiData, midiBpm } = getMidiFileDataObject(\r\n          loadedFile.target.result\r\n        );\r\n        currentSongBPM = midiBpm;\r\n        currentSongMidiData = midiData;\r\n\r\n        //Wavescapes static analysis\r\n        let subdivsNumberStatic = 50;\r\n        let staticResolution =\r\n          currentSongMidiData.duration / subdivsNumberStatic;\r\n\r\n        setWavescapesData(\r\n          getRgbaMatrix(\r\n            getDftCoeffStatic(currentSongMidiData, staticResolution)\r\n          )\r\n        );\r\n\r\n        //Circles dynamic analysis\r\n        let { tracesData, resolution } = getDftCoeffDynamic(\r\n          midiData,\r\n          resolutionMode,\r\n          currentSongBPM\r\n        );\r\n        setCoeffTracesData(tracesData);\r\n        setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n      };\r\n    }\r\n  }, [file]);\r\n\r\n  function handleSubmitPitchClass(input) {\r\n    //In order not to refresh the page (default behaviuor)\r\n    let parsedInput;\r\n\r\n    try {\r\n      parsedInput = parse(input);\r\n    } catch (error) {\r\n      console.log(error);\r\n      return;\r\n    }\r\n\r\n    let dftCoeffsInput = [];\r\n    for (let i = 0; i < parsedInput.length; i++) {\r\n      dftCoeffsInput.push(dft(parsedInput[i], true, true, false));\r\n    }\r\n\r\n    //Subdividing the coeffs for their coeff number\r\n    let subdivUserPcvs = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < dftCoeffsInput.length; j++) {\r\n        temp.push({ x: dftCoeffsInput[j][i].re, y: dftCoeffsInput[j][i].im });\r\n      }\r\n      subdivUserPcvs.push(temp);\r\n    }\r\n\r\n    if (userPcvs.length === 0) setUserPcvs(subdivUserPcvs);\r\n    else {\r\n      let temp = userPcvs.slice();\r\n      for (let i = 0; i < userPcvs.length; i++) {\r\n        temp[i].push(...subdivUserPcvs[i]);\r\n      }\r\n\r\n      setUserPcvs(temp);\r\n    }\r\n  }\r\n\r\n  //MIDI devices init\r\n  useEffect(() => {\r\n    //INIT\r\n    let currentNotes = [];\r\n    const sampler = new Tone.Sampler({\r\n      urls: {\r\n        A0: 'A0.mp3',\r\n        C1: 'C1.mp3',\r\n        'D#1': 'Ds1.mp3',\r\n        'F#1': 'Fs1.mp3',\r\n        A1: 'A1.mp3',\r\n        C2: 'C2.mp3',\r\n        'D#2': 'Ds2.mp3',\r\n        'F#2': 'Fs2.mp3',\r\n        A2: 'A2.mp3',\r\n        C3: 'C3.mp3',\r\n        'D#3': 'Ds3.mp3',\r\n        'F#3': 'Fs3.mp3',\r\n        A3: 'A3.mp3',\r\n        C4: 'C4.mp3',\r\n        'D#4': 'Ds4.mp3',\r\n        'F#4': 'Fs4.mp3',\r\n        A4: 'A4.mp3',\r\n        C5: 'C5.mp3',\r\n        'D#5': 'Ds5.mp3',\r\n        'F#5': 'Fs5.mp3',\r\n        A5: 'A5.mp3',\r\n        C6: 'C6.mp3',\r\n        'D#6': 'Ds6.mp3',\r\n        'F#6': 'Fs6.mp3',\r\n        A6: 'A6.mp3',\r\n        C7: 'C7.mp3',\r\n        'D#7': 'Ds7.mp3',\r\n        'F#7': 'Fs7.mp3',\r\n        A7: 'A7.mp3',\r\n        C8: 'C8.mp3',\r\n      },\r\n      release: 1,\r\n      baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n    }).toDestination();\r\n    sampler.volume.value = -30;\r\n\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator.requestMIDIAccess().then(success, failure);\r\n    }\r\n\r\n    function computeDftCoeffs(playedNotes) {\r\n      let pcv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n      playedNotes.forEach((note) => {\r\n        let pitch;\r\n        if (note.includes('#')) {\r\n          pitch = note.slice(0, 2);\r\n        } else pitch = pitch = note.slice(0, 1);\r\n\r\n        switch (pitch) {\r\n          case 'C':\r\n            pcv[0] += 1;\r\n            break;\r\n          case 'C#':\r\n            pcv[1] += 1;\r\n            break;\r\n          case 'D':\r\n            pcv[2] += 1;\r\n            break;\r\n          case 'D#':\r\n            pcv[3] += 1;\r\n            break;\r\n          case 'E':\r\n            pcv[4] += 1;\r\n            break;\r\n          case 'F':\r\n            pcv[5] += 1;\r\n            break;\r\n          case 'F#':\r\n            pcv[6] += 1;\r\n            break;\r\n          case 'G':\r\n            pcv[7] += 1;\r\n            break;\r\n          case 'G#':\r\n            pcv[8] += 1;\r\n            break;\r\n          case 'A':\r\n            pcv[9] += 1;\r\n            break;\r\n          case 'A#':\r\n            pcv[10] += 1;\r\n            break;\r\n          case 'B':\r\n            pcv[11] += 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      let dftCoeffs = dft(pcv);\r\n      dftCoeffs = dftCoeffs.map((coeff) => {\r\n        return { x: coeff.re, y: coeff.im };\r\n      });\r\n      //console.log(dftCoeffs);\r\n      setMidiDevNotesDftCoeffs(dftCoeffs);\r\n    }\r\n\r\n    function handleInput(input) {\r\n      const command = input.data[0];\r\n      const note = Tone.Frequency(input.data[1], 'midi').toNote();\r\n      const velocity = Math.round(input.data[2] * 0.05);\r\n      //const velocity = input.data[2];\r\n\r\n      switch (command) {\r\n        case 144: //noteOn\r\n          if (velocity > 0) {\r\n            //Note is on\r\n            sampler.triggerAttack(note, Tone.immediate(), velocity);\r\n            currentNotes.push(note);\r\n          } else {\r\n            //Note is off\r\n            sampler.triggerRelease(note, Tone.immediate());\r\n            currentNotes.filter((currentNote) => currentNote !== note);\r\n          }\r\n          break;\r\n        case 128: //noteOff\r\n          sampler.triggerRelease(note, Tone.immediate());\r\n          currentNotes = currentNotes.filter(\r\n            (currentNote) => currentNote !== note\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      computeDftCoeffs(currentNotes);\r\n    }\r\n\r\n    function success(midiAccess) {\r\n      midiAccess.onstatechange = updateDevices;\r\n\r\n      const inputs = midiAccess.inputs;\r\n\r\n      inputs.forEach((input) => {\r\n        input.onmidimessage = handleInput;\r\n      });\r\n    }\r\n\r\n    function failure() {\r\n      console.log('Could not connect MIDI');\r\n    }\r\n\r\n    function updateDevices(event) {\r\n      console.log(\r\n        `Name: ${event.port.name}, Brand: ${event.port.manufacturer}, State: ${event.port.state}, Type: ${event.port.type}`\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  function toggleShowPrototypes() {\r\n    setShowPrototypes(!showPrototypes);\r\n  }\r\n\r\n  function retriggerAnalysis() {\r\n    //Circles dynamic analysis\r\n    let { tracesData, resolution } = getDftCoeffDynamic(\r\n      currentSongMidiData,\r\n      resolutionMode,\r\n      currentSongBPM\r\n    );\r\n    setCoeffTracesData(tracesData);\r\n    setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Player />\r\n\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              onChange={() => toggleShowPrototypes()}\r\n              checked={showPrototypes}\r\n            />\r\n          }\r\n          label='Show Prototypes'\r\n        />\r\n      </FormGroup>\r\n\r\n      <Box\r\n        component='form'\r\n        sx={{\r\n          '& > :not(style)': { m: 1, width: '25ch' },\r\n        }}\r\n        noValidate\r\n        autoComplete='off'\r\n      >\r\n        <TextField\r\n          id='outlined-basic'\r\n          label='Pitch class vector'\r\n          variant='outlined'\r\n          onKeyPress={(event) => {\r\n            if (event.key === 'Enter')\r\n              handleSubmitPitchClass(pcvTextRef.current.value);\r\n          }}\r\n          inputRef={pcvTextRef}\r\n        />\r\n      </Box>\r\n\r\n      <div>\r\n        <label htmlFor='file'>\r\n          <input\r\n            style={{ display: 'none' }}\r\n            type='file'\r\n            id='file'\r\n            name='file'\r\n            value={file}\r\n            onChange={(e) => setFile(e.target.value)}\r\n          />\r\n          <Button variant='contained' color='primary' component='span'>\r\n            Upload MIDI\r\n          </Button>\r\n        </label>\r\n      </div>\r\n\r\n      <ResolutionSelector\r\n        setResolutionMode={setResolutionMode}\r\n        resolutionMode={resolutionMode}\r\n      />\r\n      <Button variant='contained' color='primary' onClick={retriggerAnalysis}>\r\n        Change resolution\r\n      </Button>\r\n\r\n      <Container>\r\n        <Divider />\r\n        <WavescapeModule wavescapesData={wavescapesData} />\r\n        <Divider />\r\n        <CoefficientsModule\r\n          coeffTracesData={coeffTracesData}\r\n          currentSubdiv={currentSubdiv}\r\n          showPrototypes={showPrototypes}\r\n          userPcvs={userPcvs}\r\n          midiDevNotesDftCoeffs={midiDevNotesDftCoeffs}\r\n        />\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Application;\r\n","import Navbar from './Navbar';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\n\r\n//Pages\r\nimport Home from './pages/Home';\r\nimport Visualization from './pages/Visualization';\r\nimport Live from './pages/Live';\r\nimport Keyboard from './pages/Keyboard';\r\nimport Application from './pages/Application';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path='/' component={Home}></Route>\r\n          <Route exact path='/visualization' component={Visualization}></Route>\r\n          <Route exact path='/live' component={Live}></Route>\r\n          <Route exact path='/keyboard' component={Keyboard}></Route>\r\n          <Route exact path='/analysis' component={Application}></Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}