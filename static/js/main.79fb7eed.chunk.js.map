{"version":3,"sources":["Navbar.js","colorMapping.js","DrawCircles.js","Player.js","DFT.js","getDftMatrices.js","roses.js","svgNotation/whole.svg","svgNotation/half.svg","svgNotation/quarter.svg","svgNotation/eighth.svg","svgNotation/sixteenth.svg","ResolutionSelector.js","PcvChipsBox.js","Markdown.js","HomeMarkdown.md","pages/Home.js","TheoryMarkdown.md","pages/Theory.js","Wavescape.js","WavescapeModule.js","Circle.js","prototypesData.js","CoefficientsModule.js","pages/Analysis.js","App.js","parser.js","index.js"],"names":["AppBar","styled","MuiAppBar","shouldForwardProp","prop","theme","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","Navbar","setOpen","inAnalysisPage","Box","sx","flexGrow","position","Toolbar","IconButton","disabled","color","onClick","edge","mr","display","Typography","variant","component","ButtonGroup","Button","Link","to","disableElevation","contToDiscRGB","d3","domain","range","gradient","angle","r","g","b","math","pixelColor","x","y","distance","Math","atan2","PI","a","getRgbaFromComplex","complex","polarComplex","toPolar","phi","mod","ris","slice","part","intervalID","DrawCircles","printablePitchClasses","traceData","userPcv","currentSubdiv","coeffNumber","innerWidth","traces","length","tData","j","temp","i","roundedRe","round","re","roundedIm","im","push","console","log","theta","angles","circularSectors","circleMark","pcvData","radiusScaleWidth","mark","innerRadius","outerRadius","startAngle","endAngle","transform","fill","d","id","xmlns","height","map","index","inner","offset","fillOpacity","stroke","strokeOpacity","arc","pc","coeff","includes","pcv","k","dot","traceDot","drawTrace","highlightSubdiv","currentSongDuration","TinyText","fontSize","opacity","fontWeight","letterSpacing","formatDuration","value","minute","floor","secondLeft","setPlayerMidiData","midiData","resolution","setCurrentSubdiv","Tone","cancel","stop","partNotes","tracks","forEach","track","notes","note","subdiv","time","sampler","triggerAttackRelease","name","velocity","start","loop","loopEnd","urls","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","release","baseUrl","toDestination","Player","fileName","currentWavescapeSubdiv","useState","playbackSliderProgress","setPlaybackSliderProgress","flexDirection","alignItems","justifyContent","Stack","direction","paddingLeft","padding","stopInterval","size","children","pause","state","resume","setInterval","progress","noWrap","paddingRight","Slider","onChange","event","newValue","seconds","mt","clearInterval","volume","dft","normalize","polar","N","coeffs","n","norm","sumAndNormalize","sum","Pcv","this","C","Cs","D","Ds","E","F","Fs","G","Gs","A","As","B","targetPitch","getDftCoeffDynamic","resolutionMode","currentSongBPM","noteResolutionValue","useSeconds","isNaN","tracksSubdivision","filter","instrument","percussion","getSubdivision","pcvSubdivision","pitch","addNoteDuration","dftCoeffsSubdivision","getPcvAsArray","dftCoeffsMatrix","firstRow","tracesData","subdivision","wndLen","cursor","isValidNote","noteAndDuration","getRosePoints","dataPoints","delta","cos","sin","ResolutionSelector","setResolutionMode","retriggerAnalysis","isInputSecondsInvalid","setIsInputSecondsInvalid","resolutionTextRef","useRef","FormControl","RadioGroup","row","defaultValue","newResolutionMode","parseFloat","current","target","FormControlLabel","control","Radio","label","style","src","sixteenthSvg","eighthSvg","marginTop","quarterSvg","halfSvg","wholeSvg","TextField","minHeight","maxWidth","error","helperText","inputRef","ListItem","margin","spacing","PcvChipsBox","userPcvs","setUserPcvs","rosesMat","Paper","flexWrap","listStyle","p","overflow","data","Chip","isDisabled","icon","viewBox","strokeWidth","points","rosePoints","onDelete","chipToDelete","used","chips","chip","options","overrides","h1","props","gutterBottom","h2","h3","h4","paragraph","myRef","React","parseInt","href","ref","preventDefault","scrollIntoView","behavior","li","typography","Markdown","Home","setInAnalysisPage","content","setContent","useEffect","fetch","HomeMarkdown","then","response","text","Theory","TheoryMarkdown","verticalScale","Wavescape","ticks","wsNumber","wavescapeMatrix","wavescapeWidth","canvasRef","wsCoordinates","setWsCoordinates","baseSubdivision","canvas","ctx","getContext","margins","innerSize","clearRect","innerHeight","unit","mat","computeTicks","beginPath","moveTo","lineTo","fillStyle","drawWavescape","cx","cy","textAnchor","coord","x1","x2","y1","y2","WavescapeModule","wavescapesData","elemsWidth","savedImage","Circle","protoDataCoeff","traceDataCoeff","userPcvsCoeff","performanceCoeff","targetCircleWidth","showMagAndPhase","showFullTrace","mu","currentSubdivCoeff","setCurrentSubdivCoeff","circleRadius","marksRadiusRatio","cartesianToPolar","sqrt","Number","EPSILON","element","radius","devicePixelRatio","image","createImageData","scale","rgba","putImageData","save","translate","restore","getImageData","marginBottom","zIndex","scaleRatio","labelName","subSup","isSub","dxOffset","sign","dyOffset","dx","dy","baselineShift","protoCircleMark","translateX","translateY","polarCoord","widthSvg","Tooltip","placement","arrow","title","svgRoseIcon","highlight","opacityArray","reverse","prototypesData","CoefficientsModule","coeffTracesData","showPrototypes","midiDevNotesDftCoeffs","selectedProtoPitchClasses","setSelectedProtoPitchClasses","subdivUserPcvs","setSubdivUserPcvs","tempSubdivUserPcvs","coeffNum","Application","currentSongMidiData","setShowPrototypes","setShowMagAndPhase","setShowFullTrace","setMidiDevNotesDftCoeffs","accordionRef","accordionWidth","setAccordionWidth","elemsForEachRow","setElemsForEachRow","setElemsWidth","changeElementsSize","drawerOffset","adjustmentFractSizes","clientWidth","handleResize","window","addEventListener","currentNotes","handleInput","input","command","toNote","triggerAttack","triggerRelease","currentNote","playedNotes","dftCoeffs","computeDftCoeffs","updateDevices","port","manufacturer","type","navigator","requestMIDIAccess","midiAccess","onstatechange","inputs","onmidimessage","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","top","bottom","maxHeight","FormGroup","Switch","checked","minWidth","min","max","valueLabelDisplay","marks","fullWidth","InputLabel","Select","MenuItem","Main","backgroundColor","DrawerHeader","mixins","toolbar","App","useTheme","file","setFile","setWavescapesData","setCoeffTracesData","wavescapeResolution","setWavescapeResolution","circleResolution","setCircleResolution","pcvTextRef","isInputPcvInvalid","setIsInputPcvInvalid","setRosesMat","handleSubmitPitchClass","parsedInput","userPcvObjects","pcvs","isGroup","isSet","stringGroup","Error","join","numeralInput","count","num","lastNum","bin","parse","message","pcvObj","found","usable","document","getElementById","files","fileReader","FileReader","readAsArrayBuffer","onload","loadedFile","binMidiFile","Midi","tempos","header","tempo","bpm","midiBpm","nonPercussiveTracks","getMidiFileDataObject","result","staticResolution","matrixHeight","rowsWidth","wndLenUnits","windowed","rgbaMatrices","matrix","getRgbaMatrix","midiFile","getDftCoeffStatic","initMatrix","rose","exPcvObjects","toString","CssBaseline","Drawer","flexShrink","boxSizing","anchor","htmlFor","e","Divider","noValidate","autoComplete","key","zip","JSZip","svg","circleSVG","ReactDOMServer","renderToStaticMarkup","generateCircleSVG","generateAsync","saveAs","exact","path","render","Analysis","customTheme","createTheme","palette","primary","main","secondary","background","default","ReactDOM","StrictMode","ThemeProvider"],"mappings":"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","file":"static/js/main.79fb7eed.chunk.js","sourcesContent":["import React from 'react';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\n\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create(['margin', 'width'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: `${drawerWidth}px`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nexport default function Navbar({ open, setOpen, inAnalysisPage }) {\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position='static' open={open}>\r\n        <Toolbar>\r\n          <IconButton\r\n            disabled={!inAnalysisPage}\r\n            color='inherit'\r\n            aria-label='open drawer'\r\n            onClick={handleDrawerOpen}\r\n            edge='start'\r\n            sx={{ mr: 2, ...(open && { display: 'none' }) }}\r\n          >\r\n            <ChevronRightIcon />\r\n          </IconButton>\r\n          <Typography variant='h3' component='div' sx={{ flexGrow: 1 }}>\r\n            Mi_DFT\r\n          </Typography>\r\n          <ButtonGroup aria-label='outlined button group'>\r\n            <Button\r\n              component={Link}\r\n              to='/'\r\n              variant='contained'\r\n              disableElevation={true}\r\n            >\r\n              Home\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/theory'\r\n              variant='contained'\r\n              disableElevation={true}\r\n            >\r\n              Theory\r\n            </Button>\r\n            <Button\r\n              component={Link}\r\n              to='/analysis'\r\n              variant='contained'\r\n              disableElevation={true}\r\n            >\r\n              Analysis\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n","import * as d3 from 'd3';\r\nimport * as math from 'mathjs';\r\n\r\n//Convert rgb values from [0,1] to [0,255]\r\nconst contToDiscRGB = d3\r\n  .scaleQuantize()\r\n  .domain([0, 1])\r\n  .range(d3.range(0, 255, 1));\r\n\r\n//Generate the color space using the color mapping suggested in the paper\r\nexport const gradient = (angle) => {\r\n  let r, g, b;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\n//Generate the color space using the color mapping suggested in the paper\r\nexport const pixelColor = (x, y, distance) => {\r\n  let r, g, b, a;\r\n  //atan2 out in [-pi, pi]\r\n  let angle = Math.atan2(y, x);\r\n  angle = -angle;\r\n  //we need it in [0, 2pi]\r\n  if (angle < 0) angle += 2 * Math.PI;\r\n\r\n  if (angle >= 0 && angle < math.pi / 3) {\r\n    r = 1;\r\n    g = (3 * angle) / math.pi;\r\n    b = 0;\r\n  } else if (angle >= math.pi / 3 && angle < (math.pi * 2) / 3) {\r\n    r = 2 - (3 * angle) / math.pi;\r\n    g = 1;\r\n    b = 0;\r\n  } else if (angle >= (math.pi * 2) / 3 && angle < math.pi) {\r\n    r = 0;\r\n    g = 1;\r\n    b = (3 * angle) / math.pi - 2;\r\n  } else if (angle >= math.pi && angle < (math.pi * 4) / 3) {\r\n    r = 0;\r\n    g = 4 - (3 * angle) / math.pi;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 4) / 3 && angle < (math.pi * 5) / 3) {\r\n    r = (3 * angle) / math.pi - 4;\r\n    g = 0;\r\n    b = 1;\r\n  } else if (angle >= (math.pi * 5) / 3 && angle < 2 * math.pi) {\r\n    r = 1;\r\n    g = 0;\r\n    b = 6 - (3 * angle) / math.pi;\r\n  }\r\n\r\n  r = contToDiscRGB(r);\r\n  g = contToDiscRGB(g);\r\n  b = contToDiscRGB(b);\r\n  a = contToDiscRGB(distance);\r\n\r\n  return { r, g, b, a };\r\n};\r\n\r\nexport function getRgbaFromComplex(complex) {\r\n  let polarComplex = complex.toPolar();\r\n  let angle = polarComplex.phi; // phi from [-pi, pi], but color mapping defined in [0,2pi]\r\n  let mod = polarComplex.r;\r\n\r\n  //negative angle mapped to their positive representation\r\n  if (angle < 0) angle += 2 * math.pi;\r\n\r\n  let ris = gradient(angle).slice(3, -1);\r\n\r\n  return `rgba${ris}, ${mod})`;\r\n}\r\n","import * as d3 from 'd3';\r\nimport * as math from 'mathjs';\r\nimport { gradient } from './colorMapping';\r\n//import { useEffect, useRef } from 'react';\r\n\r\n//Minus before every y coordinate due to the fact that svg has positive y\r\n//downward, meanwhile cartesian plane has positive y upward\r\n\r\nexport const DrawCircles = ({\r\n  printablePitchClasses,\r\n  traceData,\r\n  userPcv,\r\n  currentSubdiv,\r\n  coeffNumber,\r\n}) => {\r\n  //Size and N number of subdivisions of the arches\r\n  const width = 300;\r\n  const height = width;\r\n  const innerWidth = 0.9 * width;\r\n  //const innerHeight = innerWidth;\r\n  const N = 100;\r\n  const K = 50;\r\n\r\n  //console.log(traceData);\r\n\r\n  /* const canvasRef = useRef(null);\r\n\r\n   useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    //ctx.setTransform(1, 0, 0, -1, 0, ctx.canvas.height);\r\n\r\n    let margins = [100, 100];\r\n    let innerSize = [canvas.width - margins[0], canvas.height - margins[1]];\r\n  }, []); */\r\n\r\n  let traces = [];\r\n\r\n  if (traceData.length > 0) {\r\n    let tData = traceData[0];\r\n\r\n    for (let j = 1; j < tData[0].length; j++) {\r\n      let temp = [];\r\n      for (let i = 0; i < tData.length; i++) {\r\n        let roundedRe = Math.round(tData[i][j].re * 10000) / 10000;\r\n        let roundedIm = Math.round(tData[i][j].im * 10000) / 10000;\r\n\r\n        temp.push({ re: roundedRe, im: roundedIm });\r\n      }\r\n      traces.push(temp);\r\n    }\r\n  }\r\n\r\n  const drawTrace = (traceDot, i, j) => {\r\n    const dot = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius(3)\r\n      .startAngle(0)\r\n      .endAngle(2 * math.pi);\r\n\r\n    return (\r\n      <path\r\n        transform={`translate(${(traceDot.re * innerWidth) / 2},${\r\n          -(traceDot.im * innerWidth) / 2\r\n        })`}\r\n        fill={'black'}\r\n        key={`trace${i}.${j}`}\r\n        d={dot()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  console.log(currentSubdiv);\r\n\r\n  /* const outerRadius = (0.9 * height) / 2;\r\n  const innerRadius = (0.7 * height) / 2; */\r\n\r\n  const theta = (2 * math.pi) / N;\r\n  const angles = d3.range(0, 2 * math.pi, theta);\r\n  const circularSectors = d3.range(0, 1, 1 / K);\r\n\r\n  //Generates all the arches that compose the circle\r\n  const arc = (angle, id, index, inner) => {\r\n    const offset = -math.pi / 2;\r\n\r\n    const d = d3\r\n      .arc()\r\n      .innerRadius((inner * innerWidth) / 2)\r\n      .outerRadius(((inner + 1 / K) * innerWidth) / 2)\r\n      .startAngle(-(angle + offset))\r\n      .endAngle(-(angle + theta + offset));\r\n\r\n    return (\r\n      <path\r\n        key={`${index}.${id}`}\r\n        fill={gradient(angle)}\r\n        fillOpacity={inner}\r\n        stroke={gradient(angle)}\r\n        strokeOpacity={inner / 10}\r\n        d={d()}\r\n        /* shapeRendering={'geometricPrecision'} */\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const circleMark = (pcvData, radiusScaleWidth, color) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius((radiusScaleWidth * width) / 2)\r\n      .outerRadius(((radiusScaleWidth + 0.01) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * math.pi);\r\n\r\n    return (\r\n      <path\r\n        transform={`translate(${(pcvData.x * innerWidth) / 2},${\r\n          -(pcvData.y * innerWidth) / 2\r\n        })`}\r\n        fill={color}\r\n        key={pcvData.id}\r\n        d={mark()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const highlightSubdiv = (i) => {\r\n    return (\r\n      <path\r\n        transform={`translate(${\r\n          (traces[i][currentSubdiv].re * innerWidth) / 2\r\n        },${-(traces[i][currentSubdiv].im * innerWidth) / 2})`}\r\n        fill={'white'}\r\n        key={`currentSubdiv${currentSubdiv}`}\r\n        d={d3\r\n          .arc()\r\n          .innerRadius((0.03 * width) / 2)\r\n          .outerRadius(((0.05 + 0.01) * width) / 2)\r\n          .startAngle(0)\r\n          .endAngle(2 * math.pi)()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      key={`circle${coeffNumber}`}\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <g transform={`translate(${width / 2},${height / 2})`}>\r\n        {circularSectors.map((innerRadius) =>\r\n          angles.map((angle, id) => arc(angle, id, coeffNumber, innerRadius))\r\n        )}\r\n      </g>\r\n      {/* <canvas width={width} height={height} ref={canvasRef}></canvas> */}\r\n      <g transform={`translate(${width / 2},${width / 2})`}>\r\n        {printablePitchClasses.map((pc) => {\r\n          if (pc.coeff.includes(coeffNumber + 1)) {\r\n            return circleMark(pc, 0.05, 'grey');\r\n          } else;\r\n          return null;\r\n        })}\r\n      </g>\r\n      <g transform={`translate(${width / 2},${width / 2})`}>\r\n        {userPcv.map((pcv, k) => {\r\n          return pcv.map((coeff, j) => {\r\n            if (j > 0 && coeffNumber + 1 === j) {\r\n              return circleMark(\r\n                {\r\n                  x: coeff.re,\r\n                  y: coeff.im,\r\n                  id: `userpcv${coeffNumber}.${k}.${j}`,\r\n                },\r\n                0.03,\r\n                'navy'\r\n              );\r\n            } else return null;\r\n          });\r\n        })}\r\n      </g>\r\n      <g transform={`translate(${width / 2},${width / 2})`}>\r\n        {traces.length > 1\r\n          ? traces[coeffNumber].map((dot, j) => drawTrace(dot, coeffNumber, j))\r\n          : null}\r\n      </g>\r\n      <g transform={`translate(${width / 2},${width / 2})`}>\r\n        {traces.length > 1 ? highlightSubdiv(coeffNumber) : null}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n","import * as Tone from 'tone';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Stack from '@mui/material/Stack';\r\nimport PlayArrowRoundedIcon from '@mui/icons-material/PlayArrowRounded';\r\nimport PauseRoundedIcon from '@mui/icons-material/PauseRounded';\r\nimport StopRoundedIcon from '@mui/icons-material/StopRounded';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Slider from '@mui/material/Slider';\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nlet part;\r\nlet currentSongDuration = 0; // seconds\r\nlet intervalID;\r\n\r\nconst TinyText = styled(Typography)({\r\n  fontSize: '0.75rem',\r\n  opacity: 0.38,\r\n  fontWeight: 500,\r\n  letterSpacing: 0.2,\r\n});\r\n\r\nfunction formatDuration(value) {\r\n  const minute = Math.floor(value / 60);\r\n  const secondLeft = Math.floor(value - minute * 60);\r\n  return `${minute}:${secondLeft < 9 ? `0${secondLeft}` : secondLeft}`;\r\n}\r\n\r\nexport function setPlayerMidiData(midiData, resolution, setCurrentSubdiv) {\r\n  //Remove the scheduled previous song\r\n  Tone.Transport.cancel(0);\r\n  setCurrentSubdiv(0);\r\n  Tone.Transport.stop();\r\n\r\n  currentSongDuration = midiData.duration;\r\n\r\n  let partNotes = [];\r\n  midiData.tracks.forEach((track) =>\r\n    track.notes.forEach((note) => {\r\n      partNotes.push(note);\r\n    })\r\n  );\r\n\r\n  partNotes.forEach((note) => {\r\n    note.subdiv = Math.floor(note.time / resolution);\r\n  });\r\n\r\n  part = new Tone.Part(\r\n    (time, note) => {\r\n      sampler.triggerAttackRelease(\r\n        note.name,\r\n        note.duration,\r\n        time,\r\n        note.velocity\r\n      );\r\n      setCurrentSubdiv(note.subdiv);\r\n    },\r\n    [...partNotes]\r\n  ).start(0);\r\n\r\n  part.loop = true;\r\n  part.loopEnd = currentSongDuration;\r\n}\r\n\r\nconst sampler = new Tone.Sampler({\r\n  urls: {\r\n    A0: 'A0.mp3',\r\n    C1: 'C1.mp3',\r\n    'D#1': 'Ds1.mp3',\r\n    'F#1': 'Fs1.mp3',\r\n    A1: 'A1.mp3',\r\n    C2: 'C2.mp3',\r\n    'D#2': 'Ds2.mp3',\r\n    'F#2': 'Fs2.mp3',\r\n    A2: 'A2.mp3',\r\n    C3: 'C3.mp3',\r\n    'D#3': 'Ds3.mp3',\r\n    'F#3': 'Fs3.mp3',\r\n    A3: 'A3.mp3',\r\n    C4: 'C4.mp3',\r\n    'D#4': 'Ds4.mp3',\r\n    'F#4': 'Fs4.mp3',\r\n    A4: 'A4.mp3',\r\n    C5: 'C5.mp3',\r\n    'D#5': 'Ds5.mp3',\r\n    'F#5': 'Fs5.mp3',\r\n    A5: 'A5.mp3',\r\n    C6: 'C6.mp3',\r\n    'D#6': 'Ds6.mp3',\r\n    'F#6': 'Fs6.mp3',\r\n    A6: 'A6.mp3',\r\n    C7: 'C7.mp3',\r\n    'D#7': 'Ds7.mp3',\r\n    'F#7': 'Fs7.mp3',\r\n    A7: 'A7.mp3',\r\n    C8: 'C8.mp3',\r\n  },\r\n  release: 1,\r\n  baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n}).toDestination();\r\nsampler.volume.value = -20;\r\n\r\nexport default function Player({ fileName, currentWavescapeSubdiv }) {\r\n  const [playbackSliderProgress, setPlaybackSliderProgress] = useState(0);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        width: '60%',\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Stack direction='row' sx={{ flexGrow: 1, paddingLeft: '10%' }}>\r\n          <IconButton\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('stop');\r\n              Tone.Transport.stop();\r\n              stopInterval();\r\n            }}\r\n            size='large'\r\n            children={<StopRoundedIcon fontSize='large' />}\r\n          />\r\n          <IconButton\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('pause');\r\n              Tone.Transport.pause();\r\n              stopInterval();\r\n            }}\r\n            size='large'\r\n            children={<PauseRoundedIcon fontSize='large' />}\r\n          />\r\n          <IconButton\r\n            sx={{ padding: '0' }}\r\n            onClick={() => {\r\n              console.log('play');\r\n              if (Tone.context.state !== 'running') {\r\n                console.log('state running');\r\n                Tone.context.resume();\r\n              }\r\n              Tone.Transport.start();\r\n              if (!intervalID && part)\r\n                intervalID = setInterval(\r\n                  () => setPlaybackSliderProgress(part.progress),\r\n                  1000\r\n                );\r\n            }}\r\n            size='large'\r\n            children={<PlayArrowRoundedIcon fontSize='large' />}\r\n          />\r\n        </Stack>\r\n        <Typography\r\n          color={fileName ? 'primary' : 'error'}\r\n          noWrap={true}\r\n          sx={{ flexGrow: '2', paddingRight: '10%' }}\r\n        >\r\n          {fileName ? fileName : 'No midi file uploaded'}\r\n        </Typography>\r\n      </Box>\r\n      <Slider\r\n        aria-label='Playback'\r\n        size='small'\r\n        value={playbackSliderProgress ? playbackSliderProgress * 100 : 0}\r\n        onChange={(event, newValue) => {\r\n          setPlaybackSliderProgress(newValue / 100);\r\n          Tone.Transport.seconds = (newValue / 100) * currentSongDuration;\r\n        }}\r\n        sx={{ width: '90%' }}\r\n      />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          width: '90%',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          mt: -1,\r\n        }}\r\n      >\r\n        <TinyText>\r\n          -\r\n          {formatDuration(\r\n            currentSongDuration - playbackSliderProgress * currentSongDuration\r\n          )}\r\n        </TinyText>\r\n        <TinyText>{formatDuration(currentSongDuration)}</TinyText>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction stopInterval() {\r\n  clearInterval(intervalID);\r\n  // release our intervalID from the variable\r\n  intervalID = null;\r\n}\r\n","import * as math from 'mathjs';\r\n\r\n// Compute the DFT on the input pcv\r\nexport default function dft(\r\n  pcv,\r\n  normalize = true,\r\n  round = false,\r\n  polar = false\r\n) {\r\n  let N = pcv.length;\r\n\r\n  let coeffs = [];\r\n\r\n  for (let k = 0; k < N / 2 + 1; k++) {\r\n    let temp = 0;\r\n    for (let n = 0; n < N; n++) {\r\n      temp = math.add(\r\n        math.multiply(\r\n          pcv[n],\r\n          math.exp(math.multiply(math.i, (-2 * math.pi * k * n) / N))\r\n        ),\r\n        temp\r\n      );\r\n    }\r\n    coeffs.push(temp);\r\n  }\r\n\r\n  coeffs = coeffs.slice();\r\n\r\n  if (normalize) {\r\n    const norm = coeffs[0];\r\n    //'!=' gives a warning but '!==' doesn't compute correctly the if statement\r\n    if (norm != 0) coeffs = coeffs.map((coeff) => math.divide(coeff, norm));\r\n  }\r\n\r\n  if (round) {\r\n    coeffs.forEach((coeff) => {\r\n      coeff.re = Math.round(coeff.re * 10000) / 10000;\r\n      coeff.im = Math.round(coeff.im * 10000) / 10000;\r\n    });\r\n  }\r\n\r\n  if (polar) {\r\n    coeffs = coeffs.map((coeff) => coeff.toPolar());\r\n  }\r\n\r\n  return coeffs;\r\n}\r\n\r\nexport function sumAndNormalize(coeffs) {\r\n  let sum = coeffs[0];\r\n  for (let i = 1; i < coeffs.length; i++) {\r\n    //incremental sum for each coeff\r\n    let temp = [];\r\n    //coeff per coeff sum\r\n    for (let j = 0; j < coeffs[i].length; j++) {\r\n      temp.push(math.add(sum[j], coeffs[i][j]));\r\n    }\r\n    sum = temp.slice();\r\n  }\r\n\r\n  const norm = sum[0];\r\n  sum = sum.map((coeff) => math.divide(coeff, norm));\r\n\r\n  return sum;\r\n}\r\n","import { Midi } from '@tonejs/midi';\r\nimport dft, { sumAndNormalize } from './DFT';\r\nimport { getRgbaFromComplex, pixelColor } from './colorMapping';\r\n\r\nclass Pcv {\r\n  constructor() {\r\n    this.C = 0;\r\n    this.Cs = 0;\r\n    this.D = 0;\r\n    this.Ds = 0;\r\n    this.E = 0;\r\n    this.F = 0;\r\n    this.Fs = 0;\r\n    this.G = 0;\r\n    this.Gs = 0;\r\n    this.A = 0;\r\n    this.As = 0;\r\n    this.B = 0;\r\n  }\r\n\r\n  addNoteDuration(targetPitch, duration) {\r\n    switch (targetPitch) {\r\n      case 'C':\r\n        this.C += duration;\r\n        break;\r\n      case 'C#':\r\n        this.Cs += duration;\r\n        break;\r\n      case 'D':\r\n        this.D += duration;\r\n        break;\r\n      case 'D#':\r\n        this.Ds += duration;\r\n        break;\r\n      case 'E':\r\n        this.E += duration;\r\n        break;\r\n      case 'F':\r\n        this.F += duration;\r\n        break;\r\n      case 'F#':\r\n        this.Fs += duration;\r\n        break;\r\n      case 'G':\r\n        this.G += duration;\r\n        break;\r\n      case 'G#':\r\n        this.Gs += duration;\r\n        break;\r\n      case 'A':\r\n        this.A += duration;\r\n        break;\r\n      case 'A#':\r\n        this.As += duration;\r\n        break;\r\n      case 'B':\r\n        this.B += duration;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  getPcvAsArray() {\r\n    let temp = [\r\n      this.C,\r\n      this.Cs,\r\n      this.D,\r\n      this.Ds,\r\n      this.E,\r\n      this.F,\r\n      this.Fs,\r\n      this.G,\r\n      this.Gs,\r\n      this.A,\r\n      this.As,\r\n      this.B,\r\n    ];\r\n\r\n    return temp;\r\n  }\r\n\r\n  add(pcv) {\r\n    this.C = pcv.C;\r\n    this.Cs = pcv.Cs;\r\n    this.D = pcv.D;\r\n    this.Ds = pcv.Ds;\r\n    this.E = pcv.E;\r\n    this.F = pcv.F;\r\n    this.Fs = pcv.Fs;\r\n    this.G = pcv.G;\r\n    this.Gs = pcv.Gs;\r\n    this.A = pcv.A;\r\n    this.As = pcv.As;\r\n    this.B = pcv.B;\r\n  }\r\n}\r\n\r\nexport function getMidiFileDataObject(binMidiFile) {\r\n  let midiData = new Midi(binMidiFile);\r\n\r\n  let tempos = midiData.header.tempos.map((tempo) => Math.round(tempo.bpm));\r\n  let midiBpm = Math.max(...tempos); //For quarter-note conversion\r\n\r\n  //Check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  midiData.tracks = nonPercussiveTracks;\r\n\r\n  return { midiData, midiBpm };\r\n}\r\n\r\nexport function getDftCoeffStatic(midiFile, resolution) {\r\n  let tracksSubdivision = [];\r\n\r\n  midiFile.tracks.forEach((track) =>\r\n    tracksSubdivision.push(\r\n      getSubdivision(track.notes, resolution, midiFile.duration)\r\n    )\r\n  );\r\n  //console.log(tracksSubdivision);\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return dftCoeffsMatrix;\r\n}\r\n\r\nexport function getDftCoeffDynamic(midiData, resolutionMode, currentSongBPM) {\r\n  let { noteResolutionValue, seconds, useSeconds } = resolutionMode;\r\n\r\n  let resolution;\r\n  if (useSeconds) {\r\n    isNaN(seconds) ? (resolution = 1) : (resolution = seconds);\r\n  } else {\r\n    //Use bpm\r\n    resolution = noteResolutionValue * (60 / currentSongBPM);\r\n  }\r\n\r\n  //console.log(currentSongBPM);\r\n  //console.log(resolution);\r\n\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  //Subdividing the first row of the dft coeff matrix to get the trace for each coeff\r\n  let traces = [];\r\n  let firstRow = dftCoeffsMatrix[0];\r\n  for (let i = 1; i < 7; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < firstRow.length; j++) {\r\n      temp.push({ x: firstRow[j][i].re, y: firstRow[j][i].im });\r\n    }\r\n    traces.push(temp);\r\n  }\r\n\r\n  return { tracesData: traces, resolution: resolution };\r\n}\r\n\r\n//Resolution is in seconds\r\nexport function getDftCoeffFromMidiLinear(\r\n  midiFile,\r\n  multiRes = 1,\r\n  seconds = 1,\r\n  useSeconds\r\n) {\r\n  //For now, we don't take into account tempo changes\r\n  let midiData = new Midi(midiFile);\r\n  console.log(midiData);\r\n\r\n  let resolution;\r\n  if (useSeconds) {\r\n    isNaN(seconds) ? (resolution = 1) : (resolution = seconds);\r\n  } else {\r\n    //Use bpm\r\n    let tempos = midiData.header.tempos.map((tempo) => Math.round(tempo.bpm));\r\n    let bpm = Math.max(...tempos); //For quarter-note conversion\r\n    resolution = multiRes * (60 / bpm);\r\n  }\r\n\r\n  console.log(resolution);\r\n\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return { dftCoeffsLinear: dftCoeffsMatrix, resolution: resolution };\r\n}\r\n\r\n//Resolution is in seconds\r\nexport function getDftCoeffFromMidi(midiFile, resolution) {\r\n  //For now, we don't take into account tempo changes\r\n  let midiData = new Midi(midiFile);\r\n  console.log(midiData);\r\n  //const bpm = midiData.header.tempos[0].bpm; //For quarter-note conversion\r\n  let duration = midiData.duration;\r\n  let tracksSubdivision = [];\r\n\r\n  //TODO: check and delete percussive tracks!\r\n  let nonPercussiveTracks = midiData.tracks.filter(\r\n    (track) => track.instrument.percussion === false\r\n  );\r\n\r\n  /* midiData.tracks.forEach((track) => {\r\n    let tempMat = [];\r\n\r\n    for (let wndLen = resolution; wndLen < duration; wndLen += resolution) {\r\n      tempMat.push(getRow(track.notes, wndLen, resolution, duration));\r\n    }\r\n    //Since wndLen < duration, the for cycle do not include the top vertex of the triangle\r\n    tempMat.push(getRow(track.notes, duration, duration, duration)); //manually added\r\n\r\n    trackMatrices.push(tempMat);\r\n  }); */\r\n\r\n  nonPercussiveTracks.forEach((track) => {\r\n    tracksSubdivision.push(getSubdivision(track.notes, resolution, duration));\r\n  });\r\n\r\n  //pcv arrary init\r\n  let pcvSubdivision = [];\r\n\r\n  for (let i = 0; i < tracksSubdivision[0].length; i++) {\r\n    pcvSubdivision.push(new Pcv());\r\n  }\r\n\r\n  //populating the array for each subdiv with the durations\r\n  //for each track: i, for each subdiv: j, for each note of the subdiv: k\r\n  for (let i = 0; i < tracksSubdivision.length; i++) {\r\n    for (let j = 0; j < tracksSubdivision[i].length; j++) {\r\n      for (let k = 0; k < tracksSubdivision[i][j].length; k++) {\r\n        let { pitch, duration } = tracksSubdivision[i][j][k];\r\n        pcvSubdivision[j].addNoteDuration(pitch, duration);\r\n      }\r\n    }\r\n  }\r\n\r\n  //Computing the dft coeffs for of each subdiv\r\n  let dftCoeffsSubdivision = pcvSubdivision.map((pcv) =>\r\n    dft(pcv.getPcvAsArray())\r\n  );\r\n\r\n  //Computing the dft coeffs matrix\r\n  let dftCoeffsMatrix = [];\r\n\r\n  //adding the first row\r\n  dftCoeffsMatrix.push(dftCoeffsSubdivision);\r\n\r\n  return dftCoeffsMatrix;\r\n\r\n  /* OLD   //Computing each row of the matrix as the normalized sum of the previous row (dft as linear op)\r\n  let matrixHeight = dftCoeffsSubdivision.length;\r\n  let rowsWidth = dftCoeffsSubdivision.length;\r\n  for (let i = 1; i < matrixHeight; i++) {\r\n    //starting from second row, first already populated\r\n    let temp = [];\r\n    for (let cursor = 1; cursor < rowsWidth; cursor++) {\r\n      //starting from the second element and backward summing\r\n      temp.push(\r\n        //TODO change, sum subdiv only on first row\r\n        sumAndNormalize(\r\n          dftCoeffsMatrix[i - 1][cursor - 1],\r\n          dftCoeffsMatrix[i - 1][cursor]\r\n        )\r\n      );\r\n    }\r\n    rowsWidth--;\r\n    dftCoeffsMatrix.push(temp);\r\n  } */\r\n}\r\n\r\nexport function getRgbaMatrix(dftCoeffsMatrix) {\r\n  //Computing each row of the matrix as the normalized sum of the previous row (dft as linear op)\r\n  let matrixHeight = dftCoeffsMatrix[0].length;\r\n  let rowsWidth = dftCoeffsMatrix[0].length;\r\n  let wndLenUnits = 2;\r\n  for (let i = 1; i < matrixHeight; i++) {\r\n    //starting from second row, first already populated\r\n    let temp = [];\r\n    for (let cursor = 0; cursor + wndLenUnits <= rowsWidth; cursor++) {\r\n      let windowed = dftCoeffsMatrix[0].slice(cursor, cursor + wndLenUnits);\r\n      temp.push(sumAndNormalize(windowed));\r\n    }\r\n    wndLenUnits++;\r\n    dftCoeffsMatrix.push(temp);\r\n  }\r\n\r\n  /* //Computing the pcvs for each subdivision\r\n  let pcvMatrix = [];\r\n\r\n  for (let i = 0; i < trackMatrices[0].length; i++) {\r\n    let temp = [];\r\n    for (let k = 0; k < trackMatrices[0][i].length; k++) {\r\n      temp.push(new Pcv());\r\n    }\r\n    pcvMatrix.push(temp);\r\n  } */\r\n\r\n  /* trackMatrices.forEach((track) => {\r\n    for (let i = 0; i < track.length; i++) {\r\n      for (let j = 0; j < track[i].length; j++) {\r\n        for (let k = 0; k < track[i][j].length; k++) {\r\n          let { pitch, duration } = track[i][j][k];\r\n          pcvMatrix[i][j].addNoteDuration(pitch, duration);\r\n        }\r\n      }\r\n    }\r\n  }); */\r\n\r\n  /* //Computing the dft coeff matrix\r\n  let dftCoeffMatrix = [];\r\n\r\n  for (let i = 0; i < pcvMatrix.length; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < pcvMatrix[i].length; j++) {\r\n      temp.push(dft(pcvMatrix[i][j].getPcvAsArray()));\r\n    }\r\n    dftCoeffMatrix.push(temp);\r\n  } */\r\n\r\n  let rgbaMatrices = [];\r\n\r\n  for (let i = 0; i < 6; i++) {\r\n    let matrix = [];\r\n    for (let j = 0; j < dftCoeffsMatrix.length; j++) {\r\n      let subdiv = [];\r\n      for (let k = 0; k < dftCoeffsMatrix[j].length; k++) {\r\n        subdiv.push('');\r\n      }\r\n      matrix.push(subdiv);\r\n    }\r\n    rgbaMatrices.push(matrix);\r\n  }\r\n\r\n  //Creating a single matrix for each coefficient with rgba values for each diamond\r\n  for (let i = 0; i < dftCoeffsMatrix.length; i++) {\r\n    for (let j = 0; j < dftCoeffsMatrix[i].length; j++) {\r\n      for (let k = 1; k < dftCoeffsMatrix[i][j].length; k++) {\r\n        rgbaMatrices[k - 1][i][j] = getRgbaFromComplex(\r\n          dftCoeffsMatrix[i][j][k]\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return rgbaMatrices;\r\n}\r\n\r\nfunction getSubdivision(notes, resolution, duration) {\r\n  let subdivision = [];\r\n  let wndLen = resolution;\r\n\r\n  for (let cursor = 0; cursor < duration; cursor += resolution) {\r\n    let temp = [];\r\n    notes.forEach((note) => {\r\n      let { time, duration } = note;\r\n\r\n      //Check if note contribute to the current window\r\n      if (isValidNote(time, duration, cursor, wndLen)) {\r\n        let noteAndDuration = { pitch: note.pitch };\r\n        //Computation of note contribution in the current window\r\n        if (time < cursor) {\r\n          if (time + duration < cursor + wndLen)\r\n            noteAndDuration.duration = time + duration - cursor;\r\n          else noteAndDuration.duration = wndLen;\r\n        } else {\r\n          if (time + duration <= cursor + wndLen)\r\n            noteAndDuration.duration = duration;\r\n          else noteAndDuration.duration = cursor + wndLen - time;\r\n        }\r\n\r\n        temp.push(noteAndDuration);\r\n      }\r\n    });\r\n\r\n    subdivision.push(temp);\r\n  }\r\n\r\n  return subdivision;\r\n}\r\n\r\nfunction isValidNote(time, duration, cursor, wndLen) {\r\n  if (\r\n    (time > cursor && time < cursor + wndLen) ||\r\n    (time + duration > cursor && time + duration < cursor + wndLen) ||\r\n    (time <= cursor && time + duration >= cursor + wndLen)\r\n  ) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getComplementaryColours(coeffs) {\r\n  let colours = [];\r\n\r\n  //Opposite of re and im to get the complementary colour\r\n  coeffs.forEach((coeff) => {\r\n    let rho = Math.sqrt(Math.pow(coeff.re, 2) + Math.pow(coeff.im, 2));\r\n    let rgba = pixelColor(coeff.re, -coeff.im, rho);\r\n\r\n    //RGB complementary\r\n    rgba.r = 255 - rgba.r;\r\n    rgba.g = 255 - rgba.g;\r\n    rgba.b = 255 - rgba.b;\r\n\r\n    colours.push(rgbaToHexa(rgba));\r\n  });\r\n\r\n  return colours;\r\n}\r\n\r\nfunction rgbaToHexa(rgba) {\r\n  let hexa = Object.keys(rgba).map((key) => colorToHex(rgba[key]));\r\n  return `#${hexa.join('')}`;\r\n}\r\n\r\nfunction colorToHex(color) {\r\n  let hexadecimal = color.toString(16);\r\n  return hexadecimal.length == 1 ? '0' + hexadecimal : hexadecimal;\r\n}\r\n","export function getRosePoints(n, d) {\r\n  let dataPoints = [];\r\n\r\n  for (let delta = 0; delta < 2 * Math.PI * d; delta += 0.01) {\r\n    let r = 10 * Math.cos((n / d) * delta);\r\n    let x = r * Math.cos(delta);\r\n    let y = r * Math.sin(delta);\r\n\r\n    dataPoints.push([x, y]);\r\n  }\r\n\r\n  return dataPoints;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/whole.69e31bd8.svg\";","export default __webpack_public_path__ + \"static/media/half.7d756528.svg\";","export default __webpack_public_path__ + \"static/media/quarter.a35808dc.svg\";","export default __webpack_public_path__ + \"static/media/eighth.347a1769.svg\";","export default __webpack_public_path__ + \"static/media/sixteenth.91907e68.svg\";","import { useRef, useState } from 'react';\r\n\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport wholeSvg from './svgNotation/whole.svg';\r\nimport halfSvg from './svgNotation/half.svg';\r\nimport quarterSvg from './svgNotation/quarter.svg';\r\nimport eighthSvg from './svgNotation/eighth.svg';\r\nimport sixteenthSvg from './svgNotation/sixteenth.svg';\r\n\r\nfunction ResolutionSelector({\r\n  resolutionMode,\r\n  setResolutionMode,\r\n  retriggerAnalysis,\r\n}) {\r\n  //State: input error\r\n  const [isInputSecondsInvalid, setIsInputSecondsInvalid] = useState(false);\r\n  const resolutionTextRef = useRef(null);\r\n\r\n  function onChangeResolutionSelection(event) {\r\n    let newResolutionMode = { ...resolutionMode };\r\n    newResolutionMode.seconds = parseFloat(resolutionTextRef.current.value);\r\n\r\n    switch (event.target.value) {\r\n      case 'sixteenth':\r\n        newResolutionMode.noteResolutionValue = 0.25;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'eighth':\r\n        newResolutionMode.noteResolutionValue = 0.5;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'quarter':\r\n        newResolutionMode.noteResolutionValue = 1;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'half':\r\n        newResolutionMode.noteResolutionValue = 2;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'whole':\r\n        newResolutionMode.noteResolutionValue = 4;\r\n        newResolutionMode.useSeconds = false;\r\n        break;\r\n      case 'seconds':\r\n        newResolutionMode.useSeconds = true;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    setResolutionMode(newResolutionMode);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <FormControl component='fieldset'>\r\n        <RadioGroup\r\n          row\r\n          defaultValue='quarter'\r\n          onChange={onChangeResolutionSelection}\r\n          aria-label='resolution'\r\n          name='row-radio-buttons-group'\r\n          sx={{ display: 'flex', justifyContent: 'space-between' }}\r\n        >\r\n          <FormControlLabel\r\n            value='sixteenth'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  transform: 'scale(3, 3)',\r\n                }}\r\n                src={sixteenthSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='eighth'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  transform: 'scale(3, 3) translate(0, 0)',\r\n                }}\r\n                src={eighthSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='quarter'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  marginTop: 8,\r\n                  transform: 'scale(1, 3)',\r\n                }}\r\n                src={quarterSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='half'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  marginTop: 8,\r\n                  transform: 'scale(3.7, 3.2) ',\r\n                }}\r\n                src={halfSvg}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            value='whole'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <img\r\n                style={{\r\n                  width: 10,\r\n                  height: 10,\r\n                  marginTop: 0,\r\n                  transform: 'scale(1.5, 1)',\r\n                }}\r\n                src={wholeSvg}\r\n              />\r\n            }\r\n          />\r\n\r\n          <FormControlLabel\r\n            value='seconds'\r\n            control={<Radio size='small' />}\r\n            label={\r\n              <TextField\r\n                sx={{ minHeight: '4.4rem', maxWidth: '5rem' }}\r\n                error={isInputSecondsInvalid}\r\n                helperText={isInputSecondsInvalid && 'Invalid input'}\r\n                label='in seconds'\r\n                id='standard-size-small'\r\n                defaultValue='1.5'\r\n                size='small'\r\n                variant='standard'\r\n                onChange={() => {\r\n                  let newResolutionMode = { ...resolutionMode };\r\n                  newResolutionMode.seconds = parseFloat(\r\n                    resolutionTextRef.current.value\r\n                  );\r\n                  if (isNaN(newResolutionMode.seconds))\r\n                    setIsInputSecondsInvalid(true);\r\n                  else {\r\n                    setResolutionMode(newResolutionMode);\r\n                    setIsInputSecondsInvalid(false);\r\n                  }\r\n                }}\r\n                inputRef={resolutionTextRef}\r\n              />\r\n            }\r\n          />\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            onClick={retriggerAnalysis}\r\n            sx={{ width: '10%', height: '20%', marginTop: 2 }}\r\n          >\r\n            Change\r\n          </Button>\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ResolutionSelector;\r\n","import { styled } from '@mui/material/styles';\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst ListItem = styled('li')(({ theme }) => ({\r\n  margin: theme.spacing(0.5),\r\n}));\r\n\r\nexport default function PcvChipsBox({ userPcvs, setUserPcvs, rosesMat }) {\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //on detele, set the rose icon to unused\r\n    //matrix coeffs are i = d-1, j=d-1\r\n    rosesMat[chipToDelete.d - 1][chipToDelete.n - 1].used = false;\r\n\r\n    setUserPcvs((chips) =>\r\n      chips.filter((chip) => chip.label !== chipToDelete.label)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        p: '3px',\r\n        overflow: 'auto',\r\n        height: '100%',\r\n        width: '100%',\r\n      }}\r\n      component='ul'\r\n    >\r\n      {userPcvs.map((data, i) => {\r\n        return (\r\n          <ListItem key={`${i}`}>\r\n            <Chip\r\n              variant={data.isDisabled ? 'outlined' : 'filled'}\r\n              icon={\r\n                <svg\r\n                  xmlns='http://www.w3.org/2000/svg'\r\n                  width='24'\r\n                  height='24'\r\n                  viewBox='0 0 24 24'\r\n                >\r\n                  <g /* fill='none' fill-rule='evenodd' */>\r\n                    {/* <rect\r\n                      width='20'\r\n                      height='20'\r\n                      x='2'\r\n                      y='2'\r\n                      fill='#FFF'\r\n                      rx='10'\r\n                    /> */}\r\n                    <polyline\r\n                      transform={`translate(${12},${12})`}\r\n                      fill='none'\r\n                      stroke='black'\r\n                      strokeWidth='1px'\r\n                      points={data.rosePoints}\r\n                    />\r\n                  </g>\r\n                </svg>\r\n              }\r\n              label={data.label}\r\n              onDelete={handleDelete(data)}\r\n              onClick={() => {\r\n                data.isDisabled = !data.isDisabled;\r\n                setUserPcvs([...userPcvs]);\r\n              }}\r\n            />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport Typography from '@mui/material/Typography';\r\n/* import { Link } from 'react-router-dom'; */\r\nimport Link from '@mui/material/Link';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction MarkdownListItem(props) {\r\n  return <Box component='li' sx={{ mt: 1, typography: 'body1' }} {...props} />;\r\n}\r\n\r\nfunction LinkReference({ to, ...props }) {\r\n  const myRef = React.useRef(null);\r\n\r\n  //Check for reference links, prevent default to not reload the page\r\n  //and scrollIntoView to focus on the footer when clicked\r\n  if (!isNaN(parseInt(props.href[1]))) {\r\n    return (\r\n      <Link\r\n        ref={myRef}\r\n        onClick={(event) => {\r\n          event.preventDefault();\r\n          myRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n          });\r\n        }}\r\n        {...props}\r\n        id={`reference${props.href[1]}`}\r\n        href={`/#${props.href[1]}`}\r\n      />\r\n    );\r\n  } else return <Link {...props} />; //Else it is a normal external link\r\n}\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: {\r\n      component: Typography,\r\n      props: {\r\n        gutterBottom: true,\r\n        variant: 'h4',\r\n        component: 'h1',\r\n      },\r\n    },\r\n    h2: {\r\n      component: Typography,\r\n      props: { gutterBottom: true, variant: 'h6', component: 'h2' },\r\n    },\r\n    h3: {\r\n      component: Typography,\r\n      props: { gutterBottom: true, variant: 'subtitle1' },\r\n    },\r\n    h4: {\r\n      component: Typography,\r\n      props: {\r\n        gutterBottom: true,\r\n        variant: 'caption',\r\n        paragraph: true,\r\n      },\r\n    },\r\n    p: {\r\n      component: Typography,\r\n      props: { paragraph: true },\r\n    },\r\n    a: {\r\n      component: LinkReference,\r\n    },\r\n    li: {\r\n      component: MarkdownListItem,\r\n    },\r\n  },\r\n};\r\n\r\nexport default function Markdown(props) {\r\n  return <ReactMarkdown options={options} {...props} />;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/HomeMarkdown.4682608b.md\";","import { useEffect, useState } from 'react';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Markdown from '../Markdown';\r\nimport Box from '@mui/material/Box';\r\nimport HomeMarkdown from '../HomeMarkdown.md';\r\n\r\nexport default function Home({ setOpen, setInAnalysisPage }) {\r\n  const [content, setContent] = useState(``);\r\n\r\n  useEffect(() => {\r\n    setInAnalysisPage(false);\r\n    setOpen(false);\r\n\r\n    //Fetch the text of the markdown file as a string\r\n    fetch(HomeMarkdown)\r\n      .then((response) => response.text())\r\n      .then((text) => {\r\n        setContent(text);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Paper sx={{ margin: 'auto', maxWidth: '1200px' }}>\r\n      <Box sx={{ padding: 3 }}>\r\n        <Markdown>{content}</Markdown>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/TheoryMarkdown.26c0a4ee.md\";","import { useEffect, useState } from 'react';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport Markdown from '../Markdown';\r\nimport Box from '@mui/material/Box';\r\nimport TheoryMarkdown from '../TheoryMarkdown.md';\r\n\r\nexport default function Theory({ setOpen, setInAnalysisPage }) {\r\n  const [content, setContent] = useState(``);\r\n\r\n  useEffect(() => {\r\n    setInAnalysisPage(false);\r\n    setOpen(false);\r\n\r\n    //Fetch the text of the markdown file as a string\r\n    fetch(TheoryMarkdown)\r\n      .then((response) => response.text())\r\n      .then((text) => {\r\n        setContent(text);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Paper sx={{ margin: 'auto', maxWidth: '1200px' }}>\r\n      <Box sx={{ padding: 3 }}>\r\n        <Markdown>{content}</Markdown>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n","import { useRef, useEffect, useState } from 'react';\r\n\r\nconst verticalScale = Math.sin(Math.PI / 3);\r\n\r\nexport const Wavescape = ({\r\n  wsNumber,\r\n  wavescapeMatrix,\r\n  currentWavescapeSubdiv,\r\n  wavescapeWidth,\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const [wsCoordinates, setWsCoordinates] = useState([]);\r\n  const margin = 10;\r\n  let width = wavescapeWidth - margin;\r\n  let height = wavescapeWidth;\r\n  let ticks;\r\n\r\n  useEffect(() => {\r\n    width = wavescapeWidth;\r\n    height = wavescapeWidth;\r\n  }, [wavescapeWidth]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // increase the actual size of our canvas\r\n    //canvas.width = width * devicePixelRatio;\r\n    //canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    //ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    //canvas.style.width = width + 'px';\r\n    //canvas.style.height = height + 'px';\r\n\r\n    let margins = [margin, margin];\r\n    let innerSize = [canvas.width - margins[0], canvas.height - margins[1]];\r\n    let baseSubdivision;\r\n\r\n    if (wavescapeMatrix) {\r\n      baseSubdivision = wavescapeMatrix[0].length;\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      //ctx.setTransform(1, 0, 0, -1, 0, ctx.canvas.height);\r\n      ticks = computeTicks(\r\n        innerSize[0],\r\n        innerSize[1],\r\n        baseSubdivision,\r\n        margins[0],\r\n        margins[1]\r\n      );\r\n\r\n      setWsCoordinates(ticks);\r\n\r\n      //Vertical scaling to make the triangle equilateral\r\n      //ctx.scale(1, verticalScale);\r\n      drawWavescape(ticks, ctx, wavescapeMatrix);\r\n    }\r\n  }, [wavescapeMatrix, width, height]);\r\n\r\n  return (\r\n    <svg\r\n      id={`wavescape${wsNumber}`}\r\n      width={width + margin}\r\n      height={height}\r\n      xmlns='http://www.w3.org/2000/svg'\r\n    >\r\n      <g transform={`translate(${width * 0.06},${width * 0.1})`}>\r\n        <circle cx='5%' cy='1%' r={`${(width / 100) * 2.8}px`} fill='black' />\r\n        <text\r\n          fontSize={`${(width / 100) * 5.2}px`}\r\n          textAnchor='middle'\r\n          x='5%'\r\n          y='2.8%'\r\n          fill='white'\r\n        >\r\n          {wsNumber}\r\n        </text>\r\n      </g>\r\n      <g\r\n        transform={`scale(${1}, ${-verticalScale}) translate(${0},${-height})`}\r\n      >\r\n        <foreignObject x={0} y={0} width={width} height={height}>\r\n          <canvas width={width} height={height} ref={canvasRef}></canvas>\r\n        </foreignObject>\r\n\r\n        {/* //Line ticks */}\r\n        {wsCoordinates.length > 0\r\n          ? wsCoordinates[0].map((coord, i) => (\r\n              <line\r\n                key={`tick${i}`}\r\n                x1={coord.x}\r\n                x2={coord.x}\r\n                y1={coord.y - 3}\r\n                y2={coord.y + 3}\r\n                stroke='grey'\r\n                strokeWidth='1px'\r\n              />\r\n            ))\r\n          : null}\r\n        {/* Contour line */}\r\n        {wsCoordinates.length > 0 ? (\r\n          <>\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              stroke='grey'\r\n              strokeWidth='2px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][wsCoordinates[0].length - 1].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][wsCoordinates[0].length - 1].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <line\r\n              x1={wsCoordinates[0][0].x}\r\n              x2={wsCoordinates[wsCoordinates.length - 1][0].x}\r\n              y1={wsCoordinates[0][0].y}\r\n              y2={wsCoordinates[wsCoordinates.length - 1][0].y}\r\n              stroke='grey'\r\n              strokeWidth='1px'\r\n            />\r\n            <circle\r\n              cx={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].x +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].x) /\r\n                2\r\n              }\r\n              cy={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].y +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].y) /\r\n                2\r\n              }\r\n              r={0.01 * width}\r\n              fill='white'\r\n            />\r\n            <circle\r\n              cx={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].x +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].x) /\r\n                2\r\n              }\r\n              cy={\r\n                (wsCoordinates[0][currentWavescapeSubdiv].y +\r\n                  wsCoordinates[0][currentWavescapeSubdiv + 1].y) /\r\n                2\r\n              }\r\n              r={0.01 * width}\r\n              stroke='black'\r\n              strokeWidth={1}\r\n              fill='transparent'\r\n            />\r\n          </>\r\n        ) : null}\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nfunction computeTicks(\r\n  innerWidth,\r\n  innerHeight,\r\n  baseSubdivision,\r\n  marginLeft,\r\n  marginTop\r\n) {\r\n  //Actually, it is a square matrix\r\n  let unit = innerWidth / baseSubdivision;\r\n  let mat = [];\r\n\r\n  for (let i = 0; i < baseSubdivision + 1; i++) {\r\n    let temp = [];\r\n    for (let j = 0; j < baseSubdivision + 1; j++) {\r\n      if (i <= j)\r\n        temp.push({\r\n          x: (j - i) * unit + (i * unit) / 2 + marginLeft,\r\n          y: i * unit + marginTop,\r\n        });\r\n    }\r\n    mat.push(temp);\r\n  }\r\n\r\n  return mat;\r\n}\r\n\r\nfunction drawWavescape(ticks, ctx, wavescapeMatrix) {\r\n  for (let i = 0; i < ticks.length - 1; i++) {\r\n    for (let j = 0; j < ticks[i].length - 1; j++) {\r\n      if (i === 0) {\r\n        //first row composed by triangles\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      } else {\r\n        //other rows composed by diamonds\r\n        ctx.beginPath();\r\n        ctx.moveTo(ticks[i][j].x, ticks[i][j].y);\r\n        ctx.lineTo(ticks[i - 1][j + 1].x, ticks[i - 1][j + 1].y);\r\n        ctx.lineTo(ticks[i][j + 1].x, ticks[i][j + 1].y);\r\n        ctx.lineTo(ticks[i + 1][j].x, ticks[i + 1][j].y);\r\n        ctx.fillStyle = wavescapeMatrix[i][j];\r\n        ctx.fill();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Wavescape } from './Wavescape';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport { Typography } from '@mui/material';\r\n\r\nfunction WavescapeModule({\r\n  wavescapesData,\r\n  currentWavescapeSubdiv,\r\n  elemsWidth,\r\n}) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n      }}\r\n    >\r\n      {wavescapesData.length > 0 ? (\r\n        wavescapesData.map((data, i) => (\r\n          <Wavescape\r\n            wsNumber={i + 1}\r\n            key={`w.${i}`}\r\n            wavescapeMatrix={data}\r\n            currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n            wavescapeWidth={elemsWidth}\r\n          />\r\n        ))\r\n      ) : (\r\n        <Typography color='error'>No midi file uploaded</Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default WavescapeModule;\r\n","import * as d3 from 'd3';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport { pixelColor } from './colorMapping';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Typography from '@mui/material/Typography';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\n\r\nlet savedImage = null;\r\n\r\n//Minus before every y coordinate due to the fact that svg has positive y\r\n//downward, meanwhile cartesian plane has positive y upward\r\n\r\nfunction Circle({\r\n  coeffNumber,\r\n  protoDataCoeff,\r\n  traceDataCoeff,\r\n  userPcvsCoeff,\r\n  currentSubdiv,\r\n  performanceCoeff,\r\n  targetCircleWidth,\r\n  showMagAndPhase,\r\n  showFullTrace,\r\n}) {\r\n  const canvasRef = useRef(null);\r\n  const [currentSubdivCoeff, setCurrentSubdivCoeff] = useState({\r\n    mu: 0,\r\n    phi: 0,\r\n  });\r\n  let width = 445;\r\n  let height = width;\r\n\r\n  const margin = 45;\r\n  const headerOffset = 15;\r\n  const circleRadius = width / 2 - margin;\r\n\r\n  let marksRadiusRatio = 0.01;\r\n\r\n  useEffect(() => {\r\n    if (traceDataCoeff) {\r\n      //Rounding to second decimal and converting to polar coordinate\r\n      let x = traceDataCoeff[currentSubdiv].x;\r\n      let y = traceDataCoeff[currentSubdiv].y;\r\n\r\n      setCurrentSubdivCoeff(cartesianToPolar(x, y));\r\n    }\r\n  }, [currentSubdiv, traceDataCoeff]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    let radius = Math.floor(circleRadius * devicePixelRatio);\r\n    let image = ctx.createImageData(2 * radius, 2 * radius);\r\n    let data = image.data;\r\n\r\n    // increase the actual size of our canvas\r\n    canvas.width = width * devicePixelRatio;\r\n    canvas.height = height * devicePixelRatio;\r\n\r\n    // ensure all drawing operations are scaled\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n\r\n    // scale everything down using CSS\r\n    canvas.style.width = width + 'px';\r\n    canvas.style.height = height + 'px';\r\n\r\n    if (!savedImage) {\r\n      for (let x = -radius; x < radius; x++) {\r\n        for (let y = -radius; y < radius; y++) {\r\n          let distance = Math.sqrt(x * x + y * y);\r\n\r\n          if (distance > radius) {\r\n            // skip all (x,y) coordinates that are outside of the circle\r\n            continue;\r\n          }\r\n          // Figure out the starting index of this pixel in the image data array.\r\n          let rowLength = 2 * radius;\r\n          let adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n          let adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)\r\n          let pixelWidth = 4; // each pixel requires 4 slots in the data array\r\n          let index = (adjustedX + adjustedY * rowLength) * pixelWidth;\r\n          let rgba = pixelColor(x, y, distance / radius);\r\n          data[index] = rgba.r;\r\n          data[index + 1] = rgba.g;\r\n          data[index + 2] = rgba.b;\r\n          data[index + 3] = rgba.a;\r\n        }\r\n      }\r\n      savedImage = image;\r\n    }\r\n    ctx.putImageData(savedImage, 0, 0);\r\n\r\n    if (traceDataCoeff && showFullTrace) {\r\n      ctx.save();\r\n      ctx.translate((400 - margin) / 2, (400 - margin) / 2);\r\n      drawTrace();\r\n      ctx.restore();\r\n    }\r\n  }, [width, height, circleRadius, traceDataCoeff, showFullTrace]);\r\n\r\n  useEffect(() => {\r\n    //Workaround for chrome bug on canvas overlay in foreignObj SVG\r\n    canvasRef.current.getContext('2d').getImageData(0, 0, 1, 1);\r\n  }, []);\r\n\r\n  {\r\n    /* {traceDataCoeff\r\n          ? traceDataCoeff.map((pcv, i) =>\r\n              circleMark(pcv, marksRadiusRatio, 'black', i, 0.1)\r\n            )\r\n          : null} */\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (traceDataCoeff) {\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.save();\r\n      ctx.translate((400 - margin) / 2, (400 - margin) / 2);\r\n      drawTrace();\r\n      ctx.restore();\r\n    }\r\n  }, [traceDataCoeff]);\r\n\r\n  function cartesianToPolar(x, y, norm = false) {\r\n    let phi = (Math.atan2(y, x) * 180) / Math.PI;\r\n    let mu = Math.sqrt(x * x + y * y);\r\n\r\n    if (norm) mu = mu / circleRadius;\r\n\r\n    phi = Math.round(phi + Number.EPSILON);\r\n    mu = Math.round((mu + Number.EPSILON) * 100) / 100;\r\n\r\n    return { mu, phi };\r\n  }\r\n\r\n  function drawTrace() {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n\r\n    traceDataCoeff.forEach((element) => {\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        element.x * circleRadius,\r\n        -element.y * circleRadius,\r\n        (marksRadiusRatio * width) / 2,\r\n        0,\r\n        Math.PI * 2,\r\n        true\r\n      );\r\n      ctx.fill();\r\n    });\r\n  }\r\n\r\n  const circleMark = (pcvData, radiusScaleWidth, color, id, opacity = 1) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    return (\r\n      <path\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        fill={color}\r\n        fillOpacity={opacity}\r\n        key={id}\r\n        d={mark()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const crossMark = (pcvData, radiusScaleWidth) => {\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n      >\r\n        <line\r\n          x1='0'\r\n          x2='0'\r\n          y1='7'\r\n          y2='-7'\r\n          stroke='black'\r\n          strokeWidth='1.5'\r\n        ></line>\r\n        <line\r\n          x1='7'\r\n          x2='-7'\r\n          y1='0'\r\n          y2='0'\r\n          stroke='black'\r\n          strokeWidth='1.5'\r\n        ></line>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  function svgRoseIcon(label, rosePoints, translateX, translateY, scale, i) {\r\n    let polarCoord = cartesianToPolar(translateX, translateY, true);\r\n    let widthSvg = 40;\r\n    return (\r\n      <Tooltip\r\n        key={`rtt.${i}`}\r\n        placement='top'\r\n        arrow\r\n        title={\r\n          <Stack\r\n            direction='row'\r\n            justifyContent='center'\r\n            alignItems='center'\r\n            spacing={2}\r\n          >\r\n            <svg\r\n              width={widthSvg}\r\n              height={widthSvg}\r\n              viewBox={`0 0 ${widthSvg} ${widthSvg}`}\r\n            >\r\n              <circle\r\n                cx={widthSvg / 2}\r\n                cy={widthSvg / 2}\r\n                r={widthSvg / 2}\r\n                strokeWidth='1'\r\n                fill='#FFF'\r\n                fillOpacity={1}\r\n              ></circle>\r\n\r\n              <polyline\r\n                transform={`translate(${widthSvg / 2},${\r\n                  widthSvg / 2\r\n                }) scale(${1.8})`}\r\n                fill='none'\r\n                stroke='black'\r\n                strokeWidth='1px'\r\n                points={rosePoints}\r\n              />\r\n            </svg>\r\n            <Stack>\r\n              <Typography>{label}</Typography>\r\n              <Typography>{`\\u{3BC}: ${\r\n                polarCoord.mu\r\n              } \\u{3C6}: ${-polarCoord.phi}\\u{b0}`}</Typography>\r\n            </Stack>\r\n          </Stack>\r\n        }\r\n      >\r\n        <g>\r\n          <polyline\r\n            transform={`translate(${translateX},${translateY}) scale(${scale})`}\r\n            fill='none'\r\n            stroke='black'\r\n            strokeWidth='1px'\r\n            fill='#FFF'\r\n            fillOpacity={0}\r\n            points={rosePoints}\r\n          />\r\n\r\n          <polyline\r\n            transform={`translate(${translateX},${translateY}) scale(${scale})`}\r\n            fill='none'\r\n            stroke='black'\r\n            strokeWidth='1px'\r\n            points={rosePoints}\r\n          />\r\n        </g>\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  const protoCircleMark = (pcvData, id) => {\r\n    let scaleRatio = 0.02;\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius((scaleRatio * width) / 2)\r\n      .outerRadius(((scaleRatio + 0.01) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    //Check for sub/superscript\r\n    let labelName = '';\r\n    let subSup = '';\r\n    let isSub = false;\r\n    if (pcvData.label.includes('_') || pcvData.label.includes('^')) {\r\n      for (let i = 0; i < pcvData.label.length; i++) {\r\n        if (pcvData.label[i] === '_') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n          isSub = true;\r\n        }\r\n        if (pcvData.label[i] === '^') {\r\n          labelName = pcvData.label.slice(0, i);\r\n          subSup = pcvData.label.slice(i + 1, pcvData.label.length);\r\n        }\r\n      }\r\n    } else {\r\n      labelName = pcvData.label;\r\n    }\r\n\r\n    //Computation of label offset\r\n    //Good for most of the labels\r\n    let dxOffset = Math.sign(pcvData.x) * 18,\r\n      dyOffset = -Math.sign(pcvData.y) * 18 + 7;\r\n\r\n    //Custom rules for labels\r\n    if (labelName === '♯') dyOffset -= 3;\r\n    if (labelName === 'WT' && subSup === '2') dxOffset *= 1.2;\r\n    if (labelName === 'WT' && subSup === '1') dxOffset *= 1.4;\r\n    if (labelName === 'C' && subSup === 'o7') dxOffset *= 1.2;\r\n    if (labelName === 'O' && subSup === '1,2') dyOffset *= 1.1;\r\n    if (labelName === 'C♯' && subSup === 'o7') {\r\n      dxOffset *= 1.1;\r\n      dyOffset *= 1.1;\r\n    }\r\n    if (labelName === 'D' && subSup === 'o7') {\r\n      dxOffset *= 0.7;\r\n      dyOffset *= 0.7;\r\n    }\r\n    if (labelName === 'H' && subSup === '2,3') {\r\n      dxOffset *= 1.2;\r\n      dyOffset *= 1.2;\r\n    }\r\n    if (labelName === 'H' && subSup === '1,2') {\r\n      dxOffset *= 0.7;\r\n      dyOffset *= 0.7;\r\n    }\r\n    if (labelName === 'Ω') {\r\n      dxOffset = 15;\r\n      dyOffset = 5;\r\n    }\r\n\r\n    /* if (Math.sign(pcvData.x) === 1) dxOffset = 22;\r\n    else if (Math.sign(pcvData.x) === -1) dxOffset = -20; */\r\n\r\n    /* \r\n    if (Math.sign(-pcvData.y) === 1) dyOffset = 25;\r\n    else if (Math.sign(-pcvData.y) === -1) dyOffset = -8;*/\r\n\r\n    return (\r\n      <g\r\n        transform={`translate(${pcvData.x * circleRadius},${\r\n          -pcvData.y * circleRadius\r\n        })`}\r\n        key={`p.${id}`}\r\n      >\r\n        <path fill={'grey'} key={id} d={mark()}></path>\r\n        <text textAnchor='middle' dx={dxOffset} dy={dyOffset} fontSize='20px'>\r\n          {labelName}\r\n          {isSub ? (\r\n            <tspan fontSize={15} baselineShift='sub'>\r\n              {subSup}\r\n            </tspan>\r\n          ) : (\r\n            <tspan fontSize={15} baselineShift='super'>\r\n              {subSup}\r\n            </tspan>\r\n          )}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const drawBorder = () => {\r\n    return (\r\n      <path\r\n        fill={'azure'}\r\n        d={d3\r\n          .arc()\r\n          .innerRadius(circleRadius - 1)\r\n          .outerRadius(circleRadius + 3)\r\n          .startAngle(0)\r\n          .endAngle(2 * Math.PI)()}\r\n      ></path>\r\n    );\r\n  };\r\n\r\n  const highlightSubdiv = (radiusScaleWidth) => {\r\n    const mark = d3\r\n      .arc()\r\n      .innerRadius(0)\r\n      .outerRadius((radiusScaleWidth * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    const highlight = d3\r\n      .arc()\r\n      .innerRadius((radiusScaleWidth * width) / 2)\r\n      .outerRadius(((radiusScaleWidth + 0.005) * width) / 2)\r\n      .startAngle(0)\r\n      .endAngle(2 * Math.PI);\r\n\r\n    let highlightedTrace = [];\r\n    let length = 7;\r\n    let opacityArray = [];\r\n\r\n    opacityArray.push(1);\r\n    opacityArray.push(0.5);\r\n    for (let i = 2; i < length; i++) {\r\n      opacityArray.push(\r\n        Math.round((opacityArray[i - 1] - 0.5 / (length - 2)) * 100) / 100\r\n      );\r\n    }\r\n\r\n    if (currentSubdiv < length)\r\n      highlightedTrace = traceDataCoeff.slice(0, currentSubdiv + 1);\r\n    else\r\n      highlightedTrace = traceDataCoeff.slice(\r\n        currentSubdiv - length + 1,\r\n        currentSubdiv + 1\r\n      );\r\n\r\n    highlightedTrace = highlightedTrace.reverse();\r\n\r\n    return highlightedTrace.map((coeff, i) => {\r\n      return (\r\n        <g key={`g.${i}`}>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'white'}\r\n            key={i}\r\n            fillOpacity={opacityArray[i]}\r\n            d={mark()}\r\n          ></path>\r\n          <path\r\n            transform={`translate(${coeff.x * circleRadius},${\r\n              -coeff.y * circleRadius\r\n            })`}\r\n            fill={'black'}\r\n            fillOpacity={opacityArray[i]}\r\n            key={`t.${i}`}\r\n            d={highlight()}\r\n          ></path>\r\n        </g>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ marginBottom: 2 }}>\r\n      <svg\r\n        width={targetCircleWidth}\r\n        height={targetCircleWidth}\r\n        viewBox={`0 0 ${width} ${height}`}\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        <g transform={`translate(32,8)`}>\r\n          <circle cx='12' cy='12' r='13' fill='black' />\r\n          <text fontSize='24' textAnchor='middle' x='12' y='20' fill='white'>\r\n            {coeffNumber}\r\n          </text>\r\n        </g>\r\n        <g transform={`translate(${125},0)`}>\r\n          {showMagAndPhase ? (\r\n            <>\r\n              <text\r\n                x='120'\r\n                y='23'\r\n                style={{ fontSize: '24px' }}\r\n              >{`\\u{3C6}: ${currentSubdivCoeff.phi}\\u{b0}`}</text>\r\n              <text\r\n                x='34'\r\n                y='24'\r\n                style={{ fontSize: '24px' }}\r\n              >{`\\u{3BC}: ${currentSubdivCoeff.mu}`}</text>\r\n            </>\r\n          ) : null}\r\n        </g>\r\n\r\n        <g transform={`translate(0,${headerOffset})`}>\r\n          <foreignObject x={margin} y={margin} width={width} height={height}>\r\n            <canvas\r\n              id={`circle${coeffNumber}`}\r\n              style={{ zIndex: '-1' }}\r\n              width={width}\r\n              height={height}\r\n              ref={canvasRef}\r\n            ></canvas>\r\n          </foreignObject>\r\n          <g transform={`translate(${width / 2},${width / 2})`}>\r\n            {drawBorder()}\r\n            {protoDataCoeff\r\n              ? protoDataCoeff.map((pcv, i) => protoCircleMark(pcv, i))\r\n              : null}\r\n            {/* {traceDataCoeff\r\n          ? traceDataCoeff.map((pcv, i) =>\r\n              circleMark(pcv, marksRadiusRatio, 'black', i, 0.1)\r\n            )\r\n          : null} */}\r\n            {performanceCoeff.x === 0 && performanceCoeff.y === 0\r\n              ? null\r\n              : crossMark(performanceCoeff, marksRadiusRatio * 2, 'teal')}\r\n            {/* {userPcvsCoeff\r\n          ? userPcvsCoeff.map((pcv, i) => {\r\n              if (!pcv.isDisabled)\r\n                return circleMark(pcv, marksRadiusRatio + 0.015, '#FFF', i, 0);\r\n            })\r\n          : null} */}\r\n            {userPcvsCoeff\r\n              ? userPcvsCoeff.map((pcv, i) => {\r\n                  if (!pcv.isDisabled)\r\n                    return svgRoseIcon(\r\n                      pcv.label,\r\n                      pcv.rosePoints,\r\n                      pcv.x * circleRadius,\r\n                      -pcv.y * circleRadius,\r\n                      0.7,\r\n                      i\r\n                    );\r\n                })\r\n              : null}\r\n            {traceDataCoeff ? highlightSubdiv(marksRadiusRatio) : null}\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n","export const prototypesData = [\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'C♯', x: 0.866, y: -0.5 },\r\n    { label: 'D', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'E', x: -0.5, y: -0.866 },\r\n    { label: 'F', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'G', x: -0.866, y: 0.5 },\r\n    { label: 'A♭', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'B♭', x: 0.5, y: 0.866 },\r\n    { label: 'B', x: 0.866, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'T_0', x: 1, y: 0 },\r\n    { label: 'T_1', x: 0.5, y: -0.866 },\r\n    { label: 'T_2', x: -0.5, y: -0.866 },\r\n    { label: 'T_3', x: -1, y: 0 },\r\n    { label: 'T_4', x: -0.5, y: 0.866 },\r\n    { label: 'T_5', x: 0.5, y: 0.866 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C+', x: 1, y: 0 },\r\n    { label: 'C♯+', x: 0, y: -1 },\r\n    { label: 'D+', x: -1, y: 0 },\r\n    { label: 'D♯+', x: 0, y: 1 },\r\n    { label: 'H_0,3', x: 0.5, y: 0.5 },\r\n    { label: 'H_0,1', x: 0.5, y: -0.5 },\r\n    { label: 'H_1,2', x: -0.5, y: -0.5 },\r\n    { label: 'H_2,3', x: -0.5, y: 0.5 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C^o7', x: 1, y: 0 },\r\n    { label: 'C♯^o7', x: -0.5, y: -0.866 },\r\n    { label: 'D^o7', x: -0.5, y: 0.866 },\r\n    { label: 'O_0,2', x: 0.25, y: 0.433 },\r\n    { label: 'O_0,1', x: 0.25, y: -0.433 },\r\n    { label: 'O_1,2', x: -0.5, y: 0 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'C', x: 1, y: 0 },\r\n    { label: 'F', x: 0.866, y: -0.5 },\r\n    { label: 'B♭', x: 0.5, y: -0.866 },\r\n    { label: 'E♭', x: 0, y: -1 },\r\n    { label: 'A♭', x: -0.5, y: -0.866 },\r\n    { label: 'C♯', x: -0.866, y: -0.5 },\r\n    { label: 'F♯', x: -1, y: 0 },\r\n    { label: 'B', x: -0.866, y: 0.5 },\r\n    { label: 'E', x: -0.5, y: 0.866 },\r\n    { label: 'A', x: 0, y: 1 },\r\n    { label: 'D', x: 0.5, y: 0.866 },\r\n    { label: 'G', x: 0.866, y: 0.5 },\r\n    { label: '♮', x: 0.267, y: 0.462 },\r\n    { label: '5♭', x: 0, y: -0.533 },\r\n    { label: '2♯', x: -0.267, y: 0.462 },\r\n    { label: '3♭', x: 0.462, y: -0.267 },\r\n    { label: '4♯', x: -0.533, y: 0 },\r\n    { label: '♭', x: 0.462, y: 0.267 },\r\n    { label: '6♯', x: -0.267, y: -0.462 },\r\n    { label: '♯', x: 0, y: 0.533 },\r\n    { label: '4♭', x: 0.267, y: -0.462 },\r\n    { label: '3♯', x: -0.462, y: 0.267 },\r\n    { label: '2♭', x: 0.533, y: 0 },\r\n    { label: '5♯', x: -0.462, y: -0.267 },\r\n  ],\r\n  [\r\n    { label: 'Ω', x: 0, y: 0 },\r\n    { label: 'WT_1', x: 1, y: 0 },\r\n    { label: 'WT_2', x: -1, y: 0 },\r\n  ],\r\n];\r\n","import Circle from './Circle';\r\nimport { useEffect, useState } from 'react';\r\nimport { prototypesData } from './prototypesData';\r\n\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction CoefficientsModule({\r\n  coeffTracesData,\r\n  showPrototypes,\r\n  showMagAndPhase,\r\n  userPcvs,\r\n  currentSubdiv,\r\n  midiDevNotesDftCoeffs,\r\n  elemsWidth,\r\n  showFullTrace,\r\n}) {\r\n  const [selectedProtoPitchClasses, setSelectedProtoPitchClasses] =\r\n    useState(prototypesData);\r\n\r\n  const [subdivUserPcvs, setSubdivUserPcvs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (showPrototypes) {\r\n      setSelectedProtoPitchClasses(prototypesData);\r\n    } else setSelectedProtoPitchClasses([]);\r\n  }, [showPrototypes]);\r\n\r\n  useEffect(() => {\r\n    //Subdividing the coeffs for each circle\r\n    let tempSubdivUserPcvs = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let temp = [];\r\n      for (let j = 0; j < userPcvs.length; j++) {\r\n        temp.push({\r\n          x: userPcvs[j].coeffs[i].re,\r\n          y: userPcvs[j].coeffs[i].im,\r\n          rosePoints: userPcvs[j].rosePoints,\r\n          isDisabled: userPcvs[j].isDisabled,\r\n          label: userPcvs[j].label,\r\n        });\r\n      }\r\n      tempSubdivUserPcvs.push(temp);\r\n    }\r\n\r\n    setSubdivUserPcvs(tempSubdivUserPcvs);\r\n  }, [userPcvs]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n      }}\r\n    >\r\n      {[1, 2, 3, 4, 5, 6].map((coeffNum) => (\r\n        <Circle\r\n          coeffNumber={coeffNum}\r\n          key={`w.${coeffNum}`}\r\n          protoDataCoeff={selectedProtoPitchClasses[coeffNum - 1]}\r\n          traceDataCoeff={coeffTracesData[coeffNum - 1]}\r\n          userPcvsCoeff={subdivUserPcvs[coeffNum - 1]}\r\n          currentSubdiv={currentSubdiv}\r\n          performanceCoeff={midiDevNotesDftCoeffs[coeffNum]}\r\n          targetCircleWidth={elemsWidth}\r\n          showMagAndPhase={showMagAndPhase}\r\n          showFullTrace={showFullTrace}\r\n        />\r\n      ))}\r\n\r\n      {/* <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[0]}\r\n        traceDataCoeff={coeffTracesData[0]}\r\n        userPcvsCoeff={subdivUserPcvs[0]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[1]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[1]}\r\n        traceDataCoeff={coeffTracesData[1]}\r\n        userPcvsCoeff={subdivUserPcvs[1]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[2]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[2]}\r\n        traceDataCoeff={coeffTracesData[2]}\r\n        userPcvsCoeff={subdivUserPcvs[2]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[3]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[3]}\r\n        traceDataCoeff={coeffTracesData[3]}\r\n        userPcvsCoeff={subdivUserPcvs[3]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[4]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[4]}\r\n        traceDataCoeff={coeffTracesData[4]}\r\n        userPcvsCoeff={subdivUserPcvs[4]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[5]}\r\n      />\r\n      <Circle\r\n        protoDataCoeff={selectedProtoPitchClasses[5]}\r\n        traceDataCoeff={coeffTracesData[5]}\r\n        userPcvsCoeff={subdivUserPcvs[5]}\r\n        currentSubdiv={currentSubdiv}\r\n        performanceCoeff={midiDevNotesDftCoeffs[6]}\r\n      /> */}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CoefficientsModule;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport * as Tone from 'tone';\r\nimport WavescapeModule from '../WavescapeModule';\r\nimport CoefficientsModule from '../CoefficientsModule';\r\n\r\nimport Player from '../Player';\r\n\r\nimport dft from '../DFT';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Slider from '@mui/material/Slider';\r\n\r\n//Drawer mui components\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n//Accordion mui components\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\n//Bottom appbar\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  transition: theme.transitions.create(['margin', 'width'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: `${drawerWidth}px`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nfunction Application({\r\n  fileName,\r\n  setInAnalysisPage,\r\n  open,\r\n  setOpen,\r\n  wavescapesData,\r\n  coeffTracesData,\r\n  currentSubdiv,\r\n  currentWavescapeSubdiv,\r\n  userPcvs,\r\n}) {\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [showPrototypes, setShowPrototypes] = useState(true);\r\n  const [showMagAndPhase, setShowMagAndPhase] = useState(true);\r\n  const [showFullTrace, setShowFullTrace] = useState(true);\r\n\r\n  //MIDI inputs\r\n  const [midiDevNotesDftCoeffs, setMidiDevNotesDftCoeffs] = useState(\r\n    dft([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]).map((coeff) => {\r\n      return { x: coeff.re, y: coeff.im };\r\n    })\r\n  );\r\n\r\n  //Ref to get the width of the accordion used to computed layout sizes\r\n  const accordionRef = useRef(null);\r\n  const [accordionWidth, setAccordionWidth] = useState(100);\r\n  const [elemsForEachRow, setElemsForEachRow] = useState(6);\r\n  const [elemsWidth, setElemsWidth] = useState(440);\r\n\r\n  function changeElementsSize(drawerOffset = 0) {\r\n    let adjustmentFractSizes = 20;\r\n    if (accordionRef.current) {\r\n      setElemsWidth(\r\n        (accordionRef.current.clientWidth + drawerOffset) / elemsForEachRow -\r\n          adjustmentFractSizes\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleResize() {\r\n    let drawerOffset = 0;\r\n    changeElementsSize(drawerOffset);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setInAnalysisPage(true);\r\n\r\n    //Open drawer when page loads\r\n    setOpen(true);\r\n\r\n    //Minus some pixel for robustness: sometimes width with fractional pixels\r\n    changeElementsSize();\r\n\r\n    window.addEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //When analysis data changes, show by default the full trace\r\n    setShowFullTrace(true);\r\n  }, [coeffTracesData]);\r\n\r\n  useEffect(() => {\r\n    changeElementsSize();\r\n    window.addEventListener('resize', handleResize);\r\n  }, [elemsForEachRow]);\r\n\r\n  useEffect(() => {\r\n    let drawerOffset = 0;\r\n    open ? (drawerOffset = -400) : (drawerOffset = +400);\r\n    changeElementsSize(drawerOffset);\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    changeElementsSize();\r\n  }, [accordionWidth]);\r\n\r\n  //MIDI devices init\r\n  useEffect(() => {\r\n    //INIT\r\n    let currentNotes = [];\r\n    const sampler = new Tone.Sampler({\r\n      urls: {\r\n        A0: 'A0.mp3',\r\n        C1: 'C1.mp3',\r\n        'D#1': 'Ds1.mp3',\r\n        'F#1': 'Fs1.mp3',\r\n        A1: 'A1.mp3',\r\n        C2: 'C2.mp3',\r\n        'D#2': 'Ds2.mp3',\r\n        'F#2': 'Fs2.mp3',\r\n        A2: 'A2.mp3',\r\n        C3: 'C3.mp3',\r\n        'D#3': 'Ds3.mp3',\r\n        'F#3': 'Fs3.mp3',\r\n        A3: 'A3.mp3',\r\n        C4: 'C4.mp3',\r\n        'D#4': 'Ds4.mp3',\r\n        'F#4': 'Fs4.mp3',\r\n        A4: 'A4.mp3',\r\n        C5: 'C5.mp3',\r\n        'D#5': 'Ds5.mp3',\r\n        'F#5': 'Fs5.mp3',\r\n        A5: 'A5.mp3',\r\n        C6: 'C6.mp3',\r\n        'D#6': 'Ds6.mp3',\r\n        'F#6': 'Fs6.mp3',\r\n        A6: 'A6.mp3',\r\n        C7: 'C7.mp3',\r\n        'D#7': 'Ds7.mp3',\r\n        'F#7': 'Fs7.mp3',\r\n        A7: 'A7.mp3',\r\n        C8: 'C8.mp3',\r\n      },\r\n      release: 1,\r\n      baseUrl: 'https://tonejs.github.io/audio/salamander/',\r\n    }).toDestination();\r\n    sampler.volume.value = -30;\r\n\r\n    if (navigator.requestMIDIAccess) {\r\n      navigator.requestMIDIAccess().then(success, failure);\r\n    }\r\n\r\n    function computeDftCoeffs(playedNotes) {\r\n      let pcv = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\n      playedNotes.forEach((note) => {\r\n        let pitch;\r\n        if (note.includes('#')) {\r\n          pitch = note.slice(0, 2);\r\n        } else pitch = pitch = note.slice(0, 1);\r\n\r\n        switch (pitch) {\r\n          case 'C':\r\n            pcv[0] += 1;\r\n            break;\r\n          case 'C#':\r\n            pcv[1] += 1;\r\n            break;\r\n          case 'D':\r\n            pcv[2] += 1;\r\n            break;\r\n          case 'D#':\r\n            pcv[3] += 1;\r\n            break;\r\n          case 'E':\r\n            pcv[4] += 1;\r\n            break;\r\n          case 'F':\r\n            pcv[5] += 1;\r\n            break;\r\n          case 'F#':\r\n            pcv[6] += 1;\r\n            break;\r\n          case 'G':\r\n            pcv[7] += 1;\r\n            break;\r\n          case 'G#':\r\n            pcv[8] += 1;\r\n            break;\r\n          case 'A':\r\n            pcv[9] += 1;\r\n            break;\r\n          case 'A#':\r\n            pcv[10] += 1;\r\n            break;\r\n          case 'B':\r\n            pcv[11] += 1;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      let dftCoeffs = dft(pcv);\r\n      dftCoeffs = dftCoeffs.map((coeff) => {\r\n        return { x: coeff.re, y: coeff.im };\r\n      });\r\n      //console.log(dftCoeffs);\r\n      setMidiDevNotesDftCoeffs(dftCoeffs);\r\n    }\r\n\r\n    function handleInput(input) {\r\n      const command = input.data[0];\r\n\r\n      //Discard messages different from note on and note off\r\n      if (command !== 144 && command !== 128) return;\r\n\r\n      const note = Tone.Frequency(input.data[1], 'midi').toNote();\r\n\r\n      //Discard note off messages for unplayed notes\r\n      if (command === 128 && !currentNotes.includes(note)) return;\r\n\r\n      //Decrease velocity to avoid clipping\r\n      const velocity = Math.round(input.data[2] * 0.05);\r\n      //const velocity = input.data[2];\r\n\r\n      //console.log(`command ${command}: note ${note}, vel ${velocity}`);\r\n\r\n      switch (command) {\r\n        case 144: //noteOn\r\n          if (velocity > 0) {\r\n            //Note is on\r\n            sampler.triggerAttack(note, Tone.immediate(), velocity);\r\n            currentNotes.push(note);\r\n          } else {\r\n            //Note on + vel 0 = Note off\r\n            sampler.triggerRelease(note, Tone.immediate());\r\n            currentNotes = currentNotes.filter(\r\n              (currentNote) => currentNote !== note\r\n            );\r\n          }\r\n          break;\r\n        case 128: //noteOff\r\n          sampler.triggerRelease(note, Tone.immediate());\r\n          currentNotes = currentNotes.filter(\r\n            (currentNote) => currentNote !== note\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      computeDftCoeffs(currentNotes);\r\n    }\r\n\r\n    function success(midiAccess) {\r\n      midiAccess.onstatechange = updateDevices;\r\n\r\n      const inputs = midiAccess.inputs;\r\n\r\n      inputs.forEach((input) => {\r\n        input.onmidimessage = handleInput;\r\n      });\r\n    }\r\n\r\n    function failure() {\r\n      console.log('Could not connect MIDI');\r\n    }\r\n\r\n    function updateDevices(event) {\r\n      console.log(\r\n        `Name: ${event.port.name}, Brand: ${event.port.manufacturer}, State: ${event.port.state}, Type: ${event.port.type}`\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  function toggleShowPrototypes() {\r\n    setShowPrototypes(!showPrototypes);\r\n  }\r\n\r\n  function toggleShowMagAndPhase() {\r\n    setShowMagAndPhase(!showMagAndPhase);\r\n  }\r\n\r\n  function toggleShowFullTrace() {\r\n    setShowFullTrace(!showFullTrace);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          padding: 0,\r\n          margin: 'auto',\r\n          marginBottom: '70px',\r\n          width: `${accordionWidth}%`,\r\n        }}\r\n      >\r\n        <Accordion defaultExpanded={true}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel1a-content'\r\n            id='panel1a-header'\r\n          >\r\n            <Typography variant='h6'>Wavescapes</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails ref={accordionRef} sx={{ padding: 0 }}>\r\n            <WavescapeModule\r\n              wavescapesData={wavescapesData}\r\n              currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n              elemsWidth={elemsWidth}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <Accordion defaultExpanded={true}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls='panel2a-content'\r\n            id='panel2a-header'\r\n          >\r\n            <Typography variant='h6'>Fourier Coefficient Spaces</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails sx={{ padding: 0 }}>\r\n            <CoefficientsModule\r\n              coeffTracesData={coeffTracesData}\r\n              currentSubdiv={currentSubdiv}\r\n              showPrototypes={showPrototypes}\r\n              showMagAndPhase={showMagAndPhase}\r\n              showFullTrace={showFullTrace}\r\n              userPcvs={userPcvs}\r\n              midiDevNotesDftCoeffs={midiDevNotesDftCoeffs}\r\n              elemsWidth={elemsWidth}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Box>\r\n\r\n      <AppBar\r\n        position='fixed'\r\n        open={open}\r\n        color='secondary'\r\n        sx={{ top: 'auto', bottom: 0, maxHeight: '74px' }}\r\n      >\r\n        <Toolbar>\r\n          <Player\r\n            fileName={fileName}\r\n            currentWavescapeSubdiv={currentWavescapeSubdiv}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              margin: '2% 5%',\r\n              maxWidth: '100px',\r\n              justifyContent: 'space-evenly',\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowFullTrace()}\r\n                    checked={showFullTrace}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={<Typography noWrap={true}>Show full trace</Typography>}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowPrototypes()}\r\n                    checked={showPrototypes}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={<Typography noWrap={true}>Show Prototypes</Typography>}\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    onChange={() => toggleShowMagAndPhase()}\r\n                    checked={showMagAndPhase}\r\n                    size='small'\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography noWrap={true}>Show &mu; and &phi;</Typography>\r\n                }\r\n              />\r\n            </FormGroup>\r\n          </Box>\r\n          <Box sx={{ minWidth: '20%', padding: '1% 3% 1% 2%', marginTop: 1 }}>\r\n            <Typography>Plots size</Typography>\r\n            <Slider\r\n              min={20}\r\n              max={100}\r\n              value={accordionWidth}\r\n              defaultValue={100}\r\n              aria-label='Plots size'\r\n              valueLabelDisplay='auto'\r\n              onChange={(event, value) => {\r\n                setAccordionWidth(value);\r\n              }}\r\n              marks={[\r\n                { value: 20, label: '20%' },\r\n                { value: 50, label: '50%' },\r\n                { value: 100, label: '100%' },\r\n              ]}\r\n            />\r\n          </Box>\r\n          <Box sx={{ minWidth: 120 }}>\r\n            <FormControl size='small' variant='standard' fullWidth>\r\n              <InputLabel>Layout</InputLabel>\r\n              <Select\r\n                value={elemsForEachRow}\r\n                label='Layout'\r\n                onChange={(event) => {\r\n                  setAccordionWidth(100);\r\n                  setElemsForEachRow(event.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value={6}>1x6</MenuItem>\r\n                <MenuItem value={3}>2x3</MenuItem>\r\n                <MenuItem value={2}>3x2</MenuItem>\r\n                <MenuItem value={1}>6x1</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Application;\r\n","import Navbar from './Navbar';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport JSZip from 'jszip';\r\nimport { DrawCircles } from './DrawCircles';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { setPlayerMidiData } from './Player';\r\nimport {\r\n  getComplementaryColours,\r\n  getRgbaMatrix,\r\n  getMidiFileDataObject,\r\n  getDftCoeffStatic,\r\n  getDftCoeffDynamic,\r\n} from './getDftMatrices';\r\nimport dft from './DFT';\r\nimport parse from './parser';\r\nimport { getRosePoints } from './roses';\r\n\r\nimport ResolutionSelector from './ResolutionSelector';\r\nimport PcvChipsBox from './PcvChipsBox';\r\n\r\n//Pages\r\nimport Home from './pages/Home';\r\nimport Theory from './pages/Theory';\r\nimport Analysis from './pages/Analysis';\r\n\r\n//Test\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TextField from '@mui/material/TextField';\r\nimport Stack from '@mui/material/Stack';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n\r\nconst drawerWidth = 400;\r\n\r\n//Song variables\r\nlet currentSongBPM = 80;\r\nlet currentSongMidiData;\r\nlet fileName;\r\n\r\nconst Main = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    backgroundColor: '#e0e0e0',\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: `-${drawerWidth}px`,\r\n    ...(open && {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n      backgroundColor: '#e0e0e0',\r\n    }),\r\n  })\r\n);\r\n\r\nconst DrawerHeader = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 1),\r\n  // necessary for content to be below app bar\r\n  ...theme.mixins.toolbar,\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nfunction App() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [file, setFile] = useState('');\r\n  //State: contains the color data of the wavescape of a given coeff (Array(6) one for coeff)\r\n  const [wavescapesData, setWavescapesData] = useState([]);\r\n\r\n  //State: represents the selected row on the wavescape (by default the first row) for each coeff\r\n  const [coeffTracesData, setCoeffTracesData] = useState([]);\r\n  const [currentSubdiv, setCurrentSubdiv] = useState(0);\r\n\r\n  //State: inputs\r\n  const [resolutionMode, setResolutionMode] = useState({\r\n    noteResolutionValue: 1,\r\n    seconds: 1.5,\r\n    useSeconds: false,\r\n  });\r\n  const [wavescapeResolution, setWavescapeResolution] = useState(10);\r\n  const [circleResolution, setCircleResolution] = useState(1);\r\n\r\n  const [userPcvs, setUserPcvs] = useState([]);\r\n  const pcvTextRef = useRef(null);\r\n\r\n  //State: error states in input\r\n  const [isInputPcvInvalid, setIsInputPcvInvalid] = useState(false);\r\n\r\n  //State: in analysis page flag\r\n  const [inAnalysisPage, setInAnalysisPage] = useState(false);\r\n\r\n  //State: usable/used roses for pcvs' labels\r\n  const [rosesMat, setRosesMat] = useState([]);\r\n\r\n  function handleSubmitPitchClass(input) {\r\n    //In order not to refresh the page (default behaviuor)\r\n    let parsedInput;\r\n    let userPcvObjects = [];\r\n\r\n    try {\r\n      parsedInput = parse(input);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      setIsInputPcvInvalid(true);\r\n      return;\r\n    }\r\n\r\n    parsedInput.forEach((input) =>\r\n      userPcvObjects.push({\r\n        label: `(${input})`,\r\n        isDisabled: false,\r\n        coeffs: dft(input, true, true, false),\r\n        rosePoints: [],\r\n        n: -1,\r\n        d: -1,\r\n      })\r\n    );\r\n\r\n    //Check if we are adding an input already inserted\r\n    let labels = userPcvs.map((pcvData) => pcvData.label);\r\n    labels.forEach((label) => {\r\n      userPcvObjects = userPcvObjects.filter(\r\n        (pcvObj) => pcvObj.label !== label\r\n      );\r\n    });\r\n\r\n    //Assing an unused rose to each pcv\r\n    userPcvObjects.forEach((pcvData) => {\r\n      let found = false;\r\n\r\n      for (let i = 0; i < rosesMat.length && !found; i++) {\r\n        for (let j = 0; j < rosesMat[i].length && !found; j++) {\r\n          if (rosesMat[i][j].usable && !rosesMat[i][j].used) {\r\n            found = true;\r\n            pcvData.rosePoints = rosesMat[i][j].points;\r\n            rosesMat[i][j].used = true;\r\n            pcvData.n = rosesMat[i][j].n;\r\n            pcvData.d = rosesMat[i][j].d;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    setUserPcvs([...userPcvs, ...userPcvObjects]);\r\n  }\r\n\r\n  //MIDI parsing on file change\r\n  useEffect(() => {\r\n    let input = document.getElementById('file').files[0];\r\n\r\n    input ? (fileName = input.name) : (fileName = '');\r\n\r\n    if (input) {\r\n      let fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(input);\r\n      fileReader.onload = (loadedFile) => {\r\n        let { midiData, midiBpm } = getMidiFileDataObject(\r\n          loadedFile.target.result\r\n        );\r\n        currentSongBPM = midiBpm;\r\n        currentSongMidiData = midiData;\r\n\r\n        //Wavescapes static analysis\r\n        let subdivsNumberStatic = 50;\r\n        let staticResolution =\r\n          currentSongMidiData.duration / subdivsNumberStatic;\r\n        setWavescapeResolution(staticResolution);\r\n\r\n        setWavescapesData(\r\n          getRgbaMatrix(\r\n            getDftCoeffStatic(currentSongMidiData, staticResolution)\r\n          )\r\n        );\r\n\r\n        //Circles dynamic analysis\r\n        let { tracesData, resolution } = getDftCoeffDynamic(\r\n          midiData,\r\n          resolutionMode,\r\n          currentSongBPM\r\n        );\r\n        setCircleResolution(resolution);\r\n        setCoeffTracesData(tracesData);\r\n        setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n\r\n        console.log(midiData);\r\n      };\r\n    }\r\n  }, [file]);\r\n\r\n  //Init roseMatrix and user pcv examples\r\n  useEffect(() => {\r\n    let initMatrix = [];\r\n    for (let i = 1; i <= 7; i++) {\r\n      let temp = [];\r\n      for (let j = 1; j <= 7; j++) {\r\n        let rose = { n: j, d: i, used: false, usable: true, points: [] };\r\n        if (j % i === 0 && i !== 1) rose.usable = false;\r\n\r\n        if (rose.usable === true) rose.points = getRosePoints(j, i);\r\n\r\n        temp.push(rose);\r\n      }\r\n      initMatrix.push(temp);\r\n    }\r\n\r\n    //(0,0) or n=1, d=1 can't be used since it is a simple circle\r\n    initMatrix[0][0].usable = false;\r\n\r\n    setRosesMat(initMatrix);\r\n\r\n    let examplePcvs = [\r\n      [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], // C\r\n      [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], // Cmin\r\n      [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], // Cdim\r\n    ];\r\n\r\n    let exPcvObjects = examplePcvs.map((pcv) => {\r\n      return {\r\n        label: `(${pcv.toString()})`,\r\n        isDisabled: false,\r\n        coeffs: dft(pcv, true, true, false),\r\n        rosePoints: [],\r\n        n: -1,\r\n        d: -1,\r\n      };\r\n    });\r\n\r\n    //Assing an unused rose to each pcv\r\n    exPcvObjects.forEach((pcvData) => {\r\n      let found = false;\r\n\r\n      for (let i = 0; i < initMatrix.length && !found; i++) {\r\n        for (let j = 0; j < initMatrix[i].length && !found; j++) {\r\n          if (initMatrix[i][j].usable && !initMatrix[i][j].used) {\r\n            found = true;\r\n            pcvData.rosePoints = initMatrix[i][j].points;\r\n            initMatrix[i][j].used = true;\r\n            pcvData.n = initMatrix[i][j].n;\r\n            pcvData.d = initMatrix[i][j].d;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    exPcvObjects[1].isDisabled = true;\r\n    exPcvObjects[2].isDisabled = true;\r\n\r\n    setUserPcvs(exPcvObjects);\r\n  }, []);\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function retriggerAnalysis() {\r\n    //Only if there is midi data, retrigger analysis\r\n    if (currentSongMidiData == null) {\r\n      return;\r\n    }\r\n\r\n    //Circles dynamic analysis\r\n    let { tracesData, resolution } = getDftCoeffDynamic(\r\n      currentSongMidiData,\r\n      resolutionMode,\r\n      currentSongBPM\r\n    );\r\n    setCircleResolution(resolution);\r\n    setCoeffTracesData(tracesData);\r\n    setPlayerMidiData(currentSongMidiData, resolution, setCurrentSubdiv);\r\n  }\r\n\r\n  function generateWavescapeSVG(k) {}\r\n\r\n  function generateCircleSVG(k) {\r\n    let data = (\r\n      <DrawCircles\r\n        traceData={coeffTracesData}\r\n        printablePitchClasses={[]}\r\n        userPcv={[]}\r\n        coeffNumber={k}\r\n      />\r\n    );\r\n\r\n    return ReactDOMServer.renderToStaticMarkup(data);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <CssBaseline />\r\n        <Navbar\r\n          open={open}\r\n          setOpen={setOpen}\r\n          setInAnalysisPage={setInAnalysisPage}\r\n          inAnalysisPage={inAnalysisPage}\r\n        />\r\n        <Box sx={{ display: 'flex' }}>\r\n          <Drawer\r\n            sx={{\r\n              width: drawerWidth,\r\n              flexShrink: 0,\r\n              '& .MuiDrawer-paper': {\r\n                width: drawerWidth,\r\n                boxSizing: 'border-box',\r\n              },\r\n            }}\r\n            variant='persistent'\r\n            anchor='left'\r\n            open={open}\r\n          >\r\n            <DrawerHeader>\r\n              <Stack sx={{ flexGrow: '2', maxWidth: '85%', marginBottom: 1 }}>\r\n                <Typography sx={{ fontWeight: 'bold' }}>\r\n                  Upload a midi file\r\n                </Typography>\r\n                <Stack\r\n                  spacing={2}\r\n                  direction='row'\r\n                  sx={{ alignItems: 'center' }}\r\n                >\r\n                  <label htmlFor='file'>\r\n                    <input\r\n                      style={{ display: 'none' }}\r\n                      type='file'\r\n                      id='file'\r\n                      name='file'\r\n                      value={file}\r\n                      onChange={(e) => setFile(e.target.value)}\r\n                    />\r\n                    <Button\r\n                      variant='contained'\r\n                      size='small'\r\n                      color='primary'\r\n                      component='span'\r\n                    >\r\n                      Upload\r\n                    </Button>\r\n                  </label>\r\n                  <Typography\r\n                    noWrap={true}\r\n                    color={fileName ? 'primary' : 'error'}\r\n                  >\r\n                    {file ? fileName : 'No midi file uploaded'}\r\n                  </Typography>\r\n                </Stack>\r\n              </Stack>\r\n\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === 'ltr' ? (\r\n                  <ChevronLeftIcon />\r\n                ) : (\r\n                  <ChevronRightIcon />\r\n                )}\r\n              </IconButton>\r\n            </DrawerHeader>\r\n            <Divider />\r\n            <Typography\r\n              sx={{ marginLeft: 1, marginTop: 1, fontWeight: 'bold' }}\r\n            >\r\n              Time resolution\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: '2% 5% 0 2%',\r\n                width: '90%',\r\n                justifyContent: 'space-evenly',\r\n              }}\r\n            >\r\n              <ResolutionSelector\r\n                setResolutionMode={setResolutionMode}\r\n                resolutionMode={resolutionMode}\r\n                retriggerAnalysis={retriggerAnalysis}\r\n              />\r\n            </Box>\r\n            <Divider />\r\n            <Typography\r\n              sx={{ marginLeft: 1, marginTop: 1, fontWeight: 'bold' }}\r\n            >\r\n              Custom pitch-class vectors\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                flexDirection: 'column',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                margin: '3% 5%',\r\n                height: '40%',\r\n                maxHeight: '350px',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n              component='form'\r\n              noValidate\r\n              autoComplete='off'\r\n            >\r\n              <TextField\r\n                /* sx={{ minHeight: '5rem' }} */\r\n                fullWidth\r\n                label={'margin=\"dense\"'}\r\n                error={isInputPcvInvalid}\r\n                helperText={isInputPcvInvalid && 'Invalid input'}\r\n                id='outlined-basic'\r\n                label='e.g. {0,0,4,7,10} (2,0,0,0,1,0,0,1,0,0,1,0)'\r\n                variant='outlined'\r\n                onKeyPress={(event) => {\r\n                  if (event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    handleSubmitPitchClass(pcvTextRef.current.value);\r\n                    pcvTextRef.current.value = '';\r\n                  }\r\n                }}\r\n                onChange={() => {\r\n                  setIsInputPcvInvalid(false);\r\n                }}\r\n                inputRef={pcvTextRef}\r\n              />\r\n              <PcvChipsBox\r\n                userPcvs={userPcvs}\r\n                setUserPcvs={setUserPcvs}\r\n                rosesMat={rosesMat}\r\n              />\r\n            </Box>\r\n            <Divider />\r\n            <Typography\r\n              sx={{ marginLeft: 1, marginTop: 1, fontWeight: 'bold' }}\r\n            >\r\n              Legend of coefficients\r\n            </Typography>\r\n            <Box sx={{ margin: '5px 10px' }}>\r\n              <Paper>\r\n                <Stack>\r\n                  <Stack direction='row'>\r\n                    <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                      <circle cx='12' cy='12' r='8' fill='black' />\r\n                      <text\r\n                        fontSize='15'\r\n                        textAnchor='middle'\r\n                        x='12'\r\n                        y='17'\r\n                        fill='white'\r\n                      >\r\n                        k\r\n                      </text>\r\n                    </svg>\r\n                    Fourier coefficient number\r\n                  </Stack>\r\n                  <Stack direction='row'>\r\n                    <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                      <circle cx='12' cy='12' r='6' fill='black' />\r\n                    </svg>\r\n                    MIDI file segments\r\n                  </Stack>\r\n                  <Stack direction='row'>\r\n                    <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                      <circle cx='12' cy='12' r='5' fill='white' />\r\n                      <circle\r\n                        cx='12'\r\n                        cy='12'\r\n                        r='5'\r\n                        fill='none'\r\n                        stroke='black'\r\n                        strokeWidth='3px'\r\n                      />\r\n                    </svg>\r\n                    MIDI playback\r\n                  </Stack>\r\n                  <Stack direction='row'>\r\n                    <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                      <g transform='translate(12,12)'>\r\n                        <line\r\n                          x1='0'\r\n                          x2='0'\r\n                          y1='7'\r\n                          y2='-7'\r\n                          stroke='black'\r\n                          strokeWidth='1.5'\r\n                        ></line>\r\n                        <line\r\n                          x1='7'\r\n                          x2='-7'\r\n                          y1='0'\r\n                          y2='0'\r\n                          stroke='black'\r\n                          strokeWidth='1.5'\r\n                        ></line>\r\n                      </g>\r\n                    </svg>\r\n                    MIDI controller input\r\n                  </Stack>\r\n                  <Stack direction='row'>\r\n                    <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                      <circle\r\n                        cx='12'\r\n                        cy='12'\r\n                        r='7'\r\n                        fill='none'\r\n                        stroke='grey'\r\n                        strokeWidth='2px'\r\n                      />\r\n                    </svg>\r\n                    Prototypes\r\n                  </Stack>\r\n                  <Stack direction='row'>\r\n                    <svg width='24' height='24' viewBox='0 0 24 24'>\r\n                      {rosesMat.length > 0 ? (\r\n                        <polyline\r\n                          transform={`translate(${12},${12})`}\r\n                          fill='none'\r\n                          stroke='black'\r\n                          strokeWidth='1px'\r\n                          points={rosesMat[3][0].points}\r\n                        />\r\n                      ) : null}\r\n                    </svg>\r\n                    Custom pitch-class vectors\r\n                  </Stack>\r\n                </Stack>\r\n              </Paper>\r\n            </Box>\r\n            <Button\r\n              variant='contained'\r\n              size='small'\r\n              color='primary'\r\n              sx={{\r\n                width: '50%',\r\n                margin: 'auto',\r\n                marginTop: 1,\r\n                marginBottom: 1,\r\n              }}\r\n              onClick={() => {\r\n                let zip = new JSZip();\r\n\r\n                const svg = `<svg xmlns='http://www.w3.org/2000/svg' width='${20}' height='${20}'>\r\n                          <circle cx='12' cy='12' r='12' fill='black' />\r\n                        </svg>`;\r\n\r\n                [1, 2, 3, 4, 5, 6].forEach((i) => {\r\n                  //Generate SVGs\r\n                  let circleSVG = generateCircleSVG(i);\r\n                  let wavescapeSVG = generateWavescapeSVG(i);\r\n\r\n                  //Adding files to zip\r\n                  zip.file(`wavescapes/wavescape${i}.svg`, svg);\r\n                  zip.file(`fourier/space${i}.svg`, circleSVG);\r\n                });\r\n\r\n                //Generate zip and save it\r\n                zip.generateAsync({ type: 'blob' }).then(function (content) {\r\n                  saveAs(content, 'images.zip');\r\n                });\r\n              }}\r\n            >\r\n              Export images\r\n            </Button>\r\n          </Drawer>\r\n          <Main open={open}>\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path='/'\r\n                render={() => (\r\n                  <Home\r\n                    setOpen={setOpen}\r\n                    setInAnalysisPage={setInAnalysisPage}\r\n                  ></Home>\r\n                )}\r\n              ></Route>\r\n              <Route\r\n                exact\r\n                path='/theory'\r\n                render={() => (\r\n                  <Theory\r\n                    setOpen={setOpen}\r\n                    setInAnalysisPage={setInAnalysisPage}\r\n                  ></Theory>\r\n                )}\r\n              ></Route>\r\n              <Route\r\n                exact\r\n                path='/analysis'\r\n                render={() => (\r\n                  <Analysis\r\n                    fileName={fileName}\r\n                    setInAnalysisPage={setInAnalysisPage}\r\n                    open={open}\r\n                    setOpen={setOpen}\r\n                    wavescapesData={wavescapesData}\r\n                    coeffTracesData={coeffTracesData}\r\n                    currentSubdiv={currentSubdiv}\r\n                    currentWavescapeSubdiv={Math.floor(\r\n                      (currentSubdiv * circleResolution) / wavescapeResolution\r\n                    )}\r\n                    userPcvs={userPcvs}\r\n                  />\r\n                )}\r\n              ></Route>\r\n            </Switch>\r\n          </Main>\r\n        </Box>\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function parse(input) {\r\n  let pcvs = [];\r\n  //Vectorial notation, distribution -> real numbers\r\n  const openVect = '(';\r\n  const closeVect = ')';\r\n  //Set notation, integers\r\n  const openSet = '{';\r\n  const closeSet = '}';\r\n  //Number divider\r\n  const divider = ',';\r\n\r\n  let isGroup = false;\r\n  let isSet = false;\r\n\r\n  for (let i = 0; i < input.length; i++) {\r\n    if (input[i] === openSet || input[i] === openVect) {\r\n      isGroup = true;\r\n      if (input[i] === openSet) isSet = true;\r\n    }\r\n\r\n    if (isGroup) {\r\n      let stringGroup = [];\r\n      //Slice the current group\r\n      for (\r\n        let j = i + 1;\r\n        input[j] !== closeSet && input[j] !== closeVect;\r\n        j++\r\n      ) {\r\n        //Check if there is an invalid char in the group\r\n        if (\r\n          input[j] !== ',' &&\r\n          input[j] !== '.' &&\r\n          input[j] !== ' ' &&\r\n          isNaN(parseFloat(input[j]))\r\n        )\r\n          throw new Error('Found NaN');\r\n        if (input[j] !== ' ') stringGroup.push(input[j]);\r\n      }\r\n\r\n      stringGroup = stringGroup.join('');\r\n\r\n      //Check if the empty string\r\n      if (stringGroup === '') throw new Error('Empty input');\r\n\r\n      let numeralInput = [];\r\n      let count = 0;\r\n      for (let j = 0; j < stringGroup.length; j++) {\r\n        if (stringGroup[j] === divider) {\r\n          let num = stringGroup.slice(j - count, j);\r\n          //if num.length === 0 => two consecutive comas, invalid input\r\n          if (num.length === 0) throw new Error('Two consecutive comas');\r\n\r\n          numeralInput.push(+num);\r\n          count = -1;\r\n        }\r\n        count++;\r\n      }\r\n      //Last element not cover by the for cycle\r\n      let lastNum = stringGroup.slice(\r\n        stringGroup.length - count,\r\n        stringGroup.length\r\n      );\r\n      //Check if there is a last number\r\n      if (lastNum.length === 0) {\r\n        throw new Error('Missing last number');\r\n      }\r\n      numeralInput.push(+lastNum);\r\n\r\n      if (isSet) {\r\n        let bin = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n        for (let i = 0; i < numeralInput.length; i++) {\r\n          //Set notation: check if num is valid range [0,11]\r\n          if (numeralInput[i] < 0 || numeralInput[i] >= 12) {\r\n            throw new Error('Set notation: out of range');\r\n          }\r\n\r\n          bin[numeralInput[i]] += 1;\r\n        }\r\n        pcvs.push(bin);\r\n      } else {\r\n        //If is in vectorial form, check if there are 12 elements\r\n        if (numeralInput.length !== 12) {\r\n          throw new Error('Vectorial notation: missing elements');\r\n        }\r\n        pcvs.push(numeralInput);\r\n      }\r\n\r\n      isGroup = false;\r\n      isSet = false;\r\n      i += count;\r\n    }\r\n  }\r\n\r\n  if (pcvs.length === 0) throw new Error('Invalid input');\r\n\r\n  return pcvs;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nconst customTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#323232',\r\n    },\r\n    secondary: {\r\n      main: '#fefefe',\r\n    },\r\n    background: {\r\n      default: '#e0e0e0',\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={customTheme}>\r\n      <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}